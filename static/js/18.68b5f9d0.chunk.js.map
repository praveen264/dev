{"version":3,"sources":["views/ev_super_admin/time_table/step_1.js","views/navbars/ev_super_admin/nav_normal_school.js","loader/Loader.js","ev_formik_controls/TextError.js","ev_formik_controls/CheckBox.js","ev_formik_controls/Input.js","ev_formik_controls/MultiSelect.js","ev_formik_controls/RadioButton.js","ev_formik_controls/Select.js","ev_formik_controls/SelectWithKey.js","ev_formik_controls/Textarea.js","ev_formik_controls/EVFormikControl.js"],"names":["time_table","props","school_id","match","params","useState","setGroups","periodsperday","setPeriodsPerDay","academicyear","setAcademicYear","dayallperiodschecked","monday","setMonday","tuesday","setTuesday","wednesday","setWednesday","thursday","setThursday","friday","setFriday","saturday","setSaturday","sunday","setSunday","maxperiods_to_be_displayed","periods","i","push","cl","p_length","val","text","value","p_gap","mondayperiods","tuesdayperiods","wednesdayperiods","thursdayperiods","fridayperiods","saturdayperiods","sundayperiods","day_periods","useEffect","EDU_AXIOS","get","process","then","response","grp","data","groups","length","group_name","catch","error","console","log","Date","getFullYear","Yup","shape","session","required","periods_per_day","start_time","weekends","lunch_after","lunch_duration","weekdays","min","of","trim","breaks","break_after","break_duration","changeDayPeriodCheckStatus","event","period","className","id","md","lg","xl","htmlFor","sm","type","defaultValue","onChange","e","target","size","label","map","item","index","border","disabled","style","textAlign","checked","x","flag","y","selectAllPeriodDay","item_periods","j","visible","setVisible","expand","colorScheme","float","fluid","onClick","color","href","variant","popper","Loader","role","TextError","children","connect","formik","name","options","rest","switcher","getIn","errors","touch","touched","field","option","Fragment","includes","component","handleChange","handleBlur","onBlur","selected","setSelected","final","d","values","placeholder","EVFormikControl","control","MultiSelect"],"mappings":"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","file":"static/js/18.68b5f9d0.chunk.js","sourcesContent":["import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CRow,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CCardFooter,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CMultiSelect,\r\n  CFormFloating,\r\n} from \"@coreui/react-pro\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport './step_1.css';\r\nimport NavBar from \"../../navbars/ev_super_admin/nav_normal_school\";\r\nimport {\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n  faArrowRight,\r\n  faSave,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Loader from \"src/loader/Loader\";\r\nimport EVFormikControl from \"src/ev_formik_controls/EVFormikControl\";\r\nimport EDU_AXIOS from \"src/helpers/edu_axios\";\r\nimport notify from \"src/helpers/notify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst time_table = (props) => {\r\n  let school_id = props.match.params.school_id;\r\n  let [visible, setVisible] = useState(false);\r\n  let [groups, setGroups] = useState([]);\r\n  let [p_per_day, setPPerDay] = useState(0);\r\n  let [periodsperday, setPeriodsPerDay] = useState(10);\r\n  let [checkedindex, setcheckedindex] = useState();\r\n  let [academicyear, setAcademicYear] = useState(\"\");\r\n  var [dayallperiodschecked]=useState([]);\r\n  let [monday,setMonday]=useState();\r\n  let [tuesday,setTuesday]=useState();\r\n  let [wednesday,setWednesday]=useState();\r\n  let [thursday,setThursday]=useState();\r\n  let [friday,setFriday]=useState();\r\n  let [saturday,setSaturday]=useState();\r\n  let [sunday,setSunday]=useState();\r\n  let [tuecheckedvalue,setMondayCheckedValue]=useState(false);\r\n  let maxperiods_to_be_displayed=[];\r\n  let checked=false;\r\n  // open cancle modal box\r\n  let openModalBox = () => {\r\n    setTimeout(() => setVisible(true), 0);\r\n  };\r\n\r\n  // close cancle modal box\r\n  let closeModalBox = () => {\r\n    setTimeout(() => setVisible(false), 0);\r\n  };\r\n\r\n  // no. of periods\r\n  let periods = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    periods.push(i);\r\n  }\r\n\r\n  // no. of periods\r\n  let cl = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    cl.push(i);\r\n  }\r\n\r\n  // length of periods\r\n  let p_length = [];\r\n  for (let i = 30; i <= 180; ) {\r\n    let val = {\r\n      text: i + \" \" + \"Mins\",\r\n      value: i,\r\n    };\r\n    p_length.push(val);\r\n    i = i + 5;\r\n  }\r\n\r\n  // gap b/w periods\r\n  let p_gap = [];\r\n  for (let i = 0; i <= 30; ) {\r\n    p_gap.push(i);\r\n    i = i + 5;\r\n  }\r\n\r\n  //mondayperiods\r\n  let mondayperiods=[];\r\n  let tuesdayperiods=[];\r\n  let wednesdayperiods=[];\r\n  let thursdayperiods=[];\r\n  let fridayperiods=[];\r\n  let saturdayperiods=[];\r\n  let sundayperiods=[];\r\n \r\n  // weekends\r\n  let weekends = [\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n    \"Sunday\",\r\n    \"Monday-Tuesday\",\r\n    \"Tuseday-Wednesday\",\r\n    \"Wednesday-Thursday\",\r\n    \"Thursday-Friday\",\r\n    \"Friday-Saturday\",\r\n    \"Saturday-Sunday\",\r\n  ];\r\n\r\n  let day_periods = [\r\n    { text: \"Period 1\", value: \"1\" },\r\n    { text: \"Period 2\", value: \"2\" },\r\n    { text: \"Period 3\", value: \"3\" },\r\n    { text: \"Period 4\", value: \"4\" },\r\n    { text: \"Period 5\", value: \"5\" },\r\n    { text: \"Period 6\", value: \"6\" },\r\n    { text: \"Period 7\", value: \"7\" },\r\n    { text: \"Period 8\", value: \"8\" },\r\n    { text: \"Period 9\", value: \"9\" },\r\n    { text: \"Period 10\", value: \"10\" },\r\n  ];\r\n\r\n  let weekdays =[\r\n    { text: \"Mon\", value: \"Mon\" },\r\n    { text: \"Tue\", value: \"Tue\"},\r\n    { text: \"Wed\", value: \"Wed\" },\r\n    { text: \"Thu\", value: \"Thu\"},\r\n    { text: \"Fri\", value: \"Fri\" },\r\n    { text: \"Sat\", value: \"Sat\" },\r\n    { text: \"Sun\", value: \"Sun\", disabled: true },\r\n  ];\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(`${process.env.REACT_APP_API_PATH}/cm/get-class/${school_id}`)\r\n      .then((response) => {\r\n        let grp = [];\r\n        if (response.data.data != \"\") {\r\n          for (let i = 0; i < response.data.data.groups.length; i++) {\r\n            grp.push(response.data.data.groups[i].group_name);\r\n          }\r\n        }\r\n        setGroups(grp);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  let session = `${new Date().getFullYear()}/${new Date().getFullYear() + 1}`;\r\n  // formik params\r\n  let initialValues = {\r\n    session: session,\r\n    periods_per_day: \"\",\r\n    start_time: \"\",\r\n    p_length: \"\",\r\n    p_gap: \"\",\r\n    weekends: \"\",\r\n    lunch_after: \"\",\r\n    lunch_duration: \"\",\r\n    weekdays: [],\r\n    breaks: [],\r\n    monday: [],\r\n    tuesday: [],\r\n    wednesday: [],\r\n    thursday: [],\r\n    friday: [],\r\n    saturday: [],\r\n  };\r\n  let onChangeGroups = (e, field, values, setValues) => {\r\n    // update dynamic form\r\n    const breaks = [...values.breaks];\r\n    const numberOfGroups = e.target.value || 0;\r\n    const previousNumber = parseInt(field.value || \"0\");\r\n    if (previousNumber < numberOfGroups) {\r\n      for (let i = previousNumber; i < numberOfGroups; i++) {\r\n        breaks.push({ break_after: \"\", break_duration: \"\" });\r\n      }\r\n    } else {\r\n      for (let i = previousNumber; i >= numberOfGroups; i--) {\r\n        breaks.splice(i, 1);\r\n      }\r\n    }\r\n    setValues({ ...values, breaks });\r\n\r\n    // call formik onChange method\r\n    field.onChange(e);\r\n  };\r\n\r\n  // validation rules of the form fields\r\n  const validationSchema = Yup.object().shape({\r\n    session: Yup.string().required(\"Session is required\"),\r\n    group_name: Yup.string().required(\"Group name is required\"),\r\n    periods_per_day: Yup.string().required(\"Periods is required\"),\r\n    start_time: Yup.string().required(\"Start time is required\"),\r\n    p_length: Yup.string().required(\"Period length is required\"),\r\n    p_gap: Yup.string().required(\"Gap b/w periods is required\"),\r\n    weekends: Yup.string().required(\"weekends is required\"),\r\n    lunch_after: Yup.string().required(\"Lunch after period is required\"),\r\n    lunch_duration: Yup.string().required(\"Lunch duration is required\"),\r\n    weekdays: Yup.array().min(5).of(Yup.string().trim().required()),\r\n    breaks: Yup.array().of(\r\n      Yup.object().shape({\r\n        break_after: Yup.string().required(\"Break after period is required\"),\r\n        break_duration: Yup.string().required(\"Break duration is required\"),\r\n      })\r\n    ),\r\n  });\r\n\r\nlet checkeditemsindex=[];\r\n  // const setallperiodscheckeditems= (val)=>{\r\n  //  alert(val)\r\n  // }\r\n\r\n\r\n  const selectAllPeriodDay = (e,val,i)=>{\r\n    console.log(\"from select all periods\")\r\n //console.log(mondayperiods)\r\n  dayallperiodschecked.push(val);\r\n  console.log(dayallperiodschecked)\r\n  if(e.target.checked==true){\r\n  // setcheckedindex(i);\r\n  if(i==0)\r\n  {\r\n    day_periods.map((x)=>{\r\n      var flag=false;\r\n      mondayperiods.map(y=>{\r\n        if(y==x.text){\r\n           flag=true;\r\n        }\r\n      })\r\n      if(flag==false){\r\n        mondayperiods.push(x.text)\r\n      }\r\n\r\n\r\n    })\r\n    setMonday(true);\r\n    console.log(mondayperiods)\r\n  }\r\n  else if(i==1){\r\n    day_periods.map((x)=>{\r\n      var flag=false;\r\n      tuesdayperiods.map(y=>{\r\n        if(y==x.text){\r\n           flag=true;\r\n        }\r\n      })\r\n      if(flag==false){\r\n        tuesdayperiods.push(x.text)\r\n      }\r\n\r\n\r\n    })\r\n    setTuesday(true);\r\n  }\r\n  else if(i==2){\r\n    day_periods.map((x)=>{\r\n      var flag=false;\r\n      wednesdayperiods.map(y=>{\r\n        if(y==x.text){\r\n           flag=true;\r\n        }\r\n      })\r\n      if(flag==false){\r\n        wednesdayperiods.push(x.text)\r\n      }\r\n\r\n\r\n    })\r\n    setWednesday(true);\r\n  }\r\n  else if(i==3){\r\n    day_periods.map((x)=>{\r\n      var flag=false;\r\n      thursdayperiods.map(y=>{\r\n        if(y==x.text){\r\n           flag=true;\r\n        }\r\n      })\r\n      if(flag==false){\r\n        thursdayperiods.push({\"period\":x.text})\r\n      }\r\n\r\n\r\n    })\r\nsetThursday(true)\r\n  }\r\n  else if(i==4){\r\n    day_periods.map((x)=>{\r\n      var flag=false;\r\n      fridayperiods.map(y=>{\r\n        if(y==x.text){\r\n           flag=true;\r\n        }\r\n      })\r\n      if(flag==false){\r\n        fridayperiods.push({\"period\":x.text})\r\n      }\r\n\r\n\r\n    })\r\n    setFriday(true)\r\n      }\r\n      else if(i==5){\r\n        day_periods.map((x)=>{\r\n          var flag=false;\r\n          saturdayperiods.map(y=>{\r\n            if(y==x.text){\r\n               flag=true;\r\n            }\r\n          })\r\n          if(flag==false){\r\n            saturdayperiods.push({\"period\":x.text})\r\n          }\r\n    \r\n    \r\n        })\r\n        setSaturday(true)\r\n          }\r\n          else if(i==6){\r\n            day_periods.map((x)=>{\r\n              var flag=false;\r\n              sundayperiods.map(y=>{\r\n                if(y==x.text){\r\n                   flag=true;\r\n                }\r\n              })\r\n              if(flag==false){\r\n                sundayperiods.push({\"period\":x.text})\r\n              }\r\n        \r\n        \r\n            })\r\n            setSunday(true)\r\n              }\r\n            }\r\n\r\n            else{\r\n              if(i==0)\r\n              {\r\n                setMonday()\r\n              \r\n              }\r\n              else if(i==1){\r\n                setTuesday();\r\n              }\r\n              else if(i==2){\r\n                setWednesday();\r\n              }\r\n              else if(i==3){\r\n            setThursday()\r\n              }\r\n              else if(i==4){\r\n                setFriday()\r\n                  }\r\n                  else if(i==5){\r\n                    setSaturday()\r\n                      }\r\n                      else if(i==6){\r\n                        setSunday()\r\n                          }\r\n            }\r\n    // alert(val)\r\n  //   dayallperiodschecked.push(val);\r\n   //  alert(dayallperiodschecked)\r\n  // console.log(dayallperiodschecked)\r\n  }\r\n\r\n\r\n  const changeDayPeriodCheckStatus = (event,i,period)=>{\r\n  //  alert('ok'+i+'&'+period)\r\n       if(i==0){\r\n         mondayperiods.push(period);\r\n       }\r\n       else if(i==1){\r\n         tuesdayperiods.push(period)\r\n       }\r\n       if(i==2){\r\n        wednesdayperiods.push(period);\r\n      }\r\n      else if(i==3){\r\n        thursdayperiods.push(period)\r\n      }\r\n      if(i==4){\r\n        fridayperiods.push(period);\r\n      }\r\n      else if(i==5){\r\n        saturdayperiods.push(period)\r\n      }\r\n      if(i==6){\r\n        sundayperiods.push(period);\r\n      }\r\n     \r\n      console.log(mondayperiods)\r\n  }\r\n\r\n  // submit form\r\n  const onSubmit = async (values, { resetForm }) => {\r\n    await EDU_AXIOS.post(\r\n      process.env.REACT_APP_API_PATH + \"/ttm/initialize-time-table\",\r\n      {\r\n        school_id: school_id,\r\n        acadmic_year: values.session,\r\n        group: values.group_name,\r\n        prd_per_day: values.periods_per_day,\r\n        start_time: values.start_time,\r\n        lunch_after: values.lunch_after,\r\n        lunch_duration: values.lunch_duration,\r\n        period_length: values.p_length,\r\n        gap: values.p_gap,\r\n        weekends: values.weekends,\r\n        breaks: values.breaks,\r\n        working_days: values.weekdays,\r\n        monday: values.monday,\r\n        tuesday: values.tuesday,\r\n        wednesday: values.wednesday,\r\n        thursday: values.thursday,\r\n        friday: values.friday,\r\n        saturday: values.saturday,\r\n      }\r\n    )\r\n      .then(async (res) => {\r\n        resetForm({ values: \"\" });\r\n        notify(\"success\", res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        notify(\"error\", err);\r\n      });\r\n  };\r\n  return (\r\n    <CCardGroup>\r\n      <CCard className=\"p-2\">\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol>\r\n              <NavBar id={school_id} />\r\n            </CCol>\r\n          </CRow>\r\n          <CRow>\r\n            <CCol md=\"8\" lg=\"4\" xl=\"8\">\r\n              <h5>Time Table [ Step 1 ]</h5>\r\n            </CCol>\r\n          </CRow>\r\n          <p className=\"text-muted\">Create Time Table</p>\r\n          <CRow className=\"mb-3\">\r\n  <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label required-field\">Academic Year</CFormLabel>\r\n  <CCol sm={5}>\r\n    <CFormInput type=\"text\" id=\"staticEmail\" defaultValue={academicyear} onChange={(e)=>setAcademicYear(e.target.value)} />\r\n  </CCol>\r\n</CRow>\r\n\r\n<CRow className=\"mb-3\">\r\n  <CFormLabel htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Groups</CFormLabel>\r\n  <CCol sm={5}>\r\n  <CFormSelect size=\"sm\" className=\"mb-3\" aria-label=\"Small select example\">\r\n  <option>Open this select menu</option>\r\n  <option value=\"1\">One</option>\r\n  <option value=\"2\">Two</option>\r\n  <option value=\"3\">Three</option>\r\n</CFormSelect>\r\n    </CCol>\r\n</CRow>\r\n<CRow className=\"mb-3\">\r\n  <CFormLabel htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Periods Per Day (Max)</CFormLabel>\r\n  <CCol sm={5}>\r\n  <CFormSelect size=\"sm\" onChange={(event)=>setPeriodsPerDay(event.target.value)} className=\"mb-3\" aria-label=\"Small select example\">\r\n  <option>Open this select menu</option>\r\n  <option value=\"1\">One</option>\r\n  <option value=\"2\">Two</option>\r\n  <option value=\"3\">Three</option>\r\n  <option value=\"4\">Four</option>\r\n  <option value=\"5\">Five</option>\r\n  <option value=\"6\">Six</option>\r\n  <option value=\"7\">Seven</option>\r\n  <option value=\"8\">Eight</option>\r\n  <option value=\"9\">Nine</option>\r\n  <option value=\"10\">Ten</option>\r\n</CFormSelect>\r\n    </CCol>\r\n</CRow>\r\n\r\n<CRow className=\"mb-3\">\r\n  <CFormLabel htmlFor=\"starttime\" className=\"col-sm-2 col-form-label\">Start Time</CFormLabel>\r\n  <CCol sm={5}>\r\n    <CFormInput type=\"time\" id=\"starttime\"   />\r\n  </CCol>\r\n</CRow>\r\n\r\n\r\n<CRow className=\"mb-3\">\r\n  <CFormLabel htmlFor=\"periodlength\" className=\"col-sm-2 col-form-label\">Priod Length</CFormLabel>\r\n  <CCol sm={5}>\r\n    <CFormInput type=\"text\" id=\"periodlength\"   />\r\n  </CCol>\r\n</CRow>\r\n\r\n\r\n<CRow className=\"mb-3\">\r\n  <CFormLabel htmlFor=\"gapbetweenperiods\" className=\"col-sm-2 col-form-label\">Gap between periods</CFormLabel>\r\n  <CCol sm={5}>\r\n    <CFormInput type=\"text\" id=\"gapbetweenperiods\"   />\r\n  </CCol>\r\n</CRow>\r\n\r\n\r\n<CRow className=\"mb-3\">\r\n  <CFormLabel htmlFor=\"lunch\" className=\"col-sm-2 col-form-label\">Lunch</CFormLabel>\r\n  <CCol sm={3}>\r\n  After Period  <CFormInput type=\"text\" id=\"lunch\"   />\r\n  </CCol>\r\n  <CCol sm={3}>\r\n   Duration <CFormInput type=\"text\" id=\"lunch\"   />\r\n  </CCol>\r\n  <CCol sm={3}>\r\n Add /Remove breaks <CFormInput type=\"button\"  defaultValue=\"Add breaks\" />\r\n  </CCol>\r\n \r\n</CRow>\r\n\r\n\r\n<CRow className=\"mb-4\">\r\n  <CFormLabel htmlFor=\"workingdaysperweek\" className=\"col-sm-3 col-mb-3 col-form-label\">Working Days Per Week</CFormLabel>\r\n  <CCol sm={1} id=\"workingdaysperweek\">\r\n  <CFormCheck id=\"flexCheckDefault\" label=\"Monday\"/>\r\n  </CCol>\r\n  &nbsp;\r\n  <CCol sm={1}>\r\n  <CFormCheck id=\"flexCheckDefault\" label=\"Tuesday\"/>\r\n  </CCol>\r\n  &nbsp;\r\n  <CCol sm={1}>\r\n  <CFormCheck id=\"flexCheckDefault\" label=\"Wednesday\"/>\r\n  </CCol>\r\n  &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;\r\n  <CCol sm={1}>\r\n  <CFormCheck id=\"flexCheckDefault\" label=\"Thursday\"/>\r\n  </CCol>&nbsp;\r\n  <CCol sm={1}>\r\n  <CFormCheck id=\"flexCheckDefault\" label=\"Friday\"/>\r\n  </CCol>&nbsp;\r\n  <CCol sm={1}>\r\n  <CFormCheck id=\"flexCheckDefault\" label=\"Saturday\"/>\r\n  </CCol>&nbsp;\r\n  <CCol sm={1}>\r\n  <CFormCheck id=\"flexCheckDefault\" label=\"Sunday\"/>\r\n  </CCol>\r\n</CRow>\r\n\r\n{\r\n  day_periods.map((item,index)=>{\r\n    index<=periodsperday-1?mondayperiods.push(day_periods[index].text):''\r\n     index<=periodsperday-1?maxperiods_to_be_displayed.push({text:day_periods[index].text,value:day_periods[index].value}):''\r\n  })\r\n}\r\n{/* {\r\n  maxperiods_to_be_displayed.map(item=>{\r\n    return item.text\r\n  })\r\n\r\n} */}\r\n \r\n<table border=\"1\">\r\n  <tr><td>Periods-&gt;<br></br>Days-&#8595;</td>\r\n  {\r\n    maxperiods_to_be_displayed.map((item,index)=>{\r\n     return <td>{item.text}</td>\r\n    })\r\n  }\r\n{/*   \r\n \r\n  {\r\n    checkeditemsindex.map(item=>{\r\n      return item\r\n    })\r\n  } */}\r\n \r\n  </tr>\r\n  {\r\n    weekdays.map((item,i)=>{\r\n      return <tr>\r\n      \r\n        <td style={{textAlign:\"center\"}}><tr><td>{item.value}</td><td><input type=\"checkbox\" onChange={(event)=>selectAllPeriodDay(event,event.target.value,i)} value={item.value}></input></td></tr></td>\r\n      \r\n       {\r\n          maxperiods_to_be_displayed.map((item_periods,j)=>{\r\n            return <td>\r\n              {/* {item_periods.text} */}\r\n            \r\n             {/* {\r\n                    dayallperiodschecked.map((periodchecked)=>{\r\n                      periodchecked==item.value?\"true\":\"\"\r\n\r\n                    })\r\n             } */}\r\n     \r\n       {\r\n         i==0? \r\n     <input  text-align=\"center\" type=\"checkbox\" value={item_periods.text} onChange={(event)=>changeDayPeriodCheckStatus(event,i,item_periods.text)} checked={monday} ></input>\r\n         :\r\n         i==1? <input  text-align=\"center\" type=\"checkbox\"  value={item_periods.text}onChange={(event)=>changeDayPeriodCheckStatus(event,i,item_periods.text)} checked={tuesday}></input>:\r\n         i==2? <input  text-align=\"center\" type=\"checkbox\"  value={item_periods.text}onChange={(event)=>changeDayPeriodCheckStatus(event,i,item_periods.text)} checked={wednesday} ></input>:\r\n         i==3? <input  text-align=\"center\" type=\"checkbox\"  value={item_periods.text}onChange={(event)=>changeDayPeriodCheckStatus(event,i,item_periods.text)}  checked={thursday}></input>:\r\n         i==4? <input  text-align=\"center\" type=\"checkbox\" value={item_periods.text} onChange={(event)=>changeDayPeriodCheckStatus(event,i,item_periods.text)}  checked={friday}></input>:\r\n         i==5? <input  text-align=\"center\" type=\"checkbox\"  value={item_periods.text} onChange={(event)=>changeDayPeriodCheckStatus(event,i,item_periods.text)} checked={saturday}></input>:\r\n         i==6? <input  text-align=\"center\" type=\"checkbox\"  value={item_periods.text} onChange={(event)=>changeDayPeriodCheckStatus(event,i,item_periods.text)} checked={sunday}></input>:\r\n         <input  text-align=\"center\" type=\"checkbox\"  ></input>\r\n       }\r\n               \r\n               \r\n              \r\n              </td>\r\n          })\r\n          }\r\n      </tr>\r\n    })\r\n  }\r\n</table>\r\n\r\n\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCardGroup>\r\n  );\r\n};\r\n\r\nexport default time_table;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CNavbar,\r\n  CNavbarToggler,\r\n  CNavbarNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CContainer,\r\n  CCollapse,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n} from \"@coreui/react-pro\";\r\nexport default (props) => {\r\n  let id = props.id;\r\n  const [visible, setVisible] = useState(false);\r\n  return (\r\n    <>\r\n      <CNavbar\r\n        expand=\"\"\r\n        colorScheme=\"light\"\r\n        className=\"bg-secondry\"\r\n        style={{ float: \"right\" }}\r\n      >\r\n        <CContainer fluid>\r\n          <CNavbarToggler onClick={() => setVisible(!visible)} />\r\n          <CCollapse className=\"navbar-collapse\" visible={visible}>\r\n            <CNavbarNav>\r\n              <a color=\"secondary\" className=\"btn btn-default\"  href={`/#/school-management/get-users/${id}`}>User Management</a>\r\n            {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n            <CDropdownToggle color=\"secondary\" >\r\n                 User Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/user-management/${id}`}\r\n                  >\r\n                   Add Users\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/get-users/${id}`}\r\n                  >\r\n                   get Users\r\n                  </CDropdownItem>\r\n                  </CDropdownMenu>\r\n                  </CDropdown> */}\r\n                  <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\" >\r\n                  Class Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-classes/${id}`}\r\n                  >\r\n                    Create/Edit Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/view-classes/${id}`}\r\n                  >\r\n                    View Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-sections/${id}`}\r\n                  >\r\n                    Create Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/manage-sections/${id}`}\r\n                  >\r\n                    Manage Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                    Class Mapping\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Subject Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  {/* <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Add Subject\r\n                  </CDropdownItem> */}\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Assign Subject To Class\r\n                  </CDropdownItem>\r\n                  {/* <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                    All Subjects\r\n                  </CDropdownItem> */}\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n         \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Teacher Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                    Add Teacher\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Section Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown> */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Academic Calendar Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Academic Year\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Holiday calendar & holiday list\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    Exam calendar\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Lesson Planning\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/lesson-management/get-subjects/${id}`}\r\n                  >\r\n                   Annual Lesson Plan\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Class Structure Creation\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Constraints management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                 School level constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Class wise constraints (inflow from class teacher)\r\n                  </CDropdownItem>\r\n                 \r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n            \r\n             \r\n              {/*<CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Student Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Students</CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Subjects</CDropdownItem>\r\n                </CDropdownMenu>\r\n  </CDropdown>*/}\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Calender Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/add-holiday/${id}`}\r\n                  >\r\n                    Add Holiday\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/view-calender/${id}`}\r\n                  >\r\n                    View Calender\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n          \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">Time Table</CDropdownToggle>\r\n                {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Data fitness – system checks the fitness of data\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown> */} \r\n               \r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Generate Annual Timetable\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n                <CDropdownMenu>\r\n                {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Update weekly time table.\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n                  <CDropdownItem href={`/#/time-table-management/step-1/${id}`}>\r\n                    Time Table (Initialization)\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/time-table-list/${id}`}\r\n                  >\r\n                    Time Table List\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href={`/#/time-table-management/step-2/${id}`}>\r\n                    General Constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href={`/#/time-table-management/step-2/${id}`}>Class Constraints</CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/create-time-table-admin/${id}`}\r\n                  >\r\n                    Generate Time Table (Admin)\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/generate-time-table-school/${id}`}\r\n                  >\r\n                    Generate Time Table (School)\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n            </CNavbarNav>\r\n          </CCollapse>\r\n        </CContainer>\r\n      </CNavbar>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>;\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nfunction TextError(props) {\r\n  return <div className=\"invalid-feedback\">{props.children}</div>;\r\n}\r\n\r\nexport default TextError;\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst CheckBox = (props) => {\r\n  const { formik, name, options, switcher, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={\r\n                    field.value ? field.value.includes(option.value) : \"\"\r\n                  }\r\n                  label={option.text}\r\n                  disabled={option.disabled ? option.disabled : false}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}\r\n                  }`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(CheckBox);\r\n","import React from \"react\";\r\nimport { CFormInput } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Input(props) {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <CFormInput\r\n        id={id}\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        {...rest}\r\n        className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n      />\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(Input);\r\n","import React, { useState } from \"react\";\r\nimport { CMultiSelect } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn, useField } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Multiselect = (props) => {\r\n  let { formik, name, id, options, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  const [selected, setSelected] = useState([]);\r\n  let final = [];\r\n  return (\r\n    <>\r\n      <Field name={name} id={id} onChange={handleChange} onBlur={handleBlur}>\r\n        {({ field }) => {\r\n          selected.map((d) => {\r\n            final.push(d.value);\r\n            return final;\r\n          });\r\n          formik.values[`${name}`] = final;\r\n\r\n          return (\r\n            <CMultiSelect\r\n              {...field}\r\n              {...rest}\r\n              options={options}\r\n              onChange={setSelected}\r\n              className={`form-control  ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Multiselect);\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst RadioButton = (props) => {\r\n  const { formik, name, options, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  type=\"radio\"\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={field.value === option.value}\r\n                  label={option.text}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(RadioButton);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Select = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option} value={option}>\r\n                    {option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Select);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst SelectWithKey = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.text}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(SelectWithKey);\r\n","import React from \"react\";\r\nimport { CFormTextarea } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Textarea = (props) => {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormTextarea\r\n              id={id}\r\n              name={name}\r\n              {...field}\r\n              {...rest}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Textarea);\r\n","import React from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\nimport Input from \"./Input\";\r\nimport MultiSelect from \"./MultiSelect\";\r\nimport RadioButton from \"./RadioButton\";\r\nimport Select from \"./Select\";\r\nimport SelectWithKey from \"./SelectWithKey\";\r\nimport Textarea from \"./Textarea\";\r\nfunction EVFormikControl(props) {\r\n  const { control, ...rest } = props;\r\n  switch (control) {\r\n    case \"input\":\r\n      return <Input {...rest} />;\r\n    case \"textarea\":\r\n      return <Textarea {...rest} />;\r\n    case \"select\":\r\n      return <Select {...rest} />;\r\n    case \"selectwithkey\":\r\n      return <SelectWithKey {...rest} />;\r\n    case \"multiselect\":\r\n      return <MultiSelect {...rest} />;\r\n    case \"radio\":\r\n      return <RadioButton {...rest} />;\r\n    case \"checkbox\":\r\n      return <CheckBox {...rest} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default EVFormikControl;\r\n"],"sourceRoot":""}