{"version":3,"sources":["../node_modules/tiny-warning/dist/tiny-warning.esm.js","views/ev_super_admin/school_management/edit_school_dashboard.js","views/ev_super_admin/school_management/all-normal-schools/all-normal-schools.js","helpers/notify.js","helpers/edu_axios.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["warning","condition","message","EditSchoolDashboard","config","bucketName","process","dirName","region","accessKeyId","secretAccessKey","useStyles","makeStyles","theme","root","margin","spacing","input","display","formControl","minWidth","maxWidth","chips","flexWrap","chip","noLabel","marginTop","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","classs","ManageSchool","useState","state","setstate","screen","setScreen","schoolId","setSchoolId","EDU_AXIOS","get","then","resp","console","log","data","length","classes","userID","setUSerID","school_name","setSchool_name","address","setAddress","pin","setPin","website","setWebsite","email","setEmail","mobile","setMobile","setSelectedFile","academics_from","setAcademics_from","academics_to","setacademics_to","license_start","setLicense_start","license_end","setLicense_end","total_users","setTotal_users","password","setPassword","password2","setPassword2","state_name","setState_name","statecode","setStateCode","citycode","setCityCode","country_code","setCountry_code","city","setCity","stateName","setStateName","cityName","setCityName","setRegion","visible","setVisible","React","classNames","setClassNames","countrylist","setCountryList","chainSchools","setChainSchools","chainSchoolId","setCahinSchoolId","logoName","setLogoName","userIDErr","setUserIDErr","schoolNameErr","setSchoolNameErr","pinErr","setPinErr","stateErr","setStateErr","cityErr","setCityErr","countryErr","setCountryErr","addressErr","setAddressErr","webErr","setWebErr","emailErr","setEmailErr","mobileErr","setMobileErr","passwordErr","setPasswordErr","password2Err","setPassword2Err","calStartErr","setCalStartErr","calEndErr","setCalEndErr","academicStartErr","setacAdemicStartErr","academicEndErr","setAcademicEndErr","totalErr","setTotalErr","useEffect","response","countryArray","catch","error","stateArray","uploadLogo","file","a","uploadFile","key","err","respo","cityArray","class_name","total_student","inputList","setInputList","onSubmit","e","preventDefault","formValidation","values","picUp","post","name","username","pin_code","acadmics_from","acadmics_to","license_type","logo","chain_school_id","res","target","reset","isValid","trim","test","UserIDinvalid","UserIDrequired","calShort","cal","start","end","total","schoolNameShort","pinshort","pinreq","addressShort","emailinvalid","emailrequired","mobshort","mobreq","passshort","passreq","pass2short","pass2req","history","useHistory","title","columns","field","options","search","paging","filtering","exportButton","actionsColumnIndex","rowStyle","x","tableData","id","backgroundColor","pageSize","emptyRowsWhenPaging","pageSizeOptions","actions","icon","faEye","fontSize","tooltip","onClick","event","rowData","push","faEdit","school_id","substring","country","md","lg","xl","className","htmlFor","type","placeholder","value","onChange","Object","keys","map","color","disabled","rows","countryCode","selected","state_code","custom","ch","i","index","list","handleInputChange","labelId","variant","multiple","renderValue","join","checked","indexOf","primary","files","block","float","faTimesCircle","onDismiss","to","faCheckCircle","marginLeft","alert","patch","faSave","toast","require","module","exports","info","success","warn","dark","notify","axios","default","token","localStorage","getItem","JSON","parse","create","timeout","headers","authorization","interceptors","use","status","removeItem","window","location","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/27.1840ac32.chunk.js","sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction EditSchoolDashboard() {\r\n \r\n  return (\r\n    <>\r\n    ghfgh\r\n    </>\r\n  );\r\n}\r\nexport default EditSchoolDashboard;","import React from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { CCard, CCardBody, CCol, CRow  } from \"@coreui/react-pro\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { faEdit, faEye } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport EDU_AXIOS from \"src/helpers/edu_axios\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport EditSchoolDashboard from \"../edit_school_dashboard\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport {\r\n  CButton,\r\n \r\n  CCardFooter,\r\n  \r\n  CFormInput,\r\n  \r\n  CFormLabel,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CFormTextarea,\r\n} from \"@coreui/react-pro\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  faSave,\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst config = {\r\n  bucketName: process.env.REACT_APP_BUCKET_NAME,\r\n  dirName: process.env.REACT_APP_SCHOOL_LOGO_DIR_NAME,\r\n  region: process.env.REACT_APP_REGION,\r\n  accessKeyId: process.env.REACT_APP_ACCESS_ID,\r\n  secretAccessKey: process.env.REACT_APP_ACCESS_KEY,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst classs = [\"SMS\", \"LMS\", \"Video Conferencing\", \"Demo\"];\r\nfunction ManageSchool() {\r\n\r\n\r\n\r\n  let items = [];\r\n  let url =\r\n    process.env.REACT_APP_API_PATH + \"/auth/get-normal-schools\";\r\n  const [state, setstate] = useState([])\r\n  const [screen, setScreen] = useState(\"\")\r\n  const [schoolId, setSchoolId] = useState(\"\")\r\n\r\n  EDU_AXIOS.get(url)\r\n    .then((resp) => {\r\n      console.log(resp);\r\n     setstate(resp.data.data)\r\n    });\r\n  console.log(state.length);\r\n\r\nconst testing = () =>{\r\n//  alert(school_name)\r\n // alert(schoolId)\r\n alert(region)\r\n EDU_AXIOS.patch( ` ${process.env.REACT_APP_API_PATH}/auth/edit-normal-school/${schoolId}`,\r\n  {\r\n    name: school_name,\r\n    username: userID,\r\n    password: password,\r\n    email: email,\r\n    mobile: mobile,\r\n    address: address,\r\n    pin_code: pin,\r\n    state: stateName,\r\n    city: cityName,\r\n    website: website,\r\n    acadmics_from: academics_from,\r\n    acadmics_to: academics_to,\r\n    license_start: license_start,\r\n    license_end: license_end,\r\n    classes: inputList,\r\n    total_users: total_users,\r\n    license_type: classNames,\r\n    logo: logoName,\r\n    chain_school_id: chainSchoolId,\r\n    region:region\r\n  }\r\n ).then((res)=>{\r\n  // alert(\"datas edited successfully\")\r\n   console.log(res)\r\n })\r\n}\r\n  const edit = (school_id) => {\r\n   // alert(school_id)\r\n    setSchoolId(school_id);\r\n    //  history.push('normal-school/'+school_id);\r\n    setScreen(\"edit\")\r\n    EDU_AXIOS.get( ` ${process.env.REACT_APP_API_PATH}/auth/get-normal-school/${school_id}`)\r\n    .then((resp) => {\r\n      // console.log(\"getting teachers dtaa\");\r\n       console.log(resp);\r\n      //alert(resp.data.data.username);\r\n      setSchool_name(resp.data.data.name);\r\n     setUSerID(resp.data.data.username);\r\n     // setstate(resp.data.data)\r\n     setPassword(resp.data.data.password);\r\n     setEmail(resp.data.data.email)\r\n     setMobile(resp.data.data.mobile)\r\n     setAddress(resp.data.data.address)\r\n     setPin(resp.data.data.pin_code)\r\n    //  setCountryList(resp.data.data.country);\r\n    setWebsite(resp.data.data.website)\r\n    setTotal_users(resp.data.data.total_users);\r\n    setLicense_start(resp.data.data.license_start.substring(0,10));\r\n    setLicense_end(resp.data.data.license_end.substring(0,10));\r\n    setCountry_code(resp.data.data.country)\r\n    setAcademics_from(resp.data.data.acadmics_from);\r\n    setacademics_to(resp.data.data.acadmics_to);\r\n    setCityCode(resp.data.data.city);\r\n    setCityName(resp.data.data.city)\r\n  setStateCode(resp.data.data.state);\r\n  setStateName(resp.data.data.state);\r\n  setWebsite(resp.data.data.website);\r\n  setCahinSchoolId(resp.data.data.chain_school_id);\r\n  setRegion(resp.data.data.region)\r\n  //alert(resp.data.data.region)\r\n  //  alert(resp.data.data.city);\r\n  //  alert(stateName)\r\n    });\r\n  }\r\n  const classes = useStyles();\r\n  const [userID, setUSerID] = useState(\"\");\r\n  const [school_name, setSchool_name] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [pin, setPin] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(\"\");\r\n  const [academics_from, setAcademics_from] = useState(\"\");\r\n  const [academics_to, setacademics_to] = useState(\"\");\r\n  const [license_start, setLicense_start] = useState(\"\");\r\n  const [license_end, setLicense_end] = useState(\"\");\r\n  const [total_users, setTotal_users] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [state_name, setState_name] = useState([]);\r\n  const [statecode,setStateCode]=useState(\"\");\r\n  const [citycode,setCityCode]=useState(\"\");\r\n  const [country_code, setCountry_code] = useState();\r\n  const [city, setCity] = useState([]);\r\n  const [stateName, setStateName] = useState();\r\n  const [cityName, setCityName] = useState();\r\n  const [region, setRegion] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const [classNames, setClassNames] = React.useState([]);\r\n  const [countrylist, setCountryList] = useState([]);\r\n  const [chainSchools, setChainSchools] = useState([]);\r\n  const [chainSchoolId, setCahinSchoolId] = useState(\"\");\r\n  const [logoName, setLogoName] = useState(\"\");\r\n\r\n  // Defining Errors\r\n  const [userIDErr, setUserIDErr] = useState({});\r\n  const [schoolNameErr, setSchoolNameErr] = useState({});\r\n  const [pinErr, setPinErr] = useState({});\r\n  const [stateErr, setStateErr] = useState({});\r\n  const [cityErr, setCityErr] = useState({});\r\n  const [countryErr, setCountryErr] = useState({});\r\n  const [addressErr, setAddressErr] = useState({});\r\n  const [webErr, setWebErr] = useState({});\r\n  const [emailErr, setEmailErr] = useState({});\r\n  const [mobileErr, setMobileErr] = useState({});\r\n  const [passwordErr, setPasswordErr] = useState({});\r\n  const [password2Err, setPassword2Err] = useState({});\r\n  const [calStartErr, setCalStartErr] = useState({});\r\n  const [calEndErr, setCalEndErr] = useState({});\r\n  const [academicStartErr, setacAdemicStartErr] = useState({});\r\n  const [academicEndErr, setAcademicEndErr] = useState({});\r\n  const [totalErr, setTotalErr] = useState({});\r\n\r\n  // to get country list from server\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(process.env.REACT_APP_API_PATH + \"/auth/get-countries\")\r\n      .then((response) => {\r\n        let countryArray = response.data.data;\r\n        setCountryList(countryArray);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // to get chain school list from server\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(\r\n      process.env.REACT_APP_API_PATH + \"/auth/get-chain-school-list\"\r\n    )\r\n      .then((response) => {\r\n        setChainSchools(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // set country code before calling state list api\r\n  const selectState = (e) => {\r\n    var countryCode = e.target.value;\r\n    setCountry_code(countryCode);\r\n  };\r\n\r\n  // get states by country code\r\n  useEffect(() => {\r\n    // check country code is set or not\r\n    if (country_code) {\r\n      EDU_AXIOS.get(\r\n        process.env.REACT_APP_API_PATH + `/auth/get-states/${country_code}`\r\n      )\r\n        .then((resp) => {\r\n          let stateArray = resp.data.data;\r\n          setState_name(stateArray);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [country_code]);\r\n\r\n  let uploadLogo = async (file) => {\r\n    return uploadFile(file, config)\r\n      .then((data) => {\r\n        return data.key;\r\n      })\r\n      .catch((err) => console.error(err, \"\"));\r\n  };\r\n\r\n  // get cities of a state\r\n  useEffect(() => {\r\n    // check coundry code and state name is set or not\r\n    if (stateName) {\r\n      EDU_AXIOS.get(\r\n        process.env.REACT_APP_API_PATH +\r\n          `/auth/get-cities/${country_code}/${stateName}`\r\n      )\r\n        //EDU_AXIOS.get(cityURL)\r\n        .then((respo) => {\r\n          let cityArray = respo.data.data;\r\n\r\n          setCity(cityArray);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [stateName]);\r\n\r\n  const handleChange = (event) => {\r\n    setClassNames(event.target.value);\r\n  };\r\n\r\n  const [inputList, setInputList] = useState([\r\n    { class_name: \"\", total_student: \"\" },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n    // console.log(inputList,\"B\");\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { class_name: \"\", total_student: \"\" }]);\r\n  };\r\n\r\n  // get a file to upload\r\n  const handleFileInput = (e) => {\r\n    setLogoName(e.target.files[0].name);\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n  const handleUpload = async (file) => {\r\n    uploadFile(file, config)\r\n      .then((data) => console.log(data, \"Logo uploaded successfully\"))\r\n      .catch((err) => console.error(err, \"\"));\r\n  };\r\n  const onSubmit = async (e) => {\r\n  \r\n    e.preventDefault();\r\n    const isValid = await formValidation();\r\n    // check form is valid or not\r\n    if (isValid) {\r\n      let upData = await uploadLogo(values.picUp);\r\n      return await EDU_AXIOS.post(\r\n        process.env.REACT_APP_API_PATH + \"/auth/create-normal-school\",\r\n        {\r\n          name: school_name,\r\n          username: userID,\r\n          password: password,\r\n          email: email,\r\n          mobile: mobile,\r\n          address: address,\r\n          pin_code: pin,\r\n          state: stateName,\r\n          city: cityName,\r\n          website: website,\r\n          acadmics_from: academics_from,\r\n          acadmics_to: academics_to,\r\n          license_start: license_start,\r\n          license_end: license_end,\r\n          classes: inputList,\r\n          total_users: total_users,\r\n          license_type: classNames,\r\n          logo: logoName,\r\n          chain_school_id: chainSchoolId,\r\n          region:region\r\n        }\r\n      )\r\n        .then(async (res) => {\r\n          e.target.reset();\r\n        //  alert(res.data.message);\r\n        })\r\n        .catch((err) => {\r\n        //  alert(err);\r\n        });\r\n    }\r\n  };\r\n  const formValidation = async () => {\r\n    const userIDErr = {};\r\n    const schoolNameErr = {};\r\n    const pinErr = {};\r\n    const webErr = {};\r\n    const emailErr = {};\r\n    const mobileErr = {};\r\n    const passwordErr = {};\r\n    const password2Err = {};\r\n    const stateErr = {};\r\n    const cityErr = {};\r\n    const countryErr = {};\r\n    const addressErr = {};\r\n    const calStartErr = {};\r\n    const calEndErr = {};\r\n    const academicStartErr = {};\r\n    const academicEndErr = {};\r\n    const totalErr = {};\r\n\r\n    let isValid = true;\r\n    // Validations for different fields\r\n\r\n    if (!userID.trim()) {\r\n      userIDErr.UserIDrequired = \"Required\";\r\n    } else if (/[^a-zA-Z0-9_.]/.test(userID) || userID.trim().length < 6) {\r\n      userIDErr.UserIDinvalid =\r\n        \"UserID is Invalid (@ , # not supported) / < 6 Digits\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!license_start.trim()) {\r\n      calStartErr.calShort = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!license_end.trim()) {\r\n      calEndErr.cal = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!academics_from.trim()) {\r\n      academicStartErr.start = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!academics_to.trim()) {\r\n      academicEndErr.end = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!total_users.trim()) {\r\n      totalErr.total = \" Required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!school_name.trim()) {\r\n      schoolNameErr.schoolNameShort = \" Required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!pin.trim()) {\r\n      pinErr.pinreq = \" Required\";\r\n      isValid = false;\r\n    } else if (!/[123456789][0-9]{5}/.test(pin) || pin.trim().length > 6) {\r\n      pinErr.pinshort = \"PIN should be 6 Digits only / PIN Can't Start with 0\";\r\n      isValid = false;\r\n    }\r\n    if (!address.trim()) {\r\n      addressErr.addressShort = \" Required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!email.trim()) {\r\n      emailErr.emailrequired = \"Required\";\r\n      isValid = false;\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      emailErr.emailinvalid = \"Email address is invalid\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!mobile.trim()) {\r\n      mobileErr.mobreq = \" Required\";\r\n      isValid = false;\r\n    } else if (mobile.trim().length > 10 || !/[6789][0-9]{9}/.test(mobile)) {\r\n      mobileErr.mobshort = \"Mobile number must be Valid & of 10 Digits Only\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!password.trim()) {\r\n      passwordErr.passreq = \" Required\";\r\n      isValid = false;\r\n    } else if (password.trim().length < 6 || password.trim().length > 20) {\r\n      passwordErr.passshort = \"Invalid / < 6 Digits\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!password2.trim()) {\r\n      passwordErr.pass2req = \" \";\r\n      isValid = false;\r\n    } else if (password2 !== password) {\r\n      password2Err.pass2short = \"Doesn't Match \";\r\n      isValid = false;\r\n    }\r\n    // setting errors in validation\r\n    setUserIDErr(userIDErr);\r\n    setSchoolNameErr(schoolNameErr);\r\n    setPinErr(pinErr);\r\n    setWebErr(webErr);\r\n    setEmailErr(emailErr);\r\n    setMobileErr(mobileErr);\r\n    setPasswordErr(passwordErr);\r\n    setPassword2Err(password2Err);\r\n    setCityErr(cityErr);\r\n    setStateErr(stateErr);\r\n    setCountryErr(countryErr);\r\n    setAddressErr(addressErr);\r\n    setCalStartErr(calStartErr);\r\n    setCalEndErr(calEndErr);\r\n    setacAdemicStartErr(academicStartErr);\r\n    setAcademicEndErr(academicEndErr);\r\n    setTotalErr(totalErr);\r\n    return isValid;\r\n  };\r\n  let history = useHistory();\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",\r\n    },\r\n    {\r\n      title: \"Username\",\r\n      field: \"username\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      field: \"email\",\r\n    },\r\n    {\r\n      title: \"License Start\",\r\n      field: \"license_start\",\r\n    },\r\n    {\r\n      title: \"License End\",\r\n      field: \"license_end\",\r\n    },\r\n  ];\r\n  return (\r\n    <CCard>\r\n      <CCardBody>\r\n        {/* {\r\n          state.map((items)=>{\r\n            return <p>{items.name}</p>\r\n          })\r\n        } */}\r\n      {\r\n            screen != \"edit\" ? <MaterialTable\r\n            title=\"Normal Schools \"\r\n            data={\r\n             state\r\n            }\r\n            columns={columns}\r\n            // onSelectionChange={(rows) => setSelectedRows(rows)}\r\n            options={{\r\n              search: true,\r\n              paging: true,\r\n              filtering: false,\r\n              exportButton: true,\r\n              actionsColumnIndex: 6,\r\n              rowStyle: (x) => {\r\n                if (x.tableData.id % 2) {\r\n                  return { backgroundColor: \"#f9f9f9\" };\r\n                }\r\n              },\r\n              pageSize: 20,\r\n              emptyRowsWhenPaging: true,\r\n              pageSizeOptions: [20, 40, 60],\r\n            }}\r\n            actions={[\r\n              {\r\n                icon: () => (\r\n                  <FontAwesomeIcon icon={faEye} style={{ fontSize: \"1rem\" }} />\r\n                ),\r\n                tooltip: \"View School\",\r\n                title: \"View\",\r\n                onClick: (event, rowData) =>\r\n                  history.push(`normal-school/${rowData.id}`),\r\n              },\r\n              {\r\n                icon: () => (\r\n                  <FontAwesomeIcon icon={faEdit}  style={{ fontSize: \"1rem\" }} />\r\n                ),\r\n                tooltip: \"View School\",\r\n                title: \"View\",\r\n                onClick: (event, rowData) =>\r\n                 edit(rowData.id),\r\n              },\r\n            ]}\r\n          />:\r\n          <form onSubmit={onSubmit} id=\"ev_create_normal_school\">\r\n          <CRow>\r\n            <CCol>\r\n              <CCard>\r\n                <CCardBody>\r\n                  <CRow>\r\n                    <CCol md=\"8\" lg=\"6\" xl=\"8\">\r\n                      <h5>Edit Normal School</h5>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <p className=\"text-muted\">Register a Normal School</p>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel htmlFor=\"validationCustom01\">\r\n                        School Name :\r\n                      </CFormLabel>\r\n    \r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        id=\"req1\"\r\n                        key=\"sname\"\r\n                        placeholder=\"Name of School\"\r\n                        value={school_name}\r\n                        onChange={(e) => {\r\n                          setSchool_name(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(schoolNameErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{schoolNameErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel>User Name :</CFormLabel>\r\n                      <CFormInput\r\n                        key=\"user\"\r\n                        id=\"school_name\"\r\n                        placeholder=\"Unique User Name\"\r\n                        disabled=\"true\"\r\n                        value={userID}\r\n                        onChange={(e) => {\r\n                          setUSerID(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(userIDErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{userIDErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Password :</CFormLabel>\r\n                      <CFormInput\r\n                        key=\"pass\"\r\n                        id=\"\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => {\r\n                          setPassword(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(passwordErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{passwordErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                    <CCol>\r\n                      <CFormLabel> Re-Enter Password :</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"re-pass\"\r\n                        type=\"password\"\r\n                        value={password2}\r\n                        onChange={(e) => {\r\n                          setPassword2(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(password2Err).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{password2Err[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel>Email ID :</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"email\"\r\n                        placeholder=\"School Email ID\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => {\r\n                          setEmail(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(emailErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{emailErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Mobile :</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"mobile\"\r\n                        placeholder=\"Mobile Number\"\r\n                        type=\"number\"\r\n                        value={mobile}\r\n                        onChange={(e) => {\r\n                          setMobile(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(mobileErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{mobileErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> School Address:</CFormLabel>\r\n                      <CFormTextarea\r\n                        id=\"\"\r\n                        key=\"address\"\r\n                        placeholder=\"Address of Your School\"\r\n                        rows=\"1\"\r\n                        value={address}\r\n                        onChange={(e) => {\r\n                          setAddress(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(addressErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{addressErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Pin:</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"pin\"\r\n                        placeholder=\"Pin Code\"\r\n                        type=\"number\"\r\n                        value={pin}\r\n                        onChange={(e) => {\r\n                          setPin(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(pinErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{pinErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Country:</CFormLabel>\r\n                      <CFormSelect\r\n                        key=\"country\"\r\n                        value={countrylist.name}\r\n                        onChange={selectState}\r\n                      >\r\n                        <option>Select the Country</option>\r\n                        {countrylist.map((countrylist) => {\r\n                          return (\r\n                            countrylist.country_code==country_code?\r\n                            <option selected=\"true\" value={countrylist.country_code}>\r\n                              {countrylist.name}\r\n                            </option>: <option  value={countrylist.country_code}>\r\n                              {countrylist.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </CFormSelect>\r\n                      {Object.keys(countryErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{countryErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> State:</CFormLabel>\r\n                      \r\n                      <CFormSelect\r\n                        key=\"state\"\r\n                        value={state_name.name}\r\n                        onChange={(e) => {\r\n                          setStateName(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option disabled>Select the Country First</option>\r\n                        {state_name.map((state_name) => {\r\n                          return (\r\n                            statecode!=\"\" && state_name.state_code==statecode?\r\n\r\n                            <option selected value={state_name.state_code}>\r\n                              {state_name.name}\r\n                            </option>: <option  value={state_name.state_code}>\r\n                              {state_name.name}\r\n                            </option>\r\n                          );\r\n                        })\r\n                        \r\n                        \r\n                        }\r\n                      </CFormSelect>\r\n                      {Object.keys(stateErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{stateErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> City:</CFormLabel>\r\n                      {\r\n                        citycode!=''?citycode:\"\"\r\n                      }\r\n                      <CFormSelect\r\n                        key=\"city\"\r\n                        value={city.name}\r\n                        onChange={(e) => {\r\n                          setCityName(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option >Select the State First</option>\r\n                        {city.map((city) => {\r\n                          return (\r\n                           citycode!=\"\" && city.name==citycode?\r\n                          <option selected value={city.name}>{city.name}</option>:\r\n                          <option value={city.name}>{city.name}</option>\r\n                          );\r\n                        })}\r\n                      </CFormSelect>\r\n                      {Object.keys(cityErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{cityErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Region:</CFormLabel>\r\n                      <CFormSelect key=\"reg\" onChange={(event)=>setRegion(event.target.value)} id=\"\">\r\n                        <option>Open this select menu</option>\r\n                      {\r\n                        region==\"East\"? <option value=\"East\" selected>East </option>: <option value=\"East\" >East </option>\r\n                      } \r\n                       {\r\n                        region==\"West\"? <option value=\"West\" selected>West </option>: <option value=\"West\" >West </option>\r\n                      }\r\n                       {\r\n                        region==\"North\"? <option value=\"North\" selected>North </option>: <option value=\"North\" >North </option>\r\n                      } \r\n                       {\r\n                        region==\"South\"? <option value=\"South\" selected>South </option>: <option value=\"South\" >South </option>\r\n                      }\r\n                       {\r\n                        region==\"International\"? <option value=\"International\" selected>International </option>: <option value=\"International\" >International </option>\r\n                      } \r\n                      \r\n                        {/* <option value=\"West\">West</option>\r\n                        <option value=\"North\">North</option>\r\n                        <option value=\"South\">South</option>\r\n                        <option value=\"International\">International</option> */}\r\n                      </CFormSelect>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Board:</CFormLabel>\r\n                      <CFormSelect key=\"board\" custom name=\"\" id=\"\">\r\n                        <option>Open this select menu</option>\r\n                        <option value=\"Cbse\">CBSE </option>\r\n                        <option value=\"Icse\">ICSE</option>\r\n                        <option value=\"IB\">IB</option>\r\n                        <option value=\"Igcse\">IGCSE</option>\r\n                        <option value=\"State\">STATE BOARD</option>\r\n                      </CFormSelect>\r\n                    </CCol>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel>Website Of School :</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"website\"\r\n                        placeholder=\"Example ==> www.websiteofschool.com\"\r\n                        value={website}\r\n                        onChange={(e) => {\r\n                          setWebsite(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(webErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{webErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol>\r\n                      <CFormLabel> Chain School List:</CFormLabel>\r\n                      <CFormSelect\r\n                        key=\"chain_schools\"\r\n                        value={chainSchools.school_id}\r\n                        onChange={(e) => {\r\n                          setCahinSchoolId(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select the chain school</option>\r\n                        {chainSchools.map((ch) => {\r\n                          return <option value={ch.school_id}>{ch.name}</option>;\r\n                        })}\r\n                      </CFormSelect>\r\n                    </CCol>\r\n                  </CRow>\r\n                  {inputList.map((x, i) => {\r\n                    return (\r\n                      <div className=\"box\">\r\n                        <CRow>\r\n                          {/* <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                            <CFormLabel> Select Class:</CFormLabel>\r\n                            <CFormSelect\r\n                              custom\r\n                              name=\"class_name\"\r\n                              id=\"\"\r\n                              key=\"clas\"\r\n                              value={x.class_name}\r\n                              onChange={(e) => handleInputChange(e, i)}\r\n                            >\r\n                              <option>Open this select menu</option>\r\n                              <option value=\"Nursery\">Nursery </option>\r\n                              <option value=\"LKG\">LKG </option>\r\n                              <option value=\"UKG\">UKG</option>\r\n                              <option value=\"1\">1</option>\r\n                              <option value=\"2\">2</option>\r\n                              <option value=\"3\">3</option>\r\n                              <option value=\"4\">4</option>\r\n                              <option value=\"5\">5</option>\r\n                              <option value=\"6\">6</option>\r\n                              <option value=\"7\">7</option>\r\n                              <option value=\"8\">8</option>\r\n                              <option value=\"9\">9</option>\r\n                              <option value=\"10\">10</option>\r\n                              <option value=\"11\">11</option>\r\n                              <option value=\"12\">12</option>\r\n                            </CFormSelect>\r\n                          </CCol> */}\r\n    \r\n                          <CCol md=\"5\" lg=\"5\" xl=\"5\">\r\n                            <CFormLabel> Total License Limit :</CFormLabel>\r\n                            <CFormInput\r\n                              key=\"stud\"\r\n                              id=\"total_student\"\r\n                              name=\"total_student\"\r\n                              placeholder=\"\"\r\n                              value={x.total_student}\r\n                              onChange={(e) => handleInputChange(e, i)}\r\n                              type=\"number\"\r\n                            />\r\n                          </CCol>\r\n    \r\n                          {/* <CCol>\r\n                            <CFormLabel> </CFormLabel>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <button\r\n                                  className=\"butt\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </button>\r\n                              )}\r\n                              <span> </span>\r\n                              {inputList.length - 1 === i && (\r\n                                <button onClick={handleAddClick}>Add</button>\r\n                              )}\r\n                            </div>\r\n                          </CCol> */}\r\n                        </CRow>\r\n                      </div>\r\n                    );\r\n                  })}\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n                      <CFormLabel> Total Users</CFormLabel>\r\n                      <CFormInput\r\n                        key=\"tot\"\r\n                        id=\"\"\r\n                        placeholder=\"\"\r\n                        value={total_users}\r\n                        onChange={(e) => {\r\n                          setTotal_users(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(totalErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{totalErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Academics (From):</CFormLabel>\r\n                      <CFormSelect\r\n                        key=\"acaf\"\r\n                        custom\r\n                        name=\"\"\r\n                        id=\"\"\r\n                        value={academics_from}\r\n                        onChange={(e) => {\r\n                          setAcademics_from(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option>Open this select menu</option>\r\n                        <option value=\"January\">January </option>\r\n                        <option value=\"February\">February</option>\r\n                        <option value=\"March\">March</option>\r\n                        <option value=\"April\">April</option>\r\n                        <option value=\"May\">May</option>\r\n                        <option value=\"June\">June</option>\r\n                        <option value=\"July\">July</option>\r\n                        <option value=\"August\">August</option>\r\n                        <option value=\"September\">September</option>\r\n                        <option value=\"October\">October</option>\r\n                        <option value=\"November\">November</option>\r\n                        <option value=\"December\">December</option>\r\n                      </CFormSelect>\r\n                      {Object.keys(academicStartErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>\r\n                            {academicStartErr[key]}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Academics (To):</CFormLabel>\r\n                      <CFormSelect\r\n                        key=\"acat\"\r\n                        custom\r\n                        name=\"\"\r\n                        id=\"\"\r\n                        value={academics_to}\r\n                        onChange={(e) => {\r\n                          setacademics_to(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option>Open this select menu</option>\r\n                        <option value=\"January\">January </option>\r\n                        <option value=\"February\">February</option>\r\n                        <option value=\"March\">March</option>\r\n                        <option value=\"April\">April</option>\r\n                        <option value=\"May\">May</option>\r\n                        <option value=\"June\">June</option>\r\n                        <option value=\"July\">July</option>\r\n                        <option value=\"August\">August</option>\r\n                        <option value=\"September\">September</option>\r\n                        <option value=\"October\">October</option>\r\n                        <option value=\"November\">November</option>\r\n                        <option value=\"December\">December</option>\r\n                      </CFormSelect>\r\n                      {Object.keys(academicEndErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{academicEndErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> License (Start):</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"lics\"\r\n                        placeholder=\"\"\r\n                        value={license_start}\r\n                        onChange={(e) => {\r\n                          setLicense_start(e.target.value);\r\n                        }}\r\n                        type=\"date\"\r\n                      />\r\n                      {Object.keys(calStartErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{calStartErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> License (End):</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"lice\"\r\n                        placeholder=\"\"\r\n                        value={license_end}\r\n                        onChange={(e) => {\r\n                          setLicense_end(e.target.value);\r\n                        }}\r\n                        type=\"date\"\r\n                      />\r\n                      {Object.keys(calEndErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{calEndErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> License Type:</CFormLabel>\r\n                      <FormControl className={classes.formControl}>\r\n                        <Select\r\n                          key=\"ltype\"\r\n                          labelId=\"demo-mutiple-checkbox-labels\"\r\n                          id=\"demo-mutiple-checkboxs\"\r\n                          variant=\"outlined\"\r\n                          multiple\r\n                          value={classNames}\r\n                          onChange={handleChange}\r\n                          input={<Input />}\r\n                          renderValue={(selected) => selected.join(\", \")}\r\n                          MenuProps={MenuProps}\r\n                        >\r\n                          {classs.map((name) => (\r\n                            <MenuItem key={name} value={name}>\r\n                              <Checkbox checked={classNames.indexOf(name) > -1} />\r\n                              <ListItemText primary={name} />\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Upload Logo:</CFormLabel>\r\n                      <CFormInput\r\n                        key=\"logo\"\r\n                        type=\"file\"\r\n                        id=\"\"\r\n                        onChange={handleFileInput}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </CCardBody>\r\n    \r\n                <CCardFooter>\r\n                  <CRow>\r\n                    <CCol md={3}>\r\n                      <CButton\r\n                        block\r\n                        //variant=\"outline\"\r\n                        color=\"light\"\r\n                        onClick={() => setScreen(\"\")}\r\n                        style={{ float: \"left\" }}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTimesCircle} /> Cancel\r\n                      </CButton>\r\n    \r\n                      <CModal visible={visible} onDismiss={() => setVisible(false)}>\r\n                        <CModalHeader onDismiss={() => setVisible(false)}>\r\n                          <CModalTitle>Cancel</CModalTitle>\r\n                        </CModalHeader>\r\n    \r\n                        <CModalBody>Do You Want To Cancel ?</CModalBody>\r\n                        <CModalFooter>\r\n                          <CButton color=\"light\" onClick={() => setVisible(false)}>\r\n                            <FontAwesomeIcon icon={faTimesCircle} /> No\r\n                          </CButton>\r\n                          <Link to=\"/\">\r\n                            <CButton color=\"dark\">\r\n                              <FontAwesomeIcon icon={faCheckCircle} /> Yes\r\n                            </CButton>\r\n                          </Link>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n    \r\n                      <CButton\r\n                        color=\"dark\"\r\n                        type=\"submit\"\r\n                        style={{ marginLeft: \"15px\" }}\r\n                        // disabled={\r\n                        //   !school_name ||\r\n                        //   !userID ||\r\n                        //   !email ||\r\n                        //   !password ||\r\n                        //   !mobile ||\r\n                        //   !address ||\r\n                        //   !pin ||\r\n                        //   !total_users ||\r\n                        //   !academics_from ||\r\n                        //   !academics_to ||\r\n                        //   !license_start ||\r\n                        //   !license_end\r\n                        // }\r\n                        // onClick={() => handleUpload(selectedFile)}\r\n                        onClick={testing}\r\n                      >\r\n                        <FontAwesomeIcon icon={faSave} /> Save\r\n                      </CButton>\r\n                      {/* <button type=\"button\" onClick={testing}></button> */}\r\n                    </CCol>\r\n                  </CRow>\r\n                </CCardFooter>\r\n              </CCard>\r\n            </CCol>\r\n          </CRow>\r\n        </form>\r\n          }\r\n       \r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n}\r\n\r\nexport default ManageSchool;\r\n","let { toast } = require(\"react-toastify\");\r\n\r\nconst notify = (type, message) => {\r\n  switch (type) {\r\n    case \"info\":\r\n      toast.info(message);\r\n      break;\r\n    case \"success\":\r\n      toast.success(message);\r\n      break;\r\n    case \"warning\":\r\n      toast.warn(message);\r\n      break;\r\n    case \"error\":\r\n      toast.error(message);\r\n      break;\r\n    case \"dark\":\r\n      toast.dark(message);\r\n      break;\r\n    default:\r\n      toast(message);\r\n  }\r\n};\r\n\r\nmodule.exports = notify;\r\n","const notify = require(\"./notify\");\r\nconst axios = require(\"axios\").default;\r\nlet EDU_AXIOS;\r\nlet token = \"\";\r\n// to set authorization header on test mode\r\nlet user = localStorage.getItem(\"user\");\r\nif (user) {\r\n  token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"production\") {\r\n  EDU_AXIOS = axios.create({\r\n    timeout: 6000,\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        notify(\"error\", error.response.message);\r\n      } else {\r\n        notify(\"error\", error.response.message);\r\n      }\r\n    }\r\n  );\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"test\") {\r\n  if (token == \"\") {\r\n    console.log(\"there isno token\");\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  } else {\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        console.log(error.response.data.message);\r\n        notify(\"error\", error.response.data.message);\r\n      } else {\r\n        notify(\"error\", error.response.data.message);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nmodule.exports = EDU_AXIOS;\r\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}