{"version":3,"sources":["views/ev_super_admin/time_table/step_1.js","helpers/notify.js","helpers/edu_axios.js","views/navbars/ev_super_admin/nav_normal_school.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","loader/Loader.js","ev_formik_controls/TextError.js","ev_formik_controls/CheckBox.js","ev_formik_controls/Input.js","ev_formik_controls/MultiSelect.js","ev_formik_controls/RadioButton.js","ev_formik_controls/Select.js","ev_formik_controls/SelectWithKey.js","ev_formik_controls/Textarea.js","ev_formik_controls/EVFormikControl.js"],"names":["time_table","props","school_id","match","params","useState","visible","setVisible","groups","setGroups","openModalBox","setTimeout","closeModalBox","periods","i","push","cl","p_length","val","text","value","p_gap","weekends","day_periods","weekdays","disabled","useEffect","EDU_AXIOS","get","process","then","response","grp","data","length","group_name","catch","error","console","log","initialValues","session","Date","getFullYear","periods_per_day","start_time","lunch_after","lunch_duration","breaks","monday","tuesday","wednesday","thursday","friday","saturday","validationSchema","Yup","shape","required","min","of","trim","break_after","break_duration","onSubmit","values","a","resetForm","post","acadmic_year","group","prd_per_day","period_length","gap","working_days","res","notify","message","err","className","id","md","lg","xl","formik","htmlFor","sm","control","type","name","readonly","placeholder","options","format","field","onChange","e","setValues","numberOfGroups","target","previousNumber","parseInt","splice","onChangeGroups","map","break1","groupErrors","errors","groupTouched","touched","as","component","inline","selectAll","block","color","onClick","icon","faTimesCircle","isSubmitting","dirty","isValid","style","marginLeft","faSave","onDismiss","to","faCheckCircle","toast","require","module","exports","info","success","warn","dark","axios","default","token","localStorage","getItem","JSON","parse","create","timeout","headers","authorization","interceptors","use","status","removeItem","window","location","expand","colorScheme","float","fluid","href","variant","popper","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","Loader","role","TextError","children","connect","rest","switcher","getIn","touch","option","Fragment","checked","includes","label","handleChange","handleBlur","onBlur","selected","setSelected","final","d","EVFormikControl","MultiSelect"],"mappings":"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","file":"static/js/27.a91cbf78.chunk.js","sourcesContent":["import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CRow,\r\n  CFormLabel,\r\n  CCardFooter,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CFormFloating,\r\n} from \"@coreui/react-pro\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"../../navbars/ev_super_admin/nav_normal_school\";\r\nimport {\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n  faArrowRight,\r\n  faSave,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Loader from \"src/loader/Loader\";\r\nimport EVFormikControl from \"src/ev_formik_controls/EVFormikControl\";\r\nimport EDU_AXIOS from \"src/helpers/edu_axios\";\r\nimport notify from \"src/helpers/notify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst time_table = (props) => {\r\n  let school_id = props.match.params.school_id;\r\n  let [visible, setVisible] = useState(false);\r\n  let [groups, setGroups] = useState([]);\r\n  let [p_per_day, setPPerDay] = useState(0);\r\n  // open cancle modal box\r\n  let openModalBox = () => {\r\n    setTimeout(() => setVisible(true), 0);\r\n  };\r\n\r\n  // close cancle modal box\r\n  let closeModalBox = () => {\r\n    setTimeout(() => setVisible(false), 0);\r\n  };\r\n\r\n  // no. of periods\r\n  let periods = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    periods.push(i);\r\n  }\r\n\r\n  // no. of periods\r\n  let cl = [];\r\n  for (let i = 1; i <= 10; i++) {\r\n    cl.push(i);\r\n  }\r\n\r\n  // length of periods\r\n  let p_length = [];\r\n  for (let i = 30; i <= 180; ) {\r\n    let val = {\r\n      text: i + \" \" + \"Mins\",\r\n      value: i,\r\n    };\r\n    p_length.push(val);\r\n    i = i + 5;\r\n  }\r\n\r\n  // gap b/w periods\r\n  let p_gap = [];\r\n  for (let i = 0; i <= 30; ) {\r\n    p_gap.push(i);\r\n    i = i + 5;\r\n  }\r\n\r\n  // weekends\r\n  let weekends = [\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n    \"Sunday\",\r\n    \"Monday-Tuesday\",\r\n    \"Tuseday-Wednesday\",\r\n    \"Wednesday-Thursday\",\r\n    \"Thursday-Friday\",\r\n    \"Friday-Saturday\",\r\n    \"Saturday-Sunday\",\r\n  ];\r\n\r\n  let day_periods = [\r\n    { text: \"Period 1\", value: \"1\" },\r\n    { text: \"Period 2\", value: \"2\" },\r\n    { text: \"Period 3\", value: \"3\" },\r\n    { text: \"Period 4\", value: \"4\" },\r\n    { text: \"Period 5\", value: \"5\" },\r\n    { text: \"Period 6\", value: \"6\" },\r\n    { text: \"Period 7\", value: \"7\" },\r\n    { text: \"Period 8\", value: \"8\" },\r\n    { text: \"Period 9\", value: \"9\" },\r\n    { text: \"Period 10\", value: \"10\" },\r\n  ];\r\n\r\n  let weekdays = [\r\n    { text: \"Mon\", value: \"Mon\" },\r\n    { text: \"Tue\", value: \"Tue\" },\r\n    { text: \"Wed\", value: \"Wed\" },\r\n    { text: \"Thu\", value: \"Thu\" },\r\n    { text: \"Fri\", value: \"Fri\" },\r\n    { text: \"Sat\", value: \"Sat\" },\r\n    { text: \"Sun\", value: \"Sun\", disabled: true },\r\n  ];\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(`${process.env.REACT_APP_API_PATH}/cm/get-class/${school_id}`)\r\n      .then((response) => {\r\n        let grp = [];\r\n        if (response.data.data != \"\") {\r\n          for (let i = 0; i < response.data.data.groups.length; i++) {\r\n            grp.push(response.data.data.groups[i].group_name);\r\n          }\r\n        }\r\n        setGroups(grp);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  let session = `${new Date().getFullYear()}/${new Date().getFullYear() + 1}`;\r\n  // formik params\r\n  let initialValues = {\r\n    session: session,\r\n    periods_per_day: \"\",\r\n    start_time: \"\",\r\n    p_length: \"\",\r\n    p_gap: \"\",\r\n    weekends: \"\",\r\n    lunch_after: \"\",\r\n    lunch_duration: \"\",\r\n    weekdays: [],\r\n    breaks: [],\r\n    monday: [],\r\n    tuesday: [],\r\n    wednesday: [],\r\n    thursday: [],\r\n    friday: [],\r\n    saturday: [],\r\n  };\r\n  let onChangeGroups = (e, field, values, setValues) => {\r\n    // update dynamic form\r\n    const breaks = [...values.breaks];\r\n    const numberOfGroups = e.target.value || 0;\r\n    const previousNumber = parseInt(field.value || \"0\");\r\n    if (previousNumber < numberOfGroups) {\r\n      for (let i = previousNumber; i < numberOfGroups; i++) {\r\n        breaks.push({ break_after: \"\", break_duration: \"\" });\r\n      }\r\n    } else {\r\n      for (let i = previousNumber; i >= numberOfGroups; i--) {\r\n        breaks.splice(i, 1);\r\n      }\r\n    }\r\n    setValues({ ...values, breaks });\r\n\r\n    // call formik onChange method\r\n    field.onChange(e);\r\n  };\r\n\r\n  // validation rules of the form fields\r\n  const validationSchema = Yup.object().shape({\r\n    session: Yup.string().required(\"Session is required\"),\r\n    group_name: Yup.string().required(\"Group name is required\"),\r\n    periods_per_day: Yup.string().required(\"Periods is required\"),\r\n    start_time: Yup.string().required(\"Start time is required\"),\r\n    p_length: Yup.string().required(\"Period length is required\"),\r\n    p_gap: Yup.string().required(\"Gap b/w periods is required\"),\r\n    weekends: Yup.string().required(\"weekends is required\"),\r\n    lunch_after: Yup.string().required(\"Lunch after period is required\"),\r\n    lunch_duration: Yup.string().required(\"Lunch duration is required\"),\r\n    weekdays: Yup.array().min(5).of(Yup.string().trim().required()),\r\n    breaks: Yup.array().of(\r\n      Yup.object().shape({\r\n        break_after: Yup.string().required(\"Break after period is required\"),\r\n        break_duration: Yup.string().required(\"Break duration is required\"),\r\n      })\r\n    ),\r\n  });\r\n  // submit form\r\n  const onSubmit = async (values, { resetForm }) => {\r\n    await EDU_AXIOS.post(\r\n      process.env.REACT_APP_API_PATH + \"/ttm/initialize-time-table\",\r\n      {\r\n        school_id: school_id,\r\n        acadmic_year: values.session,\r\n        group: values.group_name,\r\n        prd_per_day: values.periods_per_day,\r\n        start_time: values.start_time,\r\n        lunch_after: values.lunch_after,\r\n        lunch_duration: values.lunch_duration,\r\n        period_length: values.p_length,\r\n        gap: values.p_gap,\r\n        weekends: values.weekends,\r\n        breaks: values.breaks,\r\n        working_days: values.weekdays,\r\n        monday: values.monday,\r\n        tuesday: values.tuesday,\r\n        wednesday: values.wednesday,\r\n        thursday: values.thursday,\r\n        friday: values.friday,\r\n        saturday: values.saturday,\r\n      }\r\n    )\r\n      .then(async (res) => {\r\n        resetForm({ values: \"\" });\r\n        notify(\"success\", res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        notify(\"error\", err);\r\n      });\r\n  };\r\n  return (\r\n    <CCardGroup>\r\n      <CCard className=\"p-2\">\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol>\r\n              <NavBar id={school_id} />\r\n            </CCol>\r\n          </CRow>\r\n          <CRow>\r\n            <CCol md=\"8\" lg=\"4\" xl=\"8\">\r\n              <h5>Time Table [ Step 1 ]</h5>\r\n            </CCol>\r\n          </CRow>\r\n          <p className=\"text-muted\">Create Time Table</p>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {(formik) => (\r\n              <Form className=\"row g-3\" key=\"main_form\">\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"session\"\r\n                    className=\"col-sm-3 col-form-label required-field\"\r\n                  >\r\n                    Academic Year\r\n                  </CFormLabel>\r\n\r\n                  <CCol sm={4}>\r\n                    <EVFormikControl\r\n                      control=\"input\"\r\n                      type=\"text\"\r\n                      name=\"session\"\r\n                      id=\"session\"\r\n                      value={formik.values.session}\r\n                      readonly={true}\r\n                      placeholder=\"Select periods...\"\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"group_name\"\r\n                    className=\"col-sm-3 col-form-label required-field\"\r\n                  >\r\n                    Groups\r\n                  </CFormLabel>\r\n\r\n                  <CCol sm={4}>\r\n                    <EVFormikControl\r\n                      control=\"select\"\r\n                      name=\"group_name\"\r\n                      id=\"group_name\"\r\n                      options={groups}\r\n                      placeholder=\"Select group...\"\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"periods_per_day\"\r\n                    className=\"col-sm-3 col-form-label required-field\"\r\n                  >\r\n                    Periods/Day\r\n                  </CFormLabel>\r\n\r\n                  <CCol sm={4}>\r\n                    <EVFormikControl\r\n                      control=\"select\"\r\n                      name=\"periods_per_day\"\r\n                      id=\"periods_per_day\"\r\n                      options={periods}\r\n                      placeholder=\"Select periods...\"\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"start_time\"\r\n                    className=\"col-sm-3 col-form-label required-field\"\r\n                  >\r\n                    Start Time\r\n                  </CFormLabel>\r\n\r\n                  <CCol sm={4}>\r\n                    <EVFormikControl\r\n                      control=\"input\"\r\n                      type=\"time\"\r\n                      name=\"start_time\"\r\n                      id=\"start_time\"\r\n                      value={formik.values.start_time}\r\n                      placeholder=\"hh:mm\"\r\n                      format={24}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"p_length\"\r\n                    className=\"col-sm-3 col-form-label required-field\"\r\n                  >\r\n                    Period Length\r\n                  </CFormLabel>\r\n\r\n                  <CCol sm={4}>\r\n                    <EVFormikControl\r\n                      control=\"selectwithkey\"\r\n                      name=\"p_length\"\r\n                      id=\"p_length\"\r\n                      options={p_length}\r\n                      placeholder=\"Select period length...\"\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"p_gap\"\r\n                    className=\"col-sm-3 col-form-label required-field\"\r\n                  >\r\n                    Gap b/w Periods\r\n                  </CFormLabel>\r\n\r\n                  <CCol sm={4}>\r\n                    <EVFormikControl\r\n                      control=\"select\"\r\n                      name=\"p_gap\"\r\n                      id=\"p_gap\"\r\n                      options={p_gap}\r\n                      placeholder=\"Select gap...\"\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"weekends\"\r\n                    className=\"col-sm-3 col-form-label required-field\"\r\n                  >\r\n                    Weekends\r\n                  </CFormLabel>\r\n\r\n                  <CCol sm={4}>\r\n                    <EVFormikControl\r\n                      control=\"select\"\r\n                      name=\"weekends\"\r\n                      id=\"weekends\"\r\n                      options={weekends}\r\n                      placeholder=\"Select weekends...\"\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol md={3} className=\"mt-4\">\r\n                    Lunch\r\n                  </CCol>\r\n                  <CCol md={4}>\r\n                    <CFormFloating className=\"mb-3\">\r\n                      <EVFormikControl\r\n                        control=\"select\"\r\n                        name=\"lunch_after\"\r\n                        id=\"lunch_after\"\r\n                        options={periods}\r\n                        placeholder=\"Select...\"\r\n                      />\r\n                      <CFormLabel\r\n                        htmlFor=\"lunch_after\"\r\n                        className=\"required-field\"\r\n                      >\r\n                        After Period\r\n                      </CFormLabel>\r\n                    </CFormFloating>\r\n                  </CCol>\r\n                  <CCol md={4}>\r\n                    <CFormFloating className=\"mb-3\">\r\n                      <EVFormikControl\r\n                        control=\"input\"\r\n                        type=\"number\"\r\n                        name=\"lunch_duration\"\r\n                        id=\"lunch_duration\"\r\n                        value={formik.values.lunch_duration}\r\n                        placeholder=\"Lunch duration...\"\r\n                      />\r\n                      <CFormLabel\r\n                        htmlFor=\"lunch_duration\"\r\n                        className=\"required-field\"\r\n                      >\r\n                        Lunch Duration (Mins)\r\n                      </CFormLabel>\r\n                    </CFormFloating>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"gp_no\"\r\n                    className=\"col-sm-3 col-form-label\"\r\n                  >\r\n                    Number of Breaks\r\n                  </CFormLabel>\r\n                  <CCol md={4}>\r\n                    <Field name=\"gp_no\">\r\n                      {({ field }) => (\r\n                        <CFormSelect\r\n                          {...field}\r\n                          onChange={(e) =>\r\n                            onChangeGroups(\r\n                              e,\r\n                              field,\r\n                              formik.values,\r\n                              formik.setValues\r\n                            )\r\n                          }\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((i) => (\r\n                            <option key={i} value={i}>\r\n                              {i}\r\n                            </option>\r\n                          ))}\r\n                        </CFormSelect>\r\n                      )}\r\n                    </Field>\r\n                  </CCol>\r\n                </CRow>\r\n                <FieldArray name=\"breaks\">\r\n                  {() =>\r\n                    formik.values.breaks.map((break1, i) => {\r\n                      const groupErrors =\r\n                        (formik.errors.breaks?.length &&\r\n                          formik.errors.breaks[i]) ||\r\n                        {};\r\n                      const groupTouched =\r\n                        (formik.touched.breaks?.length &&\r\n                          formik.touched.breaks[i]) ||\r\n                        {};\r\n                      return (\r\n                        <CRow className=\"mb-3\">\r\n                          <CCol md={3} className=\"mt-4\">\r\n                            Break {i + 1}\r\n                          </CCol>\r\n                          <CCol md={4}>\r\n                            <CFormFloating className=\"mb-3\">\r\n                              <Field\r\n                                name={`breaks.${i}.break_after`}\r\n                                as=\"select\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (groupErrors.break_after &&\r\n                                  groupTouched.break_after\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                              >\r\n                                <option value=\"\">\r\n                                  Select break after period...\r\n                                </option>\r\n                                {cl.map((i) => (\r\n                                  <option key={i} value={i}>\r\n                                    {i}\r\n                                  </option>\r\n                                ))}\r\n                              </Field>\r\n                              <ErrorMessage\r\n                                name={`breaks.${i}.break_after`}\r\n                                component=\"div\"\r\n                                className=\"invalid-feedback\"\r\n                              />\r\n                              <CFormLabel\r\n                                htmlFor=\"break_after\"\r\n                                className=\"required-field\"\r\n                              >\r\n                                Break After Period\r\n                              </CFormLabel>\r\n                            </CFormFloating>\r\n                          </CCol>\r\n                          <CCol md={4}>\r\n                            <CFormFloating className=\"mb-3\">\r\n                              <Field\r\n                                name={`breaks.${i}.break_duration`}\r\n                                type=\"number\"\r\n                                placeholder=\"Break duration\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (groupErrors.break_duration &&\r\n                                  groupTouched.break_duration\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                              />\r\n                              <ErrorMessage\r\n                                name={`breaks.${i}.break_duration`}\r\n                                component=\"div\"\r\n                                className=\"invalid-feedback\"\r\n                              />\r\n                              <CFormLabel\r\n                                htmlFor=\"break_duration\"\r\n                                className=\"required-field\"\r\n                              >\r\n                                Break Duration (Mins)\r\n                              </CFormLabel>\r\n                            </CFormFloating>\r\n                          </CCol>\r\n                        </CRow>\r\n                      );\r\n                    })\r\n                  }\r\n                </FieldArray>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"weekdays\"\r\n                    className=\"col-sm-3 col-form-label required-field\"\r\n                  >\r\n                    Working Day/Week\r\n                  </CFormLabel>\r\n\r\n                  <CCol sm={9}>\r\n                    <EVFormikControl\r\n                      control=\"checkbox\"\r\n                      name=\"weekdays\"\r\n                      id=\"weekdays\"\r\n                      options={weekdays}\r\n                      inline={true}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"monday\"\r\n                    className=\"col-sm-3 col-form-label\"\r\n                  >\r\n                    Monday\r\n                  </CFormLabel>\r\n                  <CCol md={4}>\r\n                    <EVFormikControl\r\n                      control=\"multiselect\"\r\n                      name=\"monday\"\r\n                      id=\"monday\"\r\n                      options={day_periods}\r\n                      placeholder=\"Select periods...\"\r\n                      selectAll={true}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"tuesday\"\r\n                    className=\"col-sm-3 col-form-label\"\r\n                  >\r\n                    Tuesday\r\n                  </CFormLabel>\r\n                  <CCol md={4}>\r\n                    <EVFormikControl\r\n                      control=\"multiselect\"\r\n                      name=\"tuesday\"\r\n                      id=\"tuesday\"\r\n                      options={day_periods}\r\n                      placeholder=\"Select periods...\"\r\n                      selectAll={true}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"wednesday\"\r\n                    className=\"col-sm-3 col-form-label\"\r\n                  >\r\n                    Wednesday\r\n                  </CFormLabel>\r\n                  <CCol md={4}>\r\n                    <EVFormikControl\r\n                      control=\"multiselect\"\r\n                      name=\"wednesday\"\r\n                      id=\"wednesday\"\r\n                      options={day_periods}\r\n                      placeholder=\"Select periods...\"\r\n                      selectAll={true}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"thursday\"\r\n                    className=\"col-sm-3 col-form-label\"\r\n                  >\r\n                    Thursday\r\n                  </CFormLabel>\r\n                  <CCol md={4}>\r\n                    <EVFormikControl\r\n                      control=\"multiselect\"\r\n                      name=\"thursday\"\r\n                      id=\"thursday\"\r\n                      options={day_periods}\r\n                      placeholder=\"Select periods...\"\r\n                      selectAll={true}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"friday\"\r\n                    className=\"col-sm-3 col-form-label\"\r\n                  >\r\n                    Friday\r\n                  </CFormLabel>\r\n                  <CCol md={4}>\r\n                    <EVFormikControl\r\n                      control=\"multiselect\"\r\n                      name=\"friday\"\r\n                      id=\"friday\"\r\n                      options={day_periods}\r\n                      placeholder=\"Select periods...\"\r\n                      selectAll={true}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CFormLabel\r\n                    htmlFor=\"saturday\"\r\n                    className=\"col-sm-3 col-form-label\"\r\n                  >\r\n                    Saturday\r\n                  </CFormLabel>\r\n                  <CCol md={4}>\r\n                    <EVFormikControl\r\n                      control=\"multiselect\"\r\n                      name=\"saturday\"\r\n                      id=\"saturday\"\r\n                      options={day_periods}\r\n                      placeholder=\"Select periods...\"\r\n                      selectAll={true}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CCardFooter>\r\n                  <CButton block color=\"light\" onClick={openModalBox}>\r\n                    <FontAwesomeIcon icon={faTimesCircle} /> Cancel\r\n                  </CButton>\r\n                  <CButton\r\n                    block\r\n                    color=\"dark\"\r\n                    type=\"submit\"\r\n                    disabled={\r\n                      formik.isSubmitting || !formik.dirty || !formik.isValid\r\n                    }\r\n                    style={{ marginLeft: \"15px\" }}\r\n                  >\r\n                    {formik.isSubmitting ? (\r\n                      <Loader />\r\n                    ) : (\r\n                      <>\r\n                        <FontAwesomeIcon icon={faSave} /> Save\r\n                      </>\r\n                    )}\r\n                  </CButton>\r\n                </CCardFooter>\r\n                <CModal visible={visible} onDismiss={closeModalBox}>\r\n                  <CModalHeader onDismiss={closeModalBox}>\r\n                    <CModalTitle>\r\n                      <h5>Cancel</h5>\r\n                    </CModalTitle>\r\n                  </CModalHeader>\r\n\r\n                  <CModalBody>Do You Want To Cancel ?</CModalBody>\r\n                  <CModalFooter>\r\n                    <CButton color=\"light\" onClick={closeModalBox}>\r\n                      <FontAwesomeIcon icon={faTimesCircle} /> No\r\n                    </CButton>\r\n                    <Link to=\"/\">\r\n                      <CButton color=\"dark\">\r\n                        <FontAwesomeIcon icon={faCheckCircle} /> Yes\r\n                      </CButton>\r\n                    </Link>\r\n                  </CModalFooter>\r\n                </CModal>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCardGroup>\r\n  );\r\n};\r\n\r\nexport default time_table;\r\n","let { toast } = require(\"react-toastify\");\r\n\r\nconst notify = (type, message) => {\r\n  switch (type) {\r\n    case \"info\":\r\n      toast.info(message);\r\n      break;\r\n    case \"success\":\r\n      toast.success(message);\r\n      break;\r\n    case \"warning\":\r\n      toast.warn(message);\r\n      break;\r\n    case \"error\":\r\n      toast.error(message);\r\n      break;\r\n    case \"dark\":\r\n      toast.dark(message);\r\n      break;\r\n    default:\r\n      toast(message);\r\n  }\r\n};\r\n\r\nmodule.exports = notify;\r\n","const notify = require(\"./notify\");\r\nconst axios = require(\"axios\").default;\r\nlet EDU_AXIOS;\r\nlet token = \"\";\r\n// to set authorization header on test mode\r\nlet user = localStorage.getItem(\"user\");\r\nif (user) {\r\n  token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"production\") {\r\n  EDU_AXIOS = axios.create({\r\n    timeout: 6000,\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        notify(\"error\", error.response.message);\r\n      } else {\r\n        notify(\"error\", error.response.message);\r\n      }\r\n    }\r\n  );\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"test\") {\r\n  if (token == \"\") {\r\n    console.log(\"there isno token\");\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  } else {\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        console.log(error.response.data.message);\r\n        notify(\"error\", error.response.data.message);\r\n      } else {\r\n        notify(\"error\", error.response.data.message);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nmodule.exports = EDU_AXIOS;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CNavbar,\r\n  CNavbarToggler,\r\n  CNavbarNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CContainer,\r\n  CCollapse,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n} from \"@coreui/react-pro\";\r\nexport default (props) => {\r\n  let id = props.id;\r\n  const [visible, setVisible] = useState(false);\r\n  return (\r\n    <>\r\n      <CNavbar\r\n        expand=\"\"\r\n        colorScheme=\"light\"\r\n        className=\"bg-secondry\"\r\n        style={{ float: \"right\" }}\r\n      >\r\n        <CContainer fluid>\r\n          <CNavbarToggler onClick={() => setVisible(!visible)} />\r\n          <CCollapse className=\"navbar-collapse\" visible={visible}>\r\n            <CNavbarNav>\r\n              <a color=\"secondary\" className=\"btn btn-default\"  href={`/#/school-management/get-users/${id}`}>User Management</a>\r\n            {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n            <CDropdownToggle color=\"secondary\" >\r\n                 User Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/user-management/${id}`}\r\n                  >\r\n                   Add Users\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/get-users/${id}`}\r\n                  >\r\n                   get Users\r\n                  </CDropdownItem>\r\n                  </CDropdownMenu>\r\n                  </CDropdown> */}\r\n                  <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\" >\r\n                  Class Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-classes/${id}`}\r\n                  >\r\n                    Create/Edit Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/view-classes/${id}`}\r\n                  >\r\n                    View Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-sections/${id}`}\r\n                  >\r\n                    Create Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/manage-sections/${id}`}\r\n                  >\r\n                    Manage Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                    Class Mapping\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Subject Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  {/* <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Add Subject\r\n                  </CDropdownItem> */}\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Assign Subject To Class\r\n                  </CDropdownItem>\r\n                  {/* <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                    All Subjects\r\n                  </CDropdownItem> */}\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n         \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Teacher Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                    Add Teacher\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Section Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown> */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Academic Calendar Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Academic Year\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Holiday calendar & holiday list\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    Exam calendar\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Lesson Planning\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/lesson-management/get-subjects/${id}`}\r\n                  >\r\n                   Annual Lesson Plan\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Class Structure Creation\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Constraints management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                 School level constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Class wise constraints (inflow from class teacher)\r\n                  </CDropdownItem>\r\n                 \r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n            \r\n             \r\n              {/*<CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Student Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Students</CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Subjects</CDropdownItem>\r\n                </CDropdownMenu>\r\n  </CDropdown>*/}\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Calender Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/add-holiday/${id}`}\r\n                  >\r\n                    Add Holiday\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/view-calender/${id}`}\r\n                  >\r\n                    View Calender\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n          \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">Time Table</CDropdownToggle>\r\n                {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Data fitness – system checks the fitness of data\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown> */} \r\n               \r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Generate Annual Timetable\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n                <CDropdownMenu>\r\n                {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Update weekly time table.\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n                  <CDropdownItem href={`/#/time-table-management/step-1/${id}`}>\r\n                    Time Table (Initialization)\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/time-table-list/${id}`}\r\n                  >\r\n                    Time Table List\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href={`/#/time-table-management/step-2/${id}`}>\r\n                    General Constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href={`/#/time-table-management/step-2/${id}`}>Class Constraints</CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/create-time-table-admin/${id}`}\r\n                  >\r\n                    Generate Time Table (Admin)\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/generate-time-table-school/${id}`}\r\n                  >\r\n                    Generate Time Table (School)\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n            </CNavbarNav>\r\n          </CCollapse>\r\n        </CContainer>\r\n      </CNavbar>\r\n    </>\r\n  );\r\n};\r\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>;\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nfunction TextError(props) {\r\n  return <div className=\"invalid-feedback\">{props.children}</div>;\r\n}\r\n\r\nexport default TextError;\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst CheckBox = (props) => {\r\n  const { formik, name, options, switcher, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={\r\n                    field.value ? field.value.includes(option.value) : \"\"\r\n                  }\r\n                  label={option.text}\r\n                  disabled={option.disabled ? option.disabled : false}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}\r\n                  }`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(CheckBox);\r\n","import React from \"react\";\r\nimport { CFormInput } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Input(props) {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <CFormInput\r\n        id={id}\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        {...rest}\r\n        className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n      />\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(Input);\r\n","import React, { useState } from \"react\";\r\nimport { CMultiSelect } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn, useField } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Multiselect = (props) => {\r\n  let { formik, name, id, options, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  const [selected, setSelected] = useState([]);\r\n  let final = [];\r\n  return (\r\n    <>\r\n      <Field name={name} id={id} onChange={handleChange} onBlur={handleBlur}>\r\n        {({ field }) => {\r\n          selected.map((d) => {\r\n            final.push(d.value);\r\n            return final;\r\n          });\r\n          formik.values[`${name}`] = final;\r\n\r\n          return (\r\n            <CMultiSelect\r\n              {...field}\r\n              {...rest}\r\n              options={options}\r\n              onChange={setSelected}\r\n              className={`form-control  ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Multiselect);\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst RadioButton = (props) => {\r\n  const { formik, name, options, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  type=\"radio\"\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={field.value === option.value}\r\n                  label={option.text}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(RadioButton);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Select = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option} value={option}>\r\n                    {option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Select);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst SelectWithKey = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.text}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(SelectWithKey);\r\n","import React from \"react\";\r\nimport { CFormTextarea } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Textarea = (props) => {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormTextarea\r\n              id={id}\r\n              name={name}\r\n              {...field}\r\n              {...rest}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Textarea);\r\n","import React from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\nimport Input from \"./Input\";\r\nimport MultiSelect from \"./MultiSelect\";\r\nimport RadioButton from \"./RadioButton\";\r\nimport Select from \"./Select\";\r\nimport SelectWithKey from \"./SelectWithKey\";\r\nimport Textarea from \"./Textarea\";\r\nfunction EVFormikControl(props) {\r\n  const { control, ...rest } = props;\r\n  switch (control) {\r\n    case \"input\":\r\n      return <Input {...rest} />;\r\n    case \"textarea\":\r\n      return <Textarea {...rest} />;\r\n    case \"select\":\r\n      return <Select {...rest} />;\r\n    case \"selectwithkey\":\r\n      return <SelectWithKey {...rest} />;\r\n    case \"multiselect\":\r\n      return <MultiSelect {...rest} />;\r\n    case \"radio\":\r\n      return <RadioButton {...rest} />;\r\n    case \"checkbox\":\r\n      return <CheckBox {...rest} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default EVFormikControl;\r\n"],"sourceRoot":""}