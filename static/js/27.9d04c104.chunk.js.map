{"version":3,"sources":["views/ev_super_admin/time_table/create_admin.js","views/navbars/ev_super_admin/nav_normal_school.js","loader/Loader.js","ev_formik_controls/TextError.js","ev_formik_controls/CheckBox.js","ev_formik_controls/Input.js","ev_formik_controls/MultiSelect.js","ev_formik_controls/RadioButton.js","ev_formik_controls/Select.js","ev_formik_controls/SelectWithKey.js","ev_formik_controls/Textarea.js","ev_formik_controls/EVFormikControl.js"],"names":["create_admin","props","school_id","match","params","useState","visible","setVisible","sDate","eDate","dataLoaded","setDataLoaded","showTable","setShowTable","tableData","setTableData","classes","setClasses","openModalBox","setTimeout","closeModalBox","initialValues","class","start_date","end_date","validationSchema","Yup","shape","required","onSubmit","values","a","EDU_AXIOS","post","process","cl","then","resp","data","catch","err","notify","useEffect","getClasses","get","map","d","sections","s","sd","text","value","push","className","id","md","lg","xl","enableReinitialize","formik","htmlFor","control","name","placeholder","options","type","block","color","onClick","icon","faTimesCircle","disabled","isSubmitting","dirty","isValid","style","marginLeft","faSave","onDismiss","to","faCheckCircle","record","console","log","length","striped","r","i","r1","fontSize","period","fontWeight","start","end","j","textAlign","showTimeTable","expand","colorScheme","float","fluid","href","variant","popper","Loader","role","TextError","children","connect","rest","switcher","error","getIn","errors","touch","touched","field","option","Fragment","checked","includes","label","component","handleChange","handleBlur","onChange","onBlur","selected","setSelected","final","EVFormikControl","MultiSelect"],"mappings":"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","file":"static/js/27.9d04c104.chunk.js","sourcesContent":["import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CRow,\r\n  CFormLabel,\r\n  CCardFooter,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CTable,\r\n  CTableHead,\r\n  CTableRow,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHeaderCell,\r\n} from \"@coreui/react-pro\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"../../navbars/ev_super_admin/nav_normal_school\";\r\nimport {\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n  faArrowRight,\r\n  faSave,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Loader from \"src/loader/Loader\";\r\nimport EVFormikControl from \"src/ev_formik_controls/EVFormikControl\";\r\nimport EDU_AXIOS from \"src/helpers/edu_axios\";\r\nimport notify from \"src/helpers/notify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst create_admin = (props) => {\r\n  let school_id = props.match.params.school_id;\r\n  let [visible, setVisible] = useState(false);\r\n  let [days, setDays] = useState(0);\r\n  let [sDate, setSDate] = useState(\"\");\r\n  let [eDate, setEDate] = useState(\"\");\r\n  let [dataLoaded, setDataLoaded] = useState(false);\r\n  let [showTable, setShowTable] = useState(false);\r\n  let [tableData, setTableData] = useState([]);\r\n  let [classes, setClasses] = useState(\"\");\r\n\r\n  // holiday type\r\n  let h_type = [\r\n    { text: \"Holiday\", value: \"holiday\" },\r\n    { text: \"Exam Calender\", value: \"exam_calender\" },\r\n    { text: \"Summer Holiday\", value: \"summer_holiday\" },\r\n  ];\r\n  // open cancle modal box\r\n  let openModalBox = () => {\r\n    setTimeout(() => setVisible(true), 0);\r\n  };\r\n\r\n  // close cancle modal box\r\n  let closeModalBox = () => {\r\n    setTimeout(() => setVisible(false), 0);\r\n  };\r\n\r\n  // gate today\r\n  let getToday = () => {\r\n    let today = new Date();\r\n    let dd = String(today.getDate()).padStart(2, \"0\");\r\n    let mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    let yyyy = today.getFullYear();\r\n    today = yyyy + \"-\" + mm + \"-\" + dd;\r\n    return today;\r\n  };\r\n\r\n  // gate tomorrow\r\n  let getTomorrow = () => {\r\n    let tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    let dd = String(tomorrow.getDate()).padStart(2, \"0\");\r\n    let mm = String(tomorrow.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    let yyyy = tomorrow.getFullYear();\r\n    tomorrow = yyyy + \"-\" + mm + \"-\" + dd;\r\n    return tomorrow;\r\n  };\r\n\r\n  // start date value\r\n  let sDateVal = (e) => {\r\n    setTimeout(() => setSDate(e.target.value), 0);\r\n  };\r\n  // end date value\r\n  let eDateVal = (e) => {\r\n    setTimeout(() => setEDate(e.target.value), 0);\r\n  };\r\n  // aData\r\n  let aDate = (sDate, eDate) => {\r\n    if (sDate != \"\" && eDate != \"\") {\r\n      let start = sDate.split(\"-\").reverse();\r\n      start = start[1] + \"/\" + start[0] + \"/\" + start[2];\r\n      let end = eDate.split(\"-\").reverse();\r\n      end = end[1] + \"/\" + end[0] + \"/\" + end[2];\r\n      var date1 = new Date(start);\r\n      var date2 = new Date(end);\r\n      const diffTime = Math.abs(date2 - date1);\r\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n      setDays(diffDays + 1);\r\n    } else {\r\n      setDays(0);\r\n    }\r\n  };\r\n  // formik params\r\n  let initialValues = {\r\n    class: \"\",\r\n    start_date: sDate,\r\n    end_date: eDate,\r\n  };\r\n\r\n  // validation rules of the form fields\r\n  const validationSchema = Yup.object().shape({\r\n    class: Yup.string().required(\"Class is required\"),\r\n    start_date: Yup.string().required(\"Start date is required\"),\r\n    end_date: Yup.string().required(\"End date is required\"),\r\n  });\r\n  // submit form\r\n  const onSubmit = async (values) => {\r\n    await EDU_AXIOS.post(\r\n      `${process.env.REACT_APP_API_PATH}/ttm/generate-time-table`,\r\n      {\r\n        school_id: school_id,\r\n        cl: values.class,\r\n        start_date: values.start_date,\r\n        end_date: values.end_date,\r\n      }\r\n    )\r\n      .then((resp) => {\r\n        setShowTable(true);\r\n        setTableData(resp.data.data);\r\n      })\r\n      .catch((err) => {\r\n        notify(\"error\", err);\r\n      });\r\n  };\r\n\r\n  // get constraints detail from server\r\n  useEffect(async () => {\r\n    setDataLoaded(false);\r\n    const res = await getClasses();\r\n    if (res) {\r\n      setDataLoaded(true);\r\n    }\r\n  }, []);\r\n\r\n  let showTimeTable = () => {\r\n    let record = [];\r\n    console.log(tableData);\r\n    if (tableData.length > 0) {\r\n      record.push(\r\n        <CRow className=\"mt-2\">\r\n          <CCol md={12}>\r\n            <CTable striped>\r\n              <CTableHead color=\"dark\">\r\n                {tableData.map((r, i) => {\r\n                  if (i === 0) {\r\n                    return (\r\n                      <CTableRow>\r\n                        {r.map((r1) => {\r\n                          return (\r\n                            <CTableDataCell>\r\n                              <span style={{ fontSize: \"12px\" }}>\r\n                                {r1.period}\r\n                              </span>\r\n                              <br />\r\n                              <span\r\n                                style={{\r\n                                  fontSize: \"10px\",\r\n                                  fontWeight: \"bolder\",\r\n                                }}\r\n                              >\r\n                                {`${r1.start} - ${r1.end}`}\r\n                              </span>\r\n                            </CTableDataCell>\r\n                          );\r\n                        })}\r\n                      </CTableRow>\r\n                    );\r\n                  }\r\n                })}\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {tableData.map((r, i) => {\r\n                  if (i > 0) {\r\n                    return (\r\n                      <CTableRow>\r\n                        {r.map((r1, j) => {\r\n                          if (j == 0) {\r\n                            return <CTableDataCell>{r1.name}</CTableDataCell>;\r\n                          } else {\r\n                            return <CTableDataCell>{r1.name}</CTableDataCell>;\r\n                          }\r\n                        })}\r\n                      </CTableRow>\r\n                    );\r\n                  }\r\n                })}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCol>\r\n        </CRow>\r\n      );\r\n    } else {\r\n      record.push(\r\n        <CRow className=\"mt-2\">\r\n          <CCol md={12} style={{ textAlign: \"center\" }}>\r\n            No record found\r\n          </CCol>\r\n        </CRow>\r\n      );\r\n    }\r\n    return record;\r\n  };\r\n\r\n  // get teacher data from database\r\n  const getClasses = async () => {\r\n    try {\r\n      await EDU_AXIOS.get(\r\n        `${process.env.REACT_APP_API_PATH}/cm/get-sections/${school_id}`\r\n      )\r\n        .then((resp) => {\r\n          let data = [];\r\n          resp.data.data.map((d) => {\r\n            return d.sections.map((s) => {\r\n              let sd = {\r\n                text: `${d.class}-${s}`,\r\n                value: `${d.class}-${s}`,\r\n              };\r\n              data.push(sd);\r\n            });\r\n          });\r\n          setClasses(data);\r\n        })\r\n        .catch((err) => {\r\n          notify(\"error\", err);\r\n        });\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CCardGroup>\r\n      <CCard className=\"p-2\">\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol>\r\n              <NavBar id={school_id} />\r\n            </CCol>\r\n          </CRow>\r\n          <CRow>\r\n            <CCol md=\"8\" lg=\"6\" xl=\"8\">\r\n              <h5>Time Table (Admin)</h5>\r\n            </CCol>\r\n          </CRow>\r\n          <p className=\"text-muted\">Create Admin Time Table</p>\r\n          {dataLoaded ? (\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validationSchema={validationSchema}\r\n              onSubmit={onSubmit}\r\n              enableReinitialize={true}\r\n            >\r\n              {(formik) => (\r\n                <Form className=\"row g-3\">\r\n                  <CCol md={4}>\r\n                    <CFormLabel htmlFor=\"class\" className=\"required-field\">\r\n                      Type\r\n                    </CFormLabel>\r\n                    <EVFormikControl\r\n                      control=\"selectwithkey\"\r\n                      name=\"class\"\r\n                      id=\"class\"\r\n                      placeholder=\"Select class...\"\r\n                      options={classes}\r\n                    />\r\n                  </CCol>\r\n                  <CCol md={4}>\r\n                    <CFormLabel htmlFor=\"start\" className=\"required-field\">\r\n                      Start Date\r\n                    </CFormLabel>\r\n                    <EVFormikControl\r\n                      control=\"input\"\r\n                      type=\"date\"\r\n                      name=\"start_date\"\r\n                      id=\"start_date\"\r\n                    />\r\n                  </CCol>\r\n                  <CCol md={4}>\r\n                    <CFormLabel htmlFor=\"end\" className=\"required-field\">\r\n                      End Date\r\n                    </CFormLabel>\r\n                    <EVFormikControl\r\n                      control=\"input\"\r\n                      type=\"date\"\r\n                      name=\"end_date\"\r\n                      id=\"end_date\"\r\n                    />\r\n                  </CCol>\r\n                  <CCardFooter>\r\n                    <CButton block color=\"light\" onClick={openModalBox}>\r\n                      <FontAwesomeIcon icon={faTimesCircle} /> Cancel\r\n                    </CButton>\r\n                    <CButton\r\n                      block\r\n                      color=\"dark\"\r\n                      type=\"submit\"\r\n                      disabled={\r\n                        formik.isSubmitting || !formik.dirty || !formik.isValid\r\n                      }\r\n                      style={{ marginLeft: \"15px\" }}\r\n                    >\r\n                      {formik.isSubmitting ? (\r\n                        <Loader />\r\n                      ) : (\r\n                        <>\r\n                          <FontAwesomeIcon icon={faSave} /> Save\r\n                        </>\r\n                      )}\r\n                    </CButton>\r\n                  </CCardFooter>\r\n                  <CModal visible={visible} onDismiss={closeModalBox}>\r\n                    <CModalHeader onDismiss={closeModalBox}>\r\n                      <CModalTitle>\r\n                        <h5>Cancel</h5>\r\n                      </CModalTitle>\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody>Do You Want To Cancel ?</CModalBody>\r\n                    <CModalFooter>\r\n                      <CButton color=\"light\" onClick={closeModalBox}>\r\n                        <FontAwesomeIcon icon={faTimesCircle} /> No\r\n                      </CButton>\r\n                      <Link to=\"/\">\r\n                        <CButton color=\"dark\">\r\n                          <FontAwesomeIcon icon={faCheckCircle} /> Yes\r\n                        </CButton>\r\n                      </Link>\r\n                    </CModalFooter>\r\n                  </CModal>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          ) : (\r\n            <Loader />\r\n          )}\r\n          <CRow>\r\n            <CCol md={12}>{showTable && showTimeTable()}</CCol>\r\n          </CRow>\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCardGroup>\r\n  );\r\n};\r\n\r\nexport default create_admin;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CNavbar,\r\n  CNavbarToggler,\r\n  CNavbarNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CContainer,\r\n  CCollapse,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n} from \"@coreui/react-pro\";\r\nexport default (props) => {\r\n  let id = props.id;\r\n  const [visible, setVisible] = useState(false);\r\n  return (\r\n    <>\r\n      <CNavbar\r\n        expand=\"\"\r\n        colorScheme=\"light\"\r\n        className=\"bg-secondry\"\r\n        style={{ float: \"right\" }}\r\n      >\r\n        <CContainer fluid>\r\n          <CNavbarToggler onClick={() => setVisible(!visible)} />\r\n          <CCollapse className=\"navbar-collapse\" visible={visible}>\r\n            <CNavbarNav>\r\n              <a color=\"secondary\" className=\"btn btn-default\"  href={`/#/school-management/get-users/${id}`}>User Management</a>\r\n            {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n            <CDropdownToggle color=\"secondary\" >\r\n                 User Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/user-management/${id}`}\r\n                  >\r\n                   Add Users\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/get-users/${id}`}\r\n                  >\r\n                   get Users\r\n                  </CDropdownItem>\r\n                  </CDropdownMenu>\r\n                  </CDropdown> */}\r\n                  <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\" >\r\n                  Class Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-classes/${id}`}\r\n                  >\r\n                    Create/Edit Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/view-classes/${id}`}\r\n                  >\r\n                    View Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-sections/${id}`}\r\n                  >\r\n                    Create Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/manage-sections/${id}`}\r\n                  >\r\n                    Manage Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                    Class Mapping\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Subject Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  {/* <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Add Subject\r\n                  </CDropdownItem> */}\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Assign Subject To Class\r\n                  </CDropdownItem>\r\n                  {/* <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                    All Subjects\r\n                  </CDropdownItem> */}\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n         \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Teacher Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                    Add Teacher\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Section Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown> */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Academic Calendar Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Academic Year\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Holiday calendar & holiday list\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    Exam calendar\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Lesson Planning\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/lesson-management/get-subjects/${id}`}\r\n                  >\r\n                   Annual Lesson Plan\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Class Structure Creation\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Constraints management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                 School level constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Class wise constraints (inflow from class teacher)\r\n                  </CDropdownItem>\r\n                 \r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n            \r\n             \r\n              {/*<CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Student Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Students</CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Subjects</CDropdownItem>\r\n                </CDropdownMenu>\r\n  </CDropdown>*/}\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Calender Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/add-holiday/${id}`}\r\n                  >\r\n                    Add Holiday\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/view-calender/${id}`}\r\n                  >\r\n                    View Calender\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n          \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">Time Table</CDropdownToggle>\r\n                {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Data fitness – system checks the fitness of data\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown> */} \r\n               \r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Generate Annual Timetable\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n                <CDropdownMenu>\r\n                {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Update weekly time table.\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n                  <CDropdownItem href={`/#/time-table-management/step-1/${id}`}>\r\n                    Time Table (Initialization)\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/time-table-list/${id}`}\r\n                  >\r\n                    Time Table List\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href={`/#/time-table-management/step-2/${id}`}>\r\n                    General Constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href={`/#/time-table-management/step-2/${id}`}>Class Constraints</CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/create-time-table-admin/${id}`}\r\n                  >\r\n                    Generate Time Table (Admin)\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/generate-time-table-school/${id}`}\r\n                  >\r\n                    Generate Time Table (School)\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n            </CNavbarNav>\r\n          </CCollapse>\r\n        </CContainer>\r\n      </CNavbar>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>;\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nfunction TextError(props) {\r\n  return <div className=\"invalid-feedback\">{props.children}</div>;\r\n}\r\n\r\nexport default TextError;\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst CheckBox = (props) => {\r\n  const { formik, name, options, switcher, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={\r\n                    field.value ? field.value.includes(option.value) : \"\"\r\n                  }\r\n                  label={option.text}\r\n                  disabled={option.disabled ? option.disabled : false}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}\r\n                  }`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(CheckBox);\r\n","import React from \"react\";\r\nimport { CFormInput } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Input(props) {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <CFormInput\r\n        id={id}\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        {...rest}\r\n        className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n      />\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(Input);\r\n","import React, { useState } from \"react\";\r\nimport { CMultiSelect } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn, useField } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Multiselect = (props) => {\r\n  let { formik, name, id, options, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  const [selected, setSelected] = useState([]);\r\n  let final = [];\r\n  return (\r\n    <>\r\n      <Field name={name} id={id} onChange={handleChange} onBlur={handleBlur}>\r\n        {({ field }) => {\r\n          selected.map((d) => {\r\n            final.push(d.value);\r\n            return final;\r\n          });\r\n          formik.values[`${name}`] = final;\r\n\r\n          return (\r\n            <CMultiSelect\r\n              {...field}\r\n              {...rest}\r\n              options={options}\r\n              onChange={setSelected}\r\n              className={`form-control  ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Multiselect);\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst RadioButton = (props) => {\r\n  const { formik, name, options, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  type=\"radio\"\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={field.value === option.value}\r\n                  label={option.text}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(RadioButton);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Select = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option} value={option}>\r\n                    {option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Select);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst SelectWithKey = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.text}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(SelectWithKey);\r\n","import React from \"react\";\r\nimport { CFormTextarea } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Textarea = (props) => {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormTextarea\r\n              id={id}\r\n              name={name}\r\n              {...field}\r\n              {...rest}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Textarea);\r\n","import React from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\nimport Input from \"./Input\";\r\nimport MultiSelect from \"./MultiSelect\";\r\nimport RadioButton from \"./RadioButton\";\r\nimport Select from \"./Select\";\r\nimport SelectWithKey from \"./SelectWithKey\";\r\nimport Textarea from \"./Textarea\";\r\nfunction EVFormikControl(props) {\r\n  const { control, ...rest } = props;\r\n  switch (control) {\r\n    case \"input\":\r\n      return <Input {...rest} />;\r\n    case \"textarea\":\r\n      return <Textarea {...rest} />;\r\n    case \"select\":\r\n      return <Select {...rest} />;\r\n    case \"selectwithkey\":\r\n      return <SelectWithKey {...rest} />;\r\n    case \"multiselect\":\r\n      return <MultiSelect {...rest} />;\r\n    case \"radio\":\r\n      return <RadioButton {...rest} />;\r\n    case \"checkbox\":\r\n      return <CheckBox {...rest} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default EVFormikControl;\r\n"],"sourceRoot":""}