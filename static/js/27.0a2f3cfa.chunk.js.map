{"version":3,"sources":["views/ev_super_admin/time_table/generate_timetable.js","views/navbars/ev_super_admin/nav_normal_school.js","loader/Loader.js","ev_formik_controls/TextError.js","ev_formik_controls/CheckBox.js","ev_formik_controls/Input.js","ev_formik_controls/MultiSelect.js","ev_formik_controls/RadioButton.js","ev_formik_controls/Select.js","ev_formik_controls/SelectWithKey.js","ev_formik_controls/Textarea.js","ev_formik_controls/EVFormikControl.js"],"names":["generate_timetable","props","school_id","match","params","useState","dbsection","setDbsection","useEffect","EDU_AXIOS","get","process","then","response","data","catch","error","console","log","onSubmit","values","a","resetForm","post","cls_list","checked","res","get_sections","notify","message","err","className","id","md","lg","xl","initialValues","scope","map","section","class","role","sections","sec","style","marginRight","type","name","value","block","color","visible","setVisible","expand","colorScheme","float","fluid","onClick","href","variant","popper","Loader","TextError","children","connect","formik","options","rest","switcher","getIn","errors","touch","touched","field","option","Fragment","includes","label","text","disabled","component","handleChange","handleBlur","onChange","onBlur","selected","setSelected","final","d","push","placeholder","EVFormikControl","control","MultiSelect"],"mappings":"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","file":"static/js/27.0a2f3cfa.chunk.js","sourcesContent":["import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CRow,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CTableHead,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CFormLabel,\r\n  CCardFooter,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n} from \"@coreui/react-pro\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"../../navbars/ev_super_admin/nav_normal_school\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  faSave,\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Loader from \"src/loader/Loader\";\r\nimport EVFormikControl from \"src/ev_formik_controls/EVFormikControl\";\r\nimport EDU_AXIOS from \"src/helpers/edu_axios\";\r\nimport notify from \"src/helpers/notify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MaterialTable from \"material-table\";\r\n\r\nconst generate_timetable = (props) => {\r\n  const school_id = props.match.params.school_id;\r\n  const [dbsection, setDbsection] = useState([]);\r\n\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(\r\n      `${process.env.REACT_APP_API_PATH}/cm/get-sections/${school_id}`\r\n    )\r\n      .then((response) => {\r\n        setDbsection(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const tableValue = [\r\n    {\r\n      class: 1,\r\n      section: [\r\n        {\r\n          text: \"A1\",\r\n          value: \"A\",\r\n        },\r\n        {\r\n          text: \"B1\",\r\n          value: \"B\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  //initialize table data\r\n  const [tableData, setTableData] = useState([]);\r\n  // const initialData= () => {\r\n  //   setTableData([dbsection.map((section) => {\r\n  //     return {\r\n  //       text: section.section_name,\r\n  //       section_name: section.section_name,\r\n  //     }\r\n  //   })])\r\n  // }\r\n\r\n  // formik params\r\n  // let initialValues = {\r\n  //   sc_class: \"\",\r\n  //   sections: [],\r\n  // };\r\n  // // validation rules of the form fields\r\n  // const validationSchema = Yup.object().shape({\r\n  //   sc_class: Yup.string().required(\"Class is required\"),\r\n  //   sections: Yup.array().min(1).of(Yup.string().trim().required()),\r\n  // });\r\n  // // submit form\r\n  // const onSubmit = async (values, { resetForm }) => {\r\n  //   await EDU_AXIOS.post(\r\n  //     process.env.REACT_APP_API_PATH + \"/cm/create-sections\",\r\n  //     {\r\n  //       school_id: school_id,\r\n  //       sc_class: values.sc_class,\r\n  //       sc_sections: values.sections,\r\n  //     }\r\n  //   )\r\n  //     .then(async (res) => {\r\n  //       resetForm({ values: \"\" });\r\n  //       get_sections();\r\n  //       notify(\"success\", res.data.message);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       notify(\"error\", err);\r\n  //     });\r\n  // };\r\n\r\n\r\n  const onSubmit = async (values, { resetForm }) => {\r\n    await EDU_AXIOS.post(\r\n      `${process.env.REACT_APP_API_PATH}/ttm/generate-time-table-button/${school_id}`,\r\n      {\r\n        school_id: school_id,\r\n        cls_list: values.checked,\r\n      }\r\n    )\r\n      .then(async (res) => {\r\n        resetForm({ values: \"\" });\r\n        get_sections();\r\n        notify(\"success\", res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        notify(\"error\", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <CCardGroup>\r\n      <CCard className=\"p-2\">\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol>\r\n              <NavBar id={school_id} />\r\n            </CCol>\r\n          </CRow>\r\n          <CRow>\r\n            <CCol md=\"8\" lg=\"6\" xl=\"8\">\r\n              <h5>Generate Timetable</h5>\r\n            </CCol>\r\n          </CRow>\r\n          <p className=\"text-muted\">\r\n            Select the class to which timetable is to be generated\r\n          </p>\r\n          <Formik\r\n            initialValues={{\r\n              checked: [],\r\n            }}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {({ values }) => (\r\n              <Form>\r\n                <CTable>\r\n                  <CTableHead>\r\n                    <CTableRow>\r\n                      <CTableHeaderCell scope=\"col\">Class</CTableHeaderCell>\r\n                      <CTableHeaderCell scope=\"col\">Sections</CTableHeaderCell>\r\n                    </CTableRow>\r\n                  </CTableHead>\r\n                  <CTableBody>\r\n                    {dbsection.map((section) => {\r\n                      return (\r\n                        <CTableRow>\r\n                          <CTableHeaderCell\r\n                            scope=\"row\"\r\n                            id=\"checkbox-group\"\r\n                          >{`${section.class}`}</CTableHeaderCell>\r\n                          <CTableDataCell\r\n                            role=\"group\"\r\n                            aria-labelledby=\"checkbox-group\"\r\n                          >\r\n                            {section.sections.map((sec) => {\r\n                              return (\r\n                                <label style={{ marginRight: \"1.2rem\" }}>\r\n                                  <Field\r\n                                    type=\"checkbox\"\r\n                                    name=\"checked\"\r\n                                    value={`${sec}-${section.class}`}\r\n                                    style={{ marginRight: \"0.4rem\" }}\r\n                                  />\r\n                                  {`${sec}`}\r\n                                </label>\r\n                              );\r\n                            })}\r\n                          </CTableDataCell>\r\n                        </CTableRow>\r\n                      );\r\n                    })}\r\n                  </CTableBody>\r\n                </CTable>\r\n                <CButton block color=\"light\" type=\"submit\">\r\n                  <FontAwesomeIcon /> Generate\r\n                </CButton>\r\n                {/* <button type=\"submit\">Generate</button> */}\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </CCardBody>\r\n      </CCard>\r\n      {console.log(dbsection)}\r\n    </CCardGroup>\r\n  );\r\n};\r\n\r\nexport default generate_timetable;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CNavbar,\r\n  CNavbarToggler,\r\n  CNavbarNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CContainer,\r\n  CCollapse,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n} from \"@coreui/react-pro\";\r\nexport default (props) => {\r\n  let id = props.id;\r\n  const [visible, setVisible] = useState(false);\r\n  return (\r\n    <>\r\n      <CNavbar\r\n        expand=\"\"\r\n        colorScheme=\"light\"\r\n        className=\"bg-secondry\"\r\n        style={{ float: \"right\" }}\r\n      >\r\n        <CContainer fluid>\r\n          <CNavbarToggler onClick={() => setVisible(!visible)} />\r\n          <CCollapse className=\"navbar-collapse\" visible={visible}>\r\n            <CNavbarNav>\r\n              <a color=\"secondary\" className=\"btn btn-default\"  href={`/#/school-management/get-users/${id}`}>User Management</a>\r\n            {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n            <CDropdownToggle color=\"secondary\" >\r\n                 User Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/user-management/${id}`}\r\n                  >\r\n                   Add Users\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/get-users/${id}`}\r\n                  >\r\n                   get Users\r\n                  </CDropdownItem>\r\n                  </CDropdownMenu>\r\n                  </CDropdown> */}\r\n                  <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\" >\r\n                  Class Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-classes/${id}`}\r\n                  >\r\n                    Create/Edit Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/view-classes/${id}`}\r\n                  >\r\n                    View Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-sections/${id}`}\r\n                  >\r\n                    Create Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/manage-sections/${id}`}\r\n                  >\r\n                    Manage Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                    Class Mapping\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Subject Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  {/* <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Add Subject\r\n                  </CDropdownItem> */}\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Assign Subject To Class\r\n                  </CDropdownItem>\r\n                  {/* <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                    All Subjects\r\n                  </CDropdownItem> */}\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n         \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Teacher Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                    Add Teacher\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Section Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown> */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Academic Calendar Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Academic Year\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Holiday calendar & holiday list\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    Exam calendar\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Lesson Planning\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/lesson-management/get-subjects/${id}`}\r\n                  >\r\n                   Annual Lesson Plan\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Class Structure Creation\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Constraints management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                 School level constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Class wise constraints (inflow from class teacher)\r\n                  </CDropdownItem>\r\n                 \r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n            \r\n             \r\n              {/*<CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Student Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Students</CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Subjects</CDropdownItem>\r\n                </CDropdownMenu>\r\n  </CDropdown>*/}\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Calender Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/add-holiday/${id}`}\r\n                  >\r\n                    Add Holiday\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/view-calender/${id}`}\r\n                  >\r\n                    View Calender\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n          \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">Time Table</CDropdownToggle>\r\n                {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Data fitness – system checks the fitness of data\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown> */} \r\n               \r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Generate Annual Timetable\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n                <CDropdownMenu>\r\n                {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Update weekly time table.\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n                  <CDropdownItem href={`/#/time-table-management/step-1/${id}`}>\r\n                    Time Table (Initialization)\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/time-table-list/${id}`}\r\n                  >\r\n                    Time Table List\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href={`/#/time-table-management/step-2/${id}`}>\r\n                    General Constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href={`/#/time-table-management/step-2/${id}`}>Class Constraints</CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/create-time-table-admin/${id}`}\r\n                  >\r\n                    Generate Time Table (Admin)\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/generate-time-table-school/${id}`}\r\n                  >\r\n                    Generate Time Table (School)\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n            </CNavbarNav>\r\n          </CCollapse>\r\n        </CContainer>\r\n      </CNavbar>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>;\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nfunction TextError(props) {\r\n  return <div className=\"invalid-feedback\">{props.children}</div>;\r\n}\r\n\r\nexport default TextError;\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst CheckBox = (props) => {\r\n  const { formik, name, options, switcher, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={\r\n                    field.value ? field.value.includes(option.value) : \"\"\r\n                  }\r\n                  label={option.text}\r\n                  disabled={option.disabled ? option.disabled : false}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}\r\n                  }`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(CheckBox);\r\n","import React from \"react\";\r\nimport { CFormInput } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Input(props) {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <CFormInput\r\n        id={id}\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        {...rest}\r\n        className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n      />\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(Input);\r\n","import React, { useState } from \"react\";\r\nimport { CMultiSelect } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn, useField } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Multiselect = (props) => {\r\n  let { formik, name, id, options, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  const [selected, setSelected] = useState([]);\r\n  let final = [];\r\n  return (\r\n    <>\r\n      <Field name={name} id={id} onChange={handleChange} onBlur={handleBlur}>\r\n        {({ field }) => {\r\n          selected.map((d) => {\r\n            final.push(d.value);\r\n            return final;\r\n          });\r\n          formik.values[`${name}`] = final;\r\n\r\n          return (\r\n            <CMultiSelect\r\n              {...field}\r\n              {...rest}\r\n              options={options}\r\n              onChange={setSelected}\r\n              className={`form-control  ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Multiselect);\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst RadioButton = (props) => {\r\n  const { formik, name, options, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  type=\"radio\"\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={field.value === option.value}\r\n                  label={option.text}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(RadioButton);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Select = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option} value={option}>\r\n                    {option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Select);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst SelectWithKey = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.text}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(SelectWithKey);\r\n","import React from \"react\";\r\nimport { CFormTextarea } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Textarea = (props) => {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormTextarea\r\n              id={id}\r\n              name={name}\r\n              {...field}\r\n              {...rest}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Textarea);\r\n","import React from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\nimport Input from \"./Input\";\r\nimport MultiSelect from \"./MultiSelect\";\r\nimport RadioButton from \"./RadioButton\";\r\nimport Select from \"./Select\";\r\nimport SelectWithKey from \"./SelectWithKey\";\r\nimport Textarea from \"./Textarea\";\r\nfunction EVFormikControl(props) {\r\n  const { control, ...rest } = props;\r\n  switch (control) {\r\n    case \"input\":\r\n      return <Input {...rest} />;\r\n    case \"textarea\":\r\n      return <Textarea {...rest} />;\r\n    case \"select\":\r\n      return <Select {...rest} />;\r\n    case \"selectwithkey\":\r\n      return <SelectWithKey {...rest} />;\r\n    case \"multiselect\":\r\n      return <MultiSelect {...rest} />;\r\n    case \"radio\":\r\n      return <RadioButton {...rest} />;\r\n    case \"checkbox\":\r\n      return <CheckBox {...rest} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default EVFormikControl;\r\n"],"sourceRoot":""}