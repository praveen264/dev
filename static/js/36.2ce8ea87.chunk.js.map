{"version":3,"sources":["../node_modules/tiny-warning/dist/tiny-warning.esm.js","views/ev_super_admin/school_management/create-normal-school/create-normal-school.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["warning","condition","message","useStyles","makeStyles","theme","root","margin","spacing","input","display","formControl","minWidth","maxWidth","chips","flexWrap","chip","noLabel","marginTop","SchoolCreation","useState","userID","setUSerID","school_name","setSchool_name","address","setAddress","pin","setPin","website","setWebsite","email","setEmail","mobile","setMobile","academics_from","setAcademics_from","academics_to","setacademics_to","license_start","setLicense_start","license_end","setLicense_end","total_users","password","setPassword","password2","setPassword2","state_name","setState_name","country_code","setCountry_code","city","setCity","stateName","setStateName","cityName","setCityName","visible","setVisible","React","classNames","countrylist","setCountryList","setChainSchools","chainSchoolId","logoName","userIDErr","setUserIDErr","schoolNameErr","setSchoolNameErr","pinErr","setPinErr","stateErr","setStateErr","cityErr","setCityErr","countryErr","setCountryErr","addressErr","setAddressErr","webErr","setWebErr","emailErr","setEmailErr","mobileErr","setMobileErr","passwordErr","setPasswordErr","password2Err","setPassword2Err","calStartErr","setCalStartErr","calEndErr","setCalEndErr","academicStartErr","setacAdemicStartErr","academicEndErr","setAcademicEndErr","setTotalErr","useEffect","EDU_AXIOS","get","process","then","response","countryArray","data","catch","error","console","log","resp","stateArray","respo","cityArray","class_name","total_student","inputList","onSubmit","e","a","preventDefault","formValidation","post","name","username","pin_code","state","acadmics_from","acadmics_to","classes","license_type","logo","chain_school_id","res","target","reset","notify","err","alert","totalErr","isValid","trim","test","length","UserIDinvalid","UserIDrequired","calShort","cal","start","end","pinshort","pinreq","addressShort","emailinvalid","emailrequired","mobshort","mobreq","passshort","passreq","pass2short","pass2req","id","md","lg","xl","className","htmlFor","type","placeholder","value","onChange","Object","keys","map","key","style","color","rows","countryCode","disabled","state_code","x","i","custom","block","onClick","float","icon","faTimesCircle","onDismiss","to","faCheckCircle","marginLeft","faSave","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/36.2ce8ea87.chunk.js","sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","// Created By : Sujay\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { uploadFile } from \"react-s3\";\r\nimport EDU_AXIOS from \"src/helpers/edu_axios\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCol,\r\n  CFormInput,\r\n  CRow,\r\n  CFormLabel,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CFormTextarea,\r\n} from \"@coreui/react-pro\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  faSave,\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport notify from \"src/helpers/notify\";\r\nconst config = {\r\n  bucketName: process.env.REACT_APP_BUCKET_NAME,\r\n  dirName: process.env.REACT_APP_SCHOOL_LOGO_DIR_NAME,\r\n  region: process.env.REACT_APP_REGION,\r\n  accessKeyId: process.env.REACT_APP_ACCESS_ID,\r\n  secretAccessKey: process.env.REACT_APP_ACCESS_KEY,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst classs = [\"SMS\", \"LMS\", \"Video Conferencing\", \"Demo\"];\r\n\r\nconst SchoolCreation = () => {\r\n  // set form values\r\n  const classes = useStyles();\r\n  const [userID, setUSerID] = useState(\"\");\r\n  const [school_name, setSchool_name] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [pin, setPin] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(\"\");\r\n  const [academics_from, setAcademics_from] = useState(\"\");\r\n  const [academics_to, setacademics_to] = useState(\"\");\r\n  const [license_start, setLicense_start] = useState(\"\");\r\n  const [license_end, setLicense_end] = useState(\"\");\r\n  const [total_users, setTotal_users] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [state_name, setState_name] = useState([]);\r\n  const [country_code, setCountry_code] = useState();\r\n  const [city, setCity] = useState([]);\r\n  const [stateName, setStateName] = useState();\r\n  const [cityName, setCityName] = useState();\r\n  const [visible, setVisible] = useState(false);\r\n  const [classNames, setClassNames] = React.useState([]);\r\n  const [countrylist, setCountryList] = useState([]);\r\n  const [chainSchools, setChainSchools] = useState([]);\r\n  const [chainSchoolId, setCahinSchoolId] = useState(\"\");\r\n  const [logoName, setLogoName] = useState(\"\");\r\n\r\n  // Defining Errors\r\n  const [userIDErr, setUserIDErr] = useState({});\r\n  const [schoolNameErr, setSchoolNameErr] = useState({});\r\n  const [pinErr, setPinErr] = useState({});\r\n  const [stateErr, setStateErr] = useState({});\r\n  const [cityErr, setCityErr] = useState({});\r\n  const [countryErr, setCountryErr] = useState({});\r\n  const [addressErr, setAddressErr] = useState({});\r\n  const [webErr, setWebErr] = useState({});\r\n  const [emailErr, setEmailErr] = useState({});\r\n  const [mobileErr, setMobileErr] = useState({});\r\n  const [passwordErr, setPasswordErr] = useState({});\r\n  const [password2Err, setPassword2Err] = useState({});\r\n  const [calStartErr, setCalStartErr] = useState({});\r\n  const [calEndErr, setCalEndErr] = useState({});\r\n  const [academicStartErr, setacAdemicStartErr] = useState({});\r\n  const [academicEndErr, setAcademicEndErr] = useState({});\r\n  const [totalErr, setTotalErr] = useState({});\r\n\r\n  // to get country list from server\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(process.env.REACT_APP_API_PATH + \"/auth/get-countries\")\r\n      .then((response) => {\r\n        let countryArray = response.data.data;\r\n        setCountryList(countryArray);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // to get chain school list from server\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(\r\n      process.env.REACT_APP_API_PATH + \"/auth/get-chain-school-list\"\r\n    )\r\n      .then((response) => {\r\n        setChainSchools(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // set country code before calling state list api\r\n  const selectState = (e) => {\r\n    var countryCode = e.target.value;\r\n    setCountry_code(countryCode);\r\n  };\r\n\r\n  // get states by country code\r\n  useEffect(() => {\r\n    // check country code is set or not\r\n    if (country_code) {\r\n      EDU_AXIOS.get(\r\n        process.env.REACT_APP_API_PATH + `/auth/get-states/${country_code}`\r\n      )\r\n        .then((resp) => {\r\n          let stateArray = resp.data.data;\r\n          setState_name(stateArray);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [country_code]);\r\n\r\n  // get cities of a state\r\n  useEffect(() => {\r\n    // check coundry code and state name is set or not\r\n    if (stateName) {\r\n      EDU_AXIOS.get(\r\n        process.env.REACT_APP_API_PATH +\r\n          `/auth/get-cities/${country_code}/${stateName}`\r\n      )\r\n        //EDU_AXIOS.get(cityURL)\r\n        .then((respo) => {\r\n          let cityArray = respo.data.data;\r\n\r\n          setCity(cityArray);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [stateName]);\r\n\r\n  const handleChange = (event) => {\r\n    setClassNames(event.target.value);\r\n  };\r\n\r\n  const [inputList, setInputList] = useState([\r\n    { class_name: \"\", total_student: \"\" },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n    // console.log(inputList,\"B\");\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { class_name: \"\", total_student: \"\" }]);\r\n  };\r\n\r\n  // get a file to upload\r\n  const handleFileInput = (e) => {\r\n    setLogoName(e.target.files[0].name);\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n  // upload selected file to s3 bucket\r\n  const handleUpload = async (file) => {\r\n    uploadFile(file, config)\r\n      .then((data) => console.log(data, \"Logo uploaded successfully\"))\r\n      .catch((err) => console.error(err, \"\"));\r\n  };\r\n\r\n  // const [validated, setValidated] = useState(false);\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const isValid = await formValidation();\r\n    // check form is valid or not\r\n    if (isValid) {\r\n      return await EDU_AXIOS.post(\r\n        process.env.REACT_APP_API_PATH + \"/auth/create-normal-school\",\r\n        {\r\n          name: school_name,\r\n          username: userID,\r\n          password: password,\r\n          email: email,\r\n          mobile: mobile,\r\n          address: address,\r\n          pin_code: pin,\r\n          state: stateName,\r\n          city: cityName,\r\n          website: website,\r\n          acadmics_from: academics_from,\r\n          acadmics_to: academics_to,\r\n          license_start: license_start,\r\n          license_end: license_end,\r\n          classes: inputList,\r\n          total_users: total_users,\r\n          license_type: classNames,\r\n          logo: logoName,\r\n          chain_school_id: chainSchoolId,\r\n        }\r\n      )\r\n        .then(async (res) => {\r\n          e.target.reset();\r\n          notify(\"success\",res.data.message);\r\n      //    alert(res.data.message);\r\n        })\r\n        .catch((err) => {\r\n          alert(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const formValidation = async () => {\r\n    const userIDErr = {};\r\n    const schoolNameErr = {};\r\n    const pinErr = {};\r\n    const webErr = {};\r\n    const emailErr = {};\r\n    const mobileErr = {};\r\n    const passwordErr = {};\r\n    const password2Err = {};\r\n    const stateErr = {};\r\n    const cityErr = {};\r\n    const countryErr = {};\r\n    const addressErr = {};\r\n    const calStartErr = {};\r\n    const calEndErr = {};\r\n    const academicStartErr = {};\r\n    const academicEndErr = {};\r\n    const totalErr = {};\r\n\r\n    let isValid = true;\r\n    // Validations for different fields\r\n\r\n    if (!userID.trim()) {\r\n      userIDErr.UserIDrequired = \"Required\";\r\n    } else if (/[^a-zA-Z0-9_.]/.test(userID) || userID.trim().length < 6) {\r\n      userIDErr.UserIDinvalid =\r\n        \"UserID is Invalid (@ , # not supported) / < 6 Digits\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!license_start.trim()) {\r\n      calStartErr.calShort = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!license_end.trim()) {\r\n      calEndErr.cal = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!academics_from.trim()) {\r\n      academicStartErr.start = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!academics_to.trim()) {\r\n      academicEndErr.end = \" Required\";\r\n      isValid = false;\r\n    }\r\n    // if (!total_users.trim()) {\r\n    //   totalErr.total = \" Required\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    // if (!school_name.trim()) {\r\n    //   schoolNameErr.schoolNameShort = \" Required\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    if (!pin.trim()) {\r\n      pinErr.pinreq = \" Required\";\r\n      isValid = false;\r\n    } else if (!/[123456789][0-9]{5}/.test(pin) || pin.trim().length > 6) {\r\n      pinErr.pinshort = \"PIN should be 6 Digits only / PIN Can't Start with 0\";\r\n      isValid = false;\r\n    }\r\n    if (!address.trim()) {\r\n      addressErr.addressShort = \" Required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!email.trim()) {\r\n      emailErr.emailrequired = \"Required\";\r\n      isValid = false;\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      emailErr.emailinvalid = \"Email address is invalid\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!mobile.trim()) {\r\n      mobileErr.mobreq = \" Required\";\r\n      isValid = false;\r\n    } else if (mobile.trim().length > 10 || !/[6789][0-9]{9}/.test(mobile)) {\r\n      mobileErr.mobshort = \"Mobile number must be Valid & of 10 Digits Only\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!password.trim()) {\r\n      passwordErr.passreq = \" Required\";\r\n      isValid = false;\r\n    } else if (password.trim().length < 6 || password.trim().length > 20) {\r\n      passwordErr.passshort = \"Invalid / < 6 Digits\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!password2.trim()) {\r\n      passwordErr.pass2req = \" \";\r\n      isValid = false;\r\n    } else if (password2 !== password) {\r\n      password2Err.pass2short = \"Doesn't Match \";\r\n      isValid = false;\r\n    }\r\n    // setting errors in validation\r\n    setUserIDErr(userIDErr);\r\n    setSchoolNameErr(schoolNameErr);\r\n    setPinErr(pinErr);\r\n    setWebErr(webErr);\r\n    setEmailErr(emailErr);\r\n    setMobileErr(mobileErr);\r\n    setPasswordErr(passwordErr);\r\n    setPassword2Err(password2Err);\r\n    setCityErr(cityErr);\r\n    setStateErr(stateErr);\r\n    setCountryErr(countryErr);\r\n    setAddressErr(addressErr);\r\n    setCalStartErr(calStartErr);\r\n    setCalEndErr(calEndErr);\r\n    setacAdemicStartErr(academicStartErr);\r\n    setAcademicEndErr(academicEndErr);\r\n    setTotalErr(totalErr);\r\n    return isValid;\r\n  };\r\n  return (\r\n    //  School Creation Form\r\n    <form onSubmit={onSubmit} id=\"ev_create_normal_school\">\r\n      <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol md=\"8\" lg=\"6\" xl=\"8\">\r\n                  <h5>Create Normal School</h5>\r\n                </CCol>\r\n              </CRow>\r\n              <p className=\"text-muted\">Register a Normal School</p>\r\n\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel htmlFor=\"validationCustom01\" className=\"required-field\">\r\n                    School Name :\r\n                  </CFormLabel>\r\n\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"req1\"\r\n                    key=\"sname\"\r\n                    placeholder=\"Name of School\"\r\n                    value={school_name}\r\n                    onChange={(e) => {\r\n                      setSchool_name(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(schoolNameErr).map((key) => {\r\n                    return (\r\n                      <div style={{ color: \"red\" }}>{schoolNameErr[key]}</div>\r\n                    );\r\n                  })}\r\n                </CCol>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\">User Name :</CFormLabel>\r\n                  <CFormInput\r\n                    key=\"user\"\r\n                    id=\"school_name\"\r\n                    placeholder=\"Unique User Name\"\r\n                    value={userID}\r\n                    onChange={(e) => {\r\n                      setUSerID(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(userIDErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{userIDErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\"> Password :</CFormLabel>\r\n                  <CFormInput\r\n                    key=\"pass\"\r\n                    id=\"\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => {\r\n                      setPassword(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(passwordErr).map((key) => {\r\n                    return (\r\n                      <div style={{ color: \"red\" }}>{passwordErr[key]}</div>\r\n                    );\r\n                  })}\r\n                </CCol>\r\n                <CCol>\r\n                  <CFormLabel className=\"required-field\"> Re-Enter Password :</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"\"\r\n                    key=\"re-pass\"\r\n                    type=\"password\"\r\n                    value={password2}\r\n                    onChange={(e) => {\r\n                      setPassword2(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(password2Err).map((key) => {\r\n                    return (\r\n                      <div style={{ color: \"red\" }}>{password2Err[key]}</div>\r\n                    );\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\">Email ID :</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"\"\r\n                    key=\"email\"\r\n                    placeholder=\"School Email ID\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                      setEmail(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(emailErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{emailErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\"> Mobile :</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"\"\r\n                    key=\"mobile\"\r\n                    placeholder=\"Mobile Number\"\r\n                    type=\"number\"\r\n                    value={mobile}\r\n                    onChange={(e) => {\r\n                      setMobile(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(mobileErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{mobileErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\"> School Address:</CFormLabel>\r\n                  <CFormTextarea\r\n                    id=\"\"\r\n                    key=\"address\"\r\n                    placeholder=\"Address of Your School\"\r\n                    rows=\"1\"\r\n                    value={address}\r\n                    onChange={(e) => {\r\n                      setAddress(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(addressErr).map((key) => {\r\n                    return (\r\n                      <div style={{ color: \"red\" }}>{addressErr[key]}</div>\r\n                    );\r\n                  })}\r\n                </CCol>\r\n\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\"> Pin:</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"\"\r\n                    key=\"pin\"\r\n                    placeholder=\"Pin Code\"\r\n                    type=\"number\"\r\n                    value={pin}\r\n                    onChange={(e) => {\r\n                      setPin(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(pinErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{pinErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\"> Country:</CFormLabel>\r\n                  <CFormSelect\r\n                    key=\"country\"\r\n                    value={countrylist.name}\r\n                    onChange={selectState}\r\n                  >\r\n                    <option>Select the Country</option>\r\n                    {countrylist.map((countrylist) => {\r\n                      return (\r\n                        <option value={countrylist.country_code}>\r\n                          {countrylist.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </CFormSelect>\r\n                  {Object.keys(countryErr).map((key) => {\r\n                    return (\r\n                      <div style={{ color: \"red\" }}>{countryErr[key]}</div>\r\n                    );\r\n                  })}\r\n                </CCol>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\"> State:</CFormLabel>\r\n                  <CFormSelect\r\n                    key=\"state\"\r\n                    value={state_name.name}\r\n                    onChange={(e) => {\r\n                      setStateName(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option disabled>Select the Country First</option>\r\n                    {state_name.map((state_name) => {\r\n                      return (\r\n                        <option value={state_name.state_code}>\r\n                          {state_name.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </CFormSelect>\r\n                  {Object.keys(stateErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{stateErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\"> City:</CFormLabel>\r\n                  <CFormSelect\r\n                    key=\"city\"\r\n                    value={city.name}\r\n                    onChange={(e) => {\r\n                      setCityName(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option disabled>Select the State First</option>\r\n                    {city.map((city) => {\r\n                      return <option value={city.name}>{city.name}</option>;\r\n                    })}\r\n                  </CFormSelect>\r\n                  {Object.keys(cityErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{cityErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n\r\n                {/* <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel> Region:</CFormLabel>\r\n                  <CFormSelect key=\"reg\" custom name=\"\" id=\"\">\r\n                    <option>Open this select menu</option>\r\n                    <option value=\"East\">East </option>\r\n                    <option value=\"West\">West</option>\r\n                    <option value=\"North\">North</option>\r\n                    <option value=\"South\">South</option>\r\n                    <option value=\"International\">International</option>\r\n                  </CFormSelect>\r\n                </CCol> */}\r\n              </CRow>\r\n              <CRow>\r\n                {/* <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel> Board:</CFormLabel>\r\n                  <CFormSelect key=\"board\" custom name=\"\" id=\"\">\r\n                    <option>Open this select menu</option>\r\n                    <option value=\"Cbse\">CBSE </option>\r\n                    <option value=\"Icse\">ICSE</option>\r\n                    <option value=\"IB\">IB</option>\r\n                    <option value=\"Igcse\">IGCSE</option>\r\n                    <option value=\"State\">STATE BOARD</option>\r\n                  </CFormSelect>\r\n                </CCol> */}\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\">Website Of School :</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"\"\r\n                    key=\"website\"\r\n                    placeholder=\"Example ==> www.websiteofschool.com\"\r\n                    value={website}\r\n                    onChange={(e) => {\r\n                      setWebsite(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(webErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{webErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow>\r\n                {/*hide*/}\r\n                {/* <CCol>\r\n                  <CFormLabel> Chain School List:</CFormLabel>\r\n                  <CFormSelect\r\n                    key=\"chain_schools\"\r\n                    value={chainSchools.school_id}\r\n                    onChange={(e) => {\r\n                      setCahinSchoolId(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select the chain school</option>\r\n                    {chainSchools.map((ch) => {\r\n                      return <option value={ch.school_id}>{ch.name}</option>;\r\n                    })}\r\n                  </CFormSelect>\r\n                </CCol> */}\r\n              </CRow>\r\n              {inputList.map((x, i) => {\r\n                return (\r\n                  <div className=\"box\">\r\n                    <CRow>\r\n                      {/* <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                        <CFormLabel> Select Class:</CFormLabel>\r\n                        <CFormSelect\r\n                          custom\r\n                          name=\"class_name\"\r\n                          id=\"\"\r\n                          key=\"clas\"\r\n                          value={x.class_name}\r\n                          onChange={(e) => handleInputChange(e, i)}\r\n                        >\r\n                          <option>Open this select menu</option>\r\n                          <option value=\"Nursery\">Nursery </option>\r\n                          <option value=\"LKG\">LKG </option>\r\n                          <option value=\"UKG\">UKG</option>\r\n                          <option value=\"1\">1</option>\r\n                          <option value=\"2\">2</option>\r\n                          <option value=\"3\">3</option>\r\n                          <option value=\"4\">4</option>\r\n                          <option value=\"5\">5</option>\r\n                          <option value=\"6\">6</option>\r\n                          <option value=\"7\">7</option>\r\n                          <option value=\"8\">8</option>\r\n                          <option value=\"9\">9</option>\r\n                          <option value=\"10\">10</option>\r\n                          <option value=\"11\">11</option>\r\n                          <option value=\"12\">12</option>\r\n                        </CFormSelect>\r\n                      </CCol> */}\r\n\r\n{/* hide */}\r\n                      {/* <CCol md=\"5\" lg=\"5\" xl=\"5\">\r\n                        <CFormLabel> Total License Limit :</CFormLabel>\r\n                        <CFormInput\r\n                          key=\"stud\"\r\n                          id=\"total_student\"\r\n                          name=\"total_student\"\r\n                          placeholder=\"\"\r\n                          value={x.total_student}\r\n                          onChange={(e) => handleInputChange(e, i)}\r\n                          type=\"number\"\r\n                        />\r\n                      </CCol> */}\r\n\r\n                      {/* <CCol>\r\n                        <CFormLabel> </CFormLabel>\r\n                        <div className=\"btn-box\">\r\n                          {inputList.length !== 1 && (\r\n                            <button\r\n                              className=\"butt\"\r\n                              onClick={() => handleRemoveClick(i)}\r\n                            >\r\n                              Remove\r\n                            </button>\r\n                          )}\r\n                          <span> </span>\r\n                          {inputList.length - 1 === i && (\r\n                            <button onClick={handleAddClick}>Add</button>\r\n                          )}\r\n                        </div>\r\n                      </CCol> */}\r\n                    </CRow>\r\n                  </div>\r\n                );\r\n              })}\r\n\r\n              {/* <CRow>\r\n                <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n                  <CFormLabel> Total Users</CFormLabel>\r\n                  <CFormInput\r\n                    key=\"tot\"\r\n                    id=\"\"\r\n                    placeholder=\"\"\r\n                    value={total_users}\r\n                    onChange={(e) => {\r\n                      setTotal_users(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(totalErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{totalErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n              </CRow> */}\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\"> Academics (From):</CFormLabel>\r\n                  <CFormSelect\r\n                    key=\"acaf\"\r\n                    custom\r\n                    name=\"\"\r\n                    id=\"\"\r\n                    value={academics_from}\r\n                    onChange={(e) => {\r\n                      setAcademics_from(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option>Open this select menu</option>\r\n                    <option value=\"January\">January </option>\r\n                    <option value=\"February\">February</option>\r\n                    <option value=\"March\">March</option>\r\n                    <option value=\"April\">April</option>\r\n                    <option value=\"May\">May</option>\r\n                    <option value=\"June\">June</option>\r\n                    <option value=\"July\">July</option>\r\n                    <option value=\"August\">August</option>\r\n                    <option value=\"September\">September</option>\r\n                    <option value=\"October\">October</option>\r\n                    <option value=\"November\">November</option>\r\n                    <option value=\"December\">December</option>\r\n                  </CFormSelect>\r\n                  {Object.keys(academicStartErr).map((key) => {\r\n                    return (\r\n                      <div style={{ color: \"red\" }}>\r\n                        {academicStartErr[key]}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </CCol>\r\n\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\"> Academics (To):</CFormLabel>\r\n                  <CFormSelect\r\n                    key=\"acat\"\r\n                    custom\r\n                    name=\"\"\r\n                    id=\"\"\r\n                    value={academics_to}\r\n                    onChange={(e) => {\r\n                      setacademics_to(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option>Open this select menu</option>\r\n                    <option value=\"January\">January </option>\r\n                    <option value=\"February\">February</option>\r\n                    <option value=\"March\">March</option>\r\n                    <option value=\"April\">April</option>\r\n                    <option value=\"May\">May</option>\r\n                    <option value=\"June\">June</option>\r\n                    <option value=\"July\">July</option>\r\n                    <option value=\"August\">August</option>\r\n                    <option value=\"September\">September</option>\r\n                    <option value=\"October\">October</option>\r\n                    <option value=\"November\">November</option>\r\n                    <option value=\"December\">December</option>\r\n                  </CFormSelect>\r\n                  {Object.keys(academicEndErr).map((key) => {\r\n                    return (\r\n                      <div style={{ color: \"red\" }}>{academicEndErr[key]}</div>\r\n                    );\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\"> License (Start):</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"\"\r\n                    key=\"lics\"\r\n                    placeholder=\"\"\r\n                    value={license_start}\r\n                    onChange={(e) => {\r\n                      setLicense_start(e.target.value);\r\n                    }}\r\n                    type=\"date\"\r\n                  />\r\n                  {Object.keys(calStartErr).map((key) => {\r\n                    return (\r\n                      <div style={{ color: \"red\" }}>{calStartErr[key]}</div>\r\n                    );\r\n                  })}\r\n                </CCol>\r\n\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\"> License (End):</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"\"\r\n                    key=\"lice\"\r\n                    placeholder=\"\"\r\n                    value={license_end}\r\n                    onChange={(e) => {\r\n                      setLicense_end(e.target.value);\r\n                    }}\r\n                    type=\"date\"\r\n                  />\r\n                  {Object.keys(calEndErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{calEndErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow>\r\n                {/* <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel> License Type:</CFormLabel>\r\n                  <FormControl className={classes.formControl}>\r\n                    <Select\r\n                      key=\"ltype\"\r\n                      labelId=\"demo-mutiple-checkbox-labels\"\r\n                      id=\"demo-mutiple-checkboxs\"\r\n                      variant=\"outlined\"\r\n                      multiple\r\n                      value={classNames}\r\n                      onChange={handleChange}\r\n                      input={<Input />}\r\n                      renderValue={(selected) => selected.join(\", \")}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {classs.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                          <Checkbox checked={classNames.indexOf(name) > -1} />\r\n                          <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </CCol> */}\r\n\r\n                {/* <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel> Upload Logo:</CFormLabel>\r\n                  <CFormInput\r\n                    key=\"logo\"\r\n                    type=\"file\"\r\n                    id=\"\"\r\n                    onChange={handleFileInput}\r\n                  />\r\n                </CCol> */}\r\n              </CRow>\r\n            </CCardBody>\r\n\r\n            <CCardFooter>\r\n              <CRow>\r\n                <CCol md={3}>\r\n                  <CButton\r\n                    block\r\n                    //variant=\"outline\"\r\n                    color=\"light\"\r\n                    onClick={() => setVisible(!visible)}\r\n                    style={{ float: \"left\" }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faTimesCircle} /> Cancel\r\n                  </CButton>\r\n\r\n                  <CModal visible={visible} onDismiss={() => setVisible(false)}>\r\n                    <CModalHeader onDismiss={() => setVisible(false)}>\r\n                      <CModalTitle>Cancel</CModalTitle>\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody>Do You Want To Cancel ?</CModalBody>\r\n                    <CModalFooter>\r\n                      <CButton color=\"light\" onClick={() => setVisible(false)}>\r\n                        <FontAwesomeIcon icon={faTimesCircle} /> No\r\n                      </CButton>\r\n                      <Link to=\"/\">\r\n                        <CButton color=\"dark\">\r\n                          <FontAwesomeIcon icon={faCheckCircle} /> Yes\r\n                        </CButton>\r\n                      </Link>\r\n                    </CModalFooter>\r\n                  </CModal>\r\n\r\n                  <CButton\r\n                    color=\"dark\"\r\n                    type=\"submit\"\r\n                    style={{ marginLeft: \"15px\" }}\r\n                    disabled={\r\n                      !school_name ||\r\n                      !userID ||\r\n                      !email ||\r\n                      !password ||\r\n                      !mobile ||\r\n                      !address ||\r\n                      !pin ||\r\n                   \r\n                      !academics_from ||\r\n                      !academics_to ||\r\n                      !license_start ||\r\n                      !license_end\r\n                    }\r\n                   \r\n                  >\r\n                    <FontAwesomeIcon icon={faSave} /> Save\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardFooter>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SchoolCreation;\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}