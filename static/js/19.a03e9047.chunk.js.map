{"version":3,"sources":["views/pages/login/Login.js","helpers/edu_axios.js","loader/Loader.js","ev_formik_controls/TextError.js","ev_formik_controls/CheckBox.js","ev_formik_controls/Input.js","ev_formik_controls/MultiSelect.js","ev_formik_controls/RadioButton.js","ev_formik_controls/Select.js","ev_formik_controls/SelectWithKey.js","ev_formik_controls/Textarea.js","ev_formik_controls/EVFormikControl.js","helpers/notify.js"],"names":["Login","props","validationSchema","Yup","username","min","max","required","password","history","useHistory","login","a","EDU_AXIOS","post","process","then","res","console","log","localStorage","setItem","data","token","JSON","parse","getItem","interceptors","request","use","config","headers","error","Promise","reject","push","catch","err","onSubmit","values","className","md","initialValues","formik","control","type","placeholder","name","id","htmlFor","xs","color","disabled","isSubmitting","dirty","isValid","notify","require","axios","default","create","timeout","authorization","response","status","removeItem","window","location","message","module","exports","Loader","role","TextError","children","connect","options","rest","switcher","getIn","errors","touch","touched","field","map","option","Fragment","value","checked","includes","label","text","component","handleChange","handleBlur","onChange","onBlur","useState","selected","setSelected","final","d","EVFormikControl","MultiSelect","toast","info","success","warn","dark"],"mappings":"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","file":"static/js/19.a03e9047.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CInputGroup,\r\n  CRow,\r\n  CFormFloating,\r\n  CFormLabel,\r\n} from \"@coreui/react-pro\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EDU_AXIOS from \"../../../helpers/edu_axios\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport EVFormikControl from \"src/ev_formik_controls/EVFormikControl\";\r\nimport Loader from \"src/loader/Loader\";\r\n\r\nconst Login = (props) => {\r\n  // formik params\r\n  const initialValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n  const validationSchema = Yup.object({\r\n    username: Yup.string()\r\n      .min(3, \"Must have atleast 3 characters\")\r\n      .max(15, \"Must be 15 characters or less\")\r\n      .required(\"Username is required\"),\r\n    password: Yup.string()\r\n      .min(6, \"Must have atleast 6 characters\")\r\n      .max(15, \"Must be 15 characters or less\")\r\n      .required(\"Password is required\"),\r\n  });\r\n  let history = useHistory();\r\n\r\n  const login = async (username, password) => {\r\n    return await EDU_AXIOS.post(\r\n      process.env.REACT_APP_API_PATH + \"/auth/login\",\r\n      {\r\n        username,\r\n        password,\r\n      }\r\n    )\r\n      .then(async (res) => {\r\n        console.log(res);\r\n        localStorage.setItem(\"user\", res.data.data);\r\n        // if app in development phase\r\n        if (process.env.REACT_APP_APP_ENV == \"test\") {\r\n          let token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n          EDU_AXIOS.interceptors.request.use(\r\n            (config) => {\r\n              if (token) {\r\n                config.headers[\"authorization\"] = \"Bearer \" + token;\r\n              }\r\n              // config.headers['Content-Type'] = 'application/json';\r\n              return config;\r\n            },\r\n            (error) => {\r\n              Promise.reject(error);\r\n            }\r\n          );\r\n        }\r\n        history.push(\"/dashboard\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    await login(values.username, values.password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"5\">\r\n            <CCardGroup>\r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  <h4>Login</h4>\r\n                  <p className=\"text-medium-emphasis\">\r\n                    Sign In to your Account\r\n                  </p>\r\n                  <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={onSubmit}\r\n                  >\r\n                    {(formik) => (\r\n                      <Form>\r\n                        <CFormFloating className=\"mb-3\">\r\n                          <EVFormikControl\r\n                            control=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Username\"\r\n                            name=\"username\"\r\n                            id=\"username\"\r\n                          />\r\n                          <CFormLabel\r\n                            htmlFor=\"username\"\r\n                            className=\"required-field\"\r\n                          >\r\n                            Username\r\n                          </CFormLabel>\r\n                        </CFormFloating>\r\n                        <CFormFloating className=\"mb-3\">\r\n                          <EVFormikControl\r\n                            control=\"input\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                          />\r\n                          <CFormLabel\r\n                            htmlFor=\"password\"\r\n                            className=\"required-field\"\r\n                          >\r\n                            Password\r\n                          </CFormLabel>\r\n                        </CFormFloating>\r\n                        <CRow>\r\n                          <CCol xs=\"6\">\r\n                            <CButton\r\n                              type=\"submit\"\r\n                              color=\"dark\"\r\n                              className=\"px-4\"\r\n                              disabled={\r\n                                formik.isSubmitting ||\r\n                                !formik.dirty ||\r\n                                !formik.isValid\r\n                              }\r\n                            >\r\n                              {formik.isSubmitting ? <Loader /> : \"Login\"}\r\n                            </CButton>\r\n                          </CCol>\r\n                          <CCol xs=\"6\" className=\"text-right\">\r\n                            <CButton color=\"gray\" className=\"px-0\">\r\n                              Forgot password?\r\n                            </CButton>\r\n                          </CCol>\r\n                        </CRow>\r\n                      </Form>\r\n                    )}\r\n                  </Formik>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","const notify = require(\"./notify\");\r\nconst axios = require(\"axios\").default;\r\nlet EDU_AXIOS;\r\nlet token = \"\";\r\n// to set authorization header on test mode\r\nlet user = localStorage.getItem(\"user\");\r\nif (user) {\r\n  token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"production\") {\r\n  EDU_AXIOS = axios.create({\r\n    timeout: 6000,\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        notify(\"error\", error.response.message);\r\n      } else {\r\n        notify(\"error\", error.response.message);\r\n      }\r\n    }\r\n  );\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"test\") {\r\n  if (token == \"\") {\r\n    console.log(\"there isno token\");\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  } else {\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        console.log(error.response.data.message);\r\n        notify(\"error\", error.response.data.message);\r\n      } else {\r\n        notify(\"error\", error.response.data.message);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nmodule.exports = EDU_AXIOS;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>;\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nfunction TextError(props) {\r\n  return <div className=\"invalid-feedback\">{props.children}</div>;\r\n}\r\n\r\nexport default TextError;\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst CheckBox = (props) => {\r\n  const { formik, name, options, switcher, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={\r\n                    field.value ? field.value.includes(option.value) : \"\"\r\n                  }\r\n                  label={option.text}\r\n                  disabled={option.disabled ? option.disabled : false}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}\r\n                  }`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(CheckBox);\r\n","import React from \"react\";\r\nimport { CFormInput } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Input(props) {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <CFormInput\r\n        id={id}\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        {...rest}\r\n        className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n      />\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(Input);\r\n","import React, { useState } from \"react\";\r\nimport { CMultiSelect } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn, useField } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Multiselect = (props) => {\r\n  let { formik, name, id, options, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  const [selected, setSelected] = useState([]);\r\n  let final = [];\r\n  return (\r\n    <>\r\n      <Field name={name} id={id} onChange={handleChange} onBlur={handleBlur}>\r\n        {({ field }) => {\r\n          selected.map((d) => {\r\n            final.push(d.value);\r\n            return final;\r\n          });\r\n          formik.values[`${name}`] = final;\r\n\r\n          return (\r\n            <CMultiSelect\r\n              {...field}\r\n              {...rest}\r\n              options={options}\r\n              onChange={setSelected}\r\n              className={`form-control  ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Multiselect);\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst RadioButton = (props) => {\r\n  const { formik, name, options, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  type=\"radio\"\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={field.value === option.value}\r\n                  label={option.text}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(RadioButton);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Select = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option} value={option}>\r\n                    {option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Select);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst SelectWithKey = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.text}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(SelectWithKey);\r\n","import React from \"react\";\r\nimport { CFormTextarea } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Textarea = (props) => {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormTextarea\r\n              id={id}\r\n              name={name}\r\n              {...field}\r\n              {...rest}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Textarea);\r\n","import React from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\nimport Input from \"./Input\";\r\nimport MultiSelect from \"./MultiSelect\";\r\nimport RadioButton from \"./RadioButton\";\r\nimport Select from \"./Select\";\r\nimport SelectWithKey from \"./SelectWithKey\";\r\nimport Textarea from \"./Textarea\";\r\nfunction EVFormikControl(props) {\r\n  const { control, ...rest } = props;\r\n  switch (control) {\r\n    case \"input\":\r\n      return <Input {...rest} />;\r\n    case \"textarea\":\r\n      return <Textarea {...rest} />;\r\n    case \"select\":\r\n      return <Select {...rest} />;\r\n    case \"selectwithkey\":\r\n      return <SelectWithKey {...rest} />;\r\n    case \"multiselect\":\r\n      return <MultiSelect {...rest} />;\r\n    case \"radio\":\r\n      return <RadioButton {...rest} />;\r\n    case \"checkbox\":\r\n      return <CheckBox {...rest} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default EVFormikControl;\r\n","let { toast } = require(\"react-toastify\");\r\n\r\nconst notify = (type, message) => {\r\n  switch (type) {\r\n    case \"info\":\r\n      toast.info(message);\r\n      break;\r\n    case \"success\":\r\n      toast.success(message);\r\n      break;\r\n    case \"warning\":\r\n      toast.warn(message);\r\n      break;\r\n    case \"error\":\r\n      toast.error(message);\r\n      break;\r\n    case \"dark\":\r\n      toast.dark(message);\r\n      break;\r\n    default:\r\n      toast(message);\r\n  }\r\n};\r\n\r\nmodule.exports = notify;\r\n"],"sourceRoot":""}