{"version":3,"sources":["views/ev_super_admin/class_management/add_sections.js","views/navbars/ev_super_admin/nav_normal_school.js","loader/Loader.js","ev_formik_controls/TextError.js","ev_formik_controls/CheckBox.js","ev_formik_controls/Input.js","ev_formik_controls/MultiSelect.js","ev_formik_controls/RadioButton.js","ev_formik_controls/Select.js","ev_formik_controls/SelectWithKey.js","ev_formik_controls/Textarea.js","ev_formik_controls/EVFormikControl.js"],"names":["add_sections","props","school_id","match","params","useState","visible","setVisible","sch_class","schSetClass","db_sections","setDbSections","openModalBox","useHistory","setTimeout","closeModalBox","sections","text","value","useEffect","EDU_AXIOS","get","process","then","response","data","classes","catch","error","console","log","get_sections","validationSchema","Yup","shape","sc_class","required","min","of","trim","onSubmit","values","a","resetForm","post","sc_sections","res","notify","message","err","className","id","md","lg","xl","initialValues","formik","htmlFor","control","name","placeholder","options","inline","block","color","onClick","icon","faTimesCircle","type","disabled","isSubmitting","dirty","isValid","style","marginLeft","faSave","onDismiss","to","faCheckCircle","title","columns","field","render","join","onSelectionChange","rows","setSelectedRows","search","paging","filtering","exportButton","actionsColumnIndex","rowStyle","x","tableData","backgroundColor","expand","colorScheme","float","fluid","href","variant","popper","Loader","role","TextError","children","connect","rest","switcher","getIn","errors","touch","touched","map","option","Fragment","checked","includes","label","component","handleChange","handleBlur","onChange","onBlur","selected","setSelected","final","d","push","EVFormikControl","MultiSelect"],"mappings":"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","file":"static/js/23.e61dcd94.chunk.js","sourcesContent":["import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CRow,\r\n  CFormLabel,\r\n  CCardFooter,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n} from \"@coreui/react-pro\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"../../navbars/ev_super_admin/nav_normal_school\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  faSave,\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Loader from \"src/loader/Loader\";\r\nimport EVFormikControl from \"src/ev_formik_controls/EVFormikControl\";\r\nimport EDU_AXIOS from \"src/helpers/edu_axios\";\r\nimport notify from \"src/helpers/notify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MaterialTable from \"material-table\";\r\n\r\nconst add_sections = (props) => {\r\n  let school_id = props.match.params.school_id;\r\n  let [visible, setVisible] = useState(false);\r\n  let [sch_class, schSetClass] = useState([]);\r\n  let [db_sections, setDbSections] = useState([]);\r\n  let history = useHistory();\r\n  // open cancle modal box\r\n  let openModalBox = () => {\r\n    setTimeout(() => setVisible(true), 0);\r\n  };\r\n\r\n  // close cancle modal box\r\n  let closeModalBox = () => {\r\n    setTimeout(() => setVisible(false), 0);\r\n  };\r\n\r\n  let sections = [\r\n    { text: \"A\", value: \"A\" },\r\n    { text: \"B\", value: \"B\" },\r\n    { text: \"C\", value: \"C\" },\r\n    { text: \"D\", value: \"D\" },\r\n    { text: \"E\", value: \"E\" },\r\n    { text: \"F\", value: \"F\" },\r\n    { text: \"G\", value: \"G\" },\r\n    { text: \"H\", value: \"H\" },\r\n    { text: \"I\", value: \"I\" },\r\n    { text: \"J\", value: \"J\" },\r\n    { text: \"K\", value: \"K\" },\r\n    { text: \"L\", value: \"L\" },\r\n    { text: \"M\", value: \"M\" },\r\n    { text: \"N\", value: \"N\" },\r\n    { text: \"O\", value: \"O\" },\r\n  ];\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(`${process.env.REACT_APP_API_PATH}/cm/get-class/${school_id}`)\r\n      .then((response) => {\r\n        if (!!response.data.data) {\r\n          schSetClass(response.data.data.classes);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  let get_sections = () => {\r\n    EDU_AXIOS.get(\r\n      `${process.env.REACT_APP_API_PATH}/cm/get-sections/${school_id}`\r\n    )\r\n      .then((response) => {\r\n        setDbSections(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // get sections\r\n  useEffect(() => {\r\n    get_sections();\r\n  }, []);\r\n\r\n  // formik params\r\n  let initialValues = {\r\n    sc_class: \"\",\r\n    sections: [],\r\n  };\r\n  // validation rules of the form fields\r\n  const validationSchema = Yup.object().shape({\r\n    sc_class: Yup.string().required(\"Class is required\"),\r\n    sections: Yup.array().min(1).of(Yup.string().trim().required()),\r\n  });\r\n  // submit form\r\n  const onSubmit = async (values, { resetForm }) => {\r\n    await EDU_AXIOS.post(\r\n      process.env.REACT_APP_API_PATH + \"/cm/create-sections\",\r\n      {\r\n        school_id: school_id,\r\n        sc_class: values.sc_class,\r\n        sc_sections: values.sections,\r\n      }\r\n    )\r\n      .then(async (res) => {\r\n        resetForm({ values: \"\" });\r\n        get_sections();\r\n        notify(\"success\", res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        notify(\"error\", err);\r\n      });\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Class\",\r\n      field: \"class\",\r\n    },\r\n    {\r\n      title: \"Sections\",\r\n      field: \"sections\",\r\n      render: (data) => {\r\n        return data.sections.join();\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <CCardGroup>\r\n      <CCard className=\"p-2\">\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol>\r\n              <NavBar id={school_id} />\r\n            </CCol>\r\n          </CRow>\r\n          <CRow>\r\n            <CCol md=\"8\" lg=\"6\" xl=\"8\">\r\n              <h5>Create Sections</h5>\r\n            </CCol>\r\n          </CRow>\r\n          <p className=\"text-muted\">Add sections</p>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {(formik) => (\r\n              <Form className=\"row g-3\">\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"class_from\" className=\"required-field\">\r\n                    Select Class\r\n                  </CFormLabel>\r\n                  <EVFormikControl\r\n                    control=\"select\"\r\n                    name=\"sc_class\"\r\n                    id=\"sc_class\"\r\n                    value={formik.values.sc_class}\r\n                    placeholder=\"Select class...\"\r\n                    options={sch_class}\r\n                  />\r\n                </CCol>\r\n                <CCol md={6}></CCol>\r\n                <CCol md={12}>\r\n                  <CFormLabel htmlFor=\"class_from\" className=\"required-field\">\r\n                    Select Sections\r\n                  </CFormLabel>\r\n                  <br />\r\n                  <EVFormikControl\r\n                    control=\"checkbox\"\r\n                    name=\"sections\"\r\n                    id=\"sections\"\r\n                    options={sections}\r\n                    inline\r\n                  />\r\n                </CCol>\r\n\r\n                <CCardFooter>\r\n                  <CButton block color=\"light\" onClick={openModalBox}>\r\n                    <FontAwesomeIcon icon={faTimesCircle} /> Cancel\r\n                  </CButton>\r\n                  <CButton\r\n                    block\r\n                    color=\"dark\"\r\n                    type=\"submit\"\r\n                    disabled={\r\n                      formik.isSubmitting || !formik.dirty || !formik.isValid\r\n                    }\r\n                    style={{ marginLeft: \"15px\" }}\r\n                  >\r\n                    {formik.isSubmitting ? (\r\n                      <Loader />\r\n                    ) : (\r\n                      <>\r\n                        <FontAwesomeIcon icon={faSave} /> Save\r\n                      </>\r\n                    )}\r\n                  </CButton>\r\n                </CCardFooter>\r\n                <CModal visible={visible} onDismiss={closeModalBox}>\r\n                  <CModalHeader onDismiss={closeModalBox}>\r\n                    <CModalTitle>\r\n                      <h5>Cancel</h5>\r\n                    </CModalTitle>\r\n                  </CModalHeader>\r\n\r\n                  <CModalBody>Do You Want To Cancel ?</CModalBody>\r\n                  <CModalFooter>\r\n                    <CButton color=\"light\" onClick={closeModalBox}>\r\n                      <FontAwesomeIcon icon={faTimesCircle} /> No\r\n                    </CButton>\r\n                    <Link to=\"/\">\r\n                      <CButton color=\"dark\">\r\n                        <FontAwesomeIcon icon={faCheckCircle} /> Yes\r\n                      </CButton>\r\n                    </Link>\r\n                  </CModalFooter>\r\n                </CModal>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n          {/*Render data into table*/}\r\n          <MaterialTable\r\n            title={\"All Sections\"}\r\n            data={db_sections}\r\n            columns={columns}\r\n            onSelectionChange={(rows) => setSelectedRows(rows)}\r\n            options={{\r\n              search: true,\r\n              paging: true,\r\n              filtering: false,\r\n              exportButton: true,\r\n              actionsColumnIndex: -1,\r\n              rowStyle: (x) => {\r\n                if (x.tableData.id % 2) {\r\n                  return { backgroundColor: \"#f9f9f9\" };\r\n                }\r\n              },\r\n            }}\r\n          />\r\n          {/*End table*/}\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCardGroup>\r\n  );\r\n};\r\n\r\nexport default add_sections;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CNavbar,\r\n  CNavbarToggler,\r\n  CNavbarNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CContainer,\r\n  CCollapse,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n} from \"@coreui/react-pro\";\r\nexport default (props) => {\r\n  let id = props.id;\r\n  const [visible, setVisible] = useState(false);\r\n  return (\r\n    <>\r\n      <CNavbar\r\n        expand=\"\"\r\n        colorScheme=\"light\"\r\n        className=\"bg-secondry\"\r\n        style={{ float: \"right\" }}\r\n      >\r\n        <CContainer fluid>\r\n          <CNavbarToggler onClick={() => setVisible(!visible)} />\r\n          <CCollapse className=\"navbar-collapse\" visible={visible}>\r\n            <CNavbarNav>\r\n              <a color=\"secondary\" className=\"btn btn-default\"  href={`/#/school-management/get-users/${id}`}>User Management</a>\r\n            {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n            <CDropdownToggle color=\"secondary\" >\r\n                 User Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/user-management/${id}`}\r\n                  >\r\n                   Add Users\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/get-users/${id}`}\r\n                  >\r\n                   get Users\r\n                  </CDropdownItem>\r\n                  </CDropdownMenu>\r\n                  </CDropdown> */}\r\n                  <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\" >\r\n                  Class Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-classes/${id}`}\r\n                  >\r\n                    Create/Edit Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/view-classes/${id}`}\r\n                  >\r\n                    View Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-sections/${id}`}\r\n                  >\r\n                    Create Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/manage-sections/${id}`}\r\n                  >\r\n                    Manage Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                    Class Mapping\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Subject Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  {/* <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Add Subject\r\n                  </CDropdownItem> */}\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Assign Subject To Class\r\n                  </CDropdownItem>\r\n                  {/* <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                    All Subjects\r\n                  </CDropdownItem> */}\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n         \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Teacher Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                    Add Teacher\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Section Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown> */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Academic Calendar Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Academic Year\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Holiday calendar & holiday list\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    Exam calendar\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Lesson Planning\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/lesson-management/get-subjects/${id}`}\r\n                  >\r\n                   Annual Lesson Plan\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Class Structure Creation\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Constraints management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                 School level constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Class wise constraints (inflow from class teacher)\r\n                  </CDropdownItem>\r\n                 \r\n                </CDropdownMenu>\r\n              </CDropdown> */}\r\n            \r\n             \r\n              {/*<CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Student Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Students</CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Subjects</CDropdownItem>\r\n                </CDropdownMenu>\r\n  </CDropdown>*/}\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Calender Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/add-holiday/${id}`}\r\n                  >\r\n                    Add Holiday\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/view-calender/${id}`}\r\n                  >\r\n                    View Calender\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n          \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">Time Table</CDropdownToggle>\r\n                {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Data fitness – system checks the fitness of data\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown> */} \r\n               \r\n              {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Generate Annual Timetable\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n                <CDropdownMenu>\r\n                {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Update weekly time table.\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              {/* </CDropdown>  */}\r\n                  <CDropdownItem href={`/#/time-table-management/step-1/${id}`}>\r\n                    Time Table (Initialization)\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/time-table-list/${id}`}\r\n                  >\r\n                    Time Table List\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href={`/#/time-table-management/step-2/${id}`}>\r\n                    General Constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href={`/#/time-table-management/step-2/${id}`}>Class Constraints</CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/create-time-table-admin/${id}`}\r\n                  >\r\n                    Generate Time Table (Admin)\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/generate-time-table-school/${id}`}\r\n                  >\r\n                    Generate Time Table (School)\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n            </CNavbarNav>\r\n          </CCollapse>\r\n        </CContainer>\r\n      </CNavbar>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>;\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nfunction TextError(props) {\r\n  return <div className=\"invalid-feedback\">{props.children}</div>;\r\n}\r\n\r\nexport default TextError;\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst CheckBox = (props) => {\r\n  const { formik, name, options, switcher, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={\r\n                    field.value ? field.value.includes(option.value) : \"\"\r\n                  }\r\n                  label={option.text}\r\n                  disabled={option.disabled ? option.disabled : false}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}\r\n                  }`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(CheckBox);\r\n","import React from \"react\";\r\nimport { CFormInput } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Input(props) {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <CFormInput\r\n        id={id}\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        {...rest}\r\n        className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n      />\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(Input);\r\n","import React, { useState } from \"react\";\r\nimport { CMultiSelect } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn, useField } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Multiselect = (props) => {\r\n  let { formik, name, id, options, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  const [selected, setSelected] = useState([]);\r\n  let final = [];\r\n  return (\r\n    <>\r\n      <Field name={name} id={id} onChange={handleChange} onBlur={handleBlur}>\r\n        {({ field }) => {\r\n          selected.map((d) => {\r\n            final.push(d.value);\r\n            return final;\r\n          });\r\n          formik.values[`${name}`] = final;\r\n\r\n          return (\r\n            <CMultiSelect\r\n              {...field}\r\n              {...rest}\r\n              options={options}\r\n              onChange={setSelected}\r\n              className={`form-control  ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Multiselect);\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst RadioButton = (props) => {\r\n  const { formik, name, options, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  type=\"radio\"\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={field.value === option.value}\r\n                  label={option.text}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(RadioButton);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Select = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option} value={option}>\r\n                    {option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Select);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst SelectWithKey = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.text}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(SelectWithKey);\r\n","import React from \"react\";\r\nimport { CFormTextarea } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Textarea = (props) => {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormTextarea\r\n              id={id}\r\n              name={name}\r\n              {...field}\r\n              {...rest}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Textarea);\r\n","import React from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\nimport Input from \"./Input\";\r\nimport MultiSelect from \"./MultiSelect\";\r\nimport RadioButton from \"./RadioButton\";\r\nimport Select from \"./Select\";\r\nimport SelectWithKey from \"./SelectWithKey\";\r\nimport Textarea from \"./Textarea\";\r\nfunction EVFormikControl(props) {\r\n  const { control, ...rest } = props;\r\n  switch (control) {\r\n    case \"input\":\r\n      return <Input {...rest} />;\r\n    case \"textarea\":\r\n      return <Textarea {...rest} />;\r\n    case \"select\":\r\n      return <Select {...rest} />;\r\n    case \"selectwithkey\":\r\n      return <SelectWithKey {...rest} />;\r\n    case \"multiselect\":\r\n      return <MultiSelect {...rest} />;\r\n    case \"radio\":\r\n      return <RadioButton {...rest} />;\r\n    case \"checkbox\":\r\n      return <CheckBox {...rest} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default EVFormikControl;\r\n"],"sourceRoot":""}