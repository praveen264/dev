{"version":3,"sources":["helpers/classes.js","views/ev_super_admin/class_management/classes.js","helpers/notify.js","helpers/edu_axios.js","views/navbars/ev_super_admin/nav_normal_school.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","loader/Loader.js","ev_formik_controls/TextError.js","ev_formik_controls/CheckBox.js","ev_formik_controls/Input.js","ev_formik_controls/MultiSelect.js","ev_formik_controls/RadioButton.js","ev_formik_controls/Select.js","ev_formik_controls/SelectWithKey.js","ev_formik_controls/Textarea.js","ev_formik_controls/EVFormikControl.js","helpers/classes_key.js"],"names":["module","exports","Classes","props","school_id","match","params","useState","visible","setVisible","showgroup","setShowgroup","start","setStart","end","setEnd","cl","openModalBox","useHistory","setTimeout","closeModalBox","setStartRange","s","stIndex","swk","indexOf","enIndex","slice","setEndRange","e","onChangeGroups","field","values","setValues","groups","numberOfGroups","target","value","previousNumber","parseInt","i","push","gp_name","class_from","class_to","splice","onChange","validationSchema","Yup","shape","required","gp_no","of","onSubmit","a","resetForm","Promise","all","map","gpr","cls","group_name","gp_classes","gp","EDU_AXIOS","post","process","classes","then","res","notify","data","message","catch","err","className","id","md","lg","xl","initialValues","formik","htmlFor","control","name","placeholder","options","errors","touched","component","group","groupErrors","length","groupTouched","type","as","block","color","onClick","icon","faTimesCircle","disabled","isSubmitting","dirty","isValid","style","marginLeft","faSave","onDismiss","to","faCheckCircle","toast","require","info","success","warn","error","dark","axios","default","token","localStorage","getItem","JSON","parse","console","log","create","timeout","headers","authorization","interceptors","response","use","status","removeItem","window","location","expand","colorScheme","float","fluid","href","variant","popper","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","done","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","Loader","role","TextError","children","connect","rest","switcher","getIn","touch","option","Fragment","checked","includes","label","text","handleChange","handleBlur","onBlur","selected","setSelected","final","d","EVFormikControl","MultiSelect"],"mappings":"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","file":"static/js/19.8963dd46.chunk.js","sourcesContent":["module.exports = [\r\n  \"Nursery\",\r\n  \"LKG\",\r\n  \"UKG\",\r\n  \"1\",\r\n  \"2\",\r\n  \"3\",\r\n  \"4\",\r\n  \"5\",\r\n  \"6\",\r\n  \"7\",\r\n  \"8\",\r\n  \"9\",\r\n  \"10\",\r\n  \"11\",\r\n  \"12\",\r\n];\r\n","import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CRow,\r\n  CFormLabel,\r\n  CCardFooter,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CFormSelect,\r\n  CFormFloating,\r\n} from \"@coreui/react-pro\";\r\nimport React, { useState } from \"react\";\r\nimport NavBar from \"../../navbars/ev_super_admin/nav_normal_school\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  faSave,\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Loader from \"src/loader/Loader\";\r\nimport EVFormikControl from \"src/ev_formik_controls/EVFormikControl\";\r\nimport classes from \"src/helpers/classes_key\";\r\nimport swk from \"src/helpers/classes\";\r\nimport EDU_AXIOS from \"src/helpers/edu_axios\";\r\nimport notify from \"src/helpers/notify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Classes = (props) => {\r\n  let school_id = props.match.params.school_id;\r\n  let [visible, setVisible] = useState(false);\r\n  let [showgroup, setShowgroup] = useState(false);\r\n  let [start, setStart] = useState();\r\n  let [end, setEnd] = useState();\r\n\r\n  let cl = [];\r\n  let history = useHistory();\r\n\r\n  // show form group element\r\n  let showGroup = () => {\r\n    setTimeout(() => setShowgroup(true), 0);\r\n  };\r\n\r\n  // hide form group element\r\n  let hideGroup = (e) => {\r\n    setTimeout(() => setShowgroup(false), 0);\r\n  };\r\n  // open cancle modal box\r\n  let openModalBox = () => {\r\n    setTimeout(() => setVisible(true), 0);\r\n  };\r\n\r\n  // close cancle modal box\r\n  let closeModalBox = () => {\r\n    setTimeout(() => setVisible(false), 0);\r\n  };\r\n\r\n  // set strat class range\r\n  let setStartRange = (s) => {\r\n    let stIndex = swk.indexOf(start);\r\n    let enIndex = swk.indexOf(end);\r\n\r\n    cl = swk.slice(stIndex, enIndex + 1);\r\n    setTimeout(() => setStart(s), 0);\r\n  };\r\n  // set end class range\r\n  let setEndRange = (e) => {\r\n    let stIndex = swk.indexOf(start);\r\n    let enIndex = swk.indexOf(end);\r\n\r\n    cl = swk.slice(stIndex, enIndex + 1);\r\n    setTimeout(() => setEnd(e), 0);\r\n  };\r\n  let onChangeGroups = (e, field, values, setValues) => {\r\n    // update dynamic form\r\n    const groups = [...values.groups];\r\n    const numberOfGroups = e.target.value || 0;\r\n    numberOfGroups > 0 ? showGroup() : hideGroup();\r\n    const previousNumber = parseInt(field.value || \"0\");\r\n    if (previousNumber < numberOfGroups) {\r\n      for (let i = previousNumber; i < numberOfGroups; i++) {\r\n        groups.push({ gp_name: \"\", class_from: \"\", class_to: \"\" });\r\n      }\r\n    } else {\r\n      for (let i = previousNumber; i >= numberOfGroups; i--) {\r\n        groups.splice(i, 1);\r\n      }\r\n    }\r\n    setValues({ ...values, groups });\r\n\r\n    // call formik onChange method\r\n    field.onChange(e);\r\n  };\r\n\r\n  // formik params\r\n  let initialValues = {\r\n    class_from: \"\",\r\n    class_to: \"\",\r\n    gp_no: \"\",\r\n    groups: [],\r\n  };\r\n  // validation rules of the form fields\r\n  const validationSchema = Yup.object().shape({\r\n    class_from: Yup.string().required(\"From class is required\"),\r\n    class_to: Yup.string().required(\"To class is required\"),\r\n    gp_no: Yup.string().required(\"Group number is required\"),\r\n    groups: Yup.array().of(\r\n      Yup.object().shape({\r\n        gp_name: Yup.string().required(\"Group name is required\"),\r\n        class_from: Yup.string().required(\"From class is required\"),\r\n        class_to: Yup.string().required(\"To class is required\"),\r\n      })\r\n    ),\r\n  });\r\n  // submit form\r\n  const onSubmit = async (values, { resetForm }) => {\r\n    // re-structure groups\r\n    let gp = await Promise.all(\r\n      values.groups.map(async (gpr) => {\r\n        let cls = [];\r\n        let stIndex = swk.indexOf(gpr.class_from);\r\n        let enIndex = swk.indexOf(gpr.class_to);\r\n        cls = swk.slice(stIndex, enIndex + 1);\r\n        return {\r\n          group_name: gpr.gp_name,\r\n          gp_classes: cls,\r\n        };\r\n      })\r\n    );\r\n    await EDU_AXIOS.post(process.env.REACT_APP_API_PATH + \"/cm/create-class\", {\r\n      school_id: school_id,\r\n      classes: cl,\r\n      gp_no: values.gp_no,\r\n      groups: gp,\r\n    })\r\n      .then(async (res) => {\r\n        resetForm({ values: \"\" });\r\n        notify(\"success\", res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        notify(\"error\", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <CCardGroup>\r\n      <CCard className=\"p-2\">\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol>\r\n              <NavBar id={school_id} />\r\n            </CCol>\r\n          </CRow>\r\n          <CRow>\r\n            <CCol md=\"8\" lg=\"6\" xl=\"8\">\r\n              <h5>Create Classes</h5>\r\n            </CCol>\r\n          </CRow>\r\n          <p className=\"text-muted\">Create classes with group</p>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {(formik) => (\r\n              <Form className=\"row g-3\">\r\n                <CCol md={12} className=\"mt-2 mb-0\">\r\n                  <b>Select Classes</b>\r\n                </CCol>\r\n\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"class_from\" className=\"required-field\">\r\n                    From\r\n                  </CFormLabel>\r\n                  <EVFormikControl\r\n                    control=\"selectwithkey\"\r\n                    name=\"class_from\"\r\n                    id=\"class_from\"\r\n                    value={formik.values.class_from}\r\n                    placeholder=\"Select class...\"\r\n                    onChange={setStartRange(formik.values.class_from)}\r\n                    options={classes}\r\n                  />\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"class_to\" className=\"required-field\">\r\n                    to\r\n                  </CFormLabel>\r\n                  <EVFormikControl\r\n                    control=\"selectwithkey\"\r\n                    name=\"class_to\"\r\n                    id=\"class_to\"\r\n                    value={formik.values.class_to}\r\n                    placeholder=\"Select class...\"\r\n                    onChange={setEndRange(formik.values.class_to)}\r\n                    options={classes}\r\n                  />\r\n                </CCol>\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"gp_no\" className=\"required-field\">\r\n                    Number of Groups\r\n                  </CFormLabel>\r\n                  <Field name=\"gp_no\">\r\n                    {({ field }) => (\r\n                      <CFormSelect\r\n                        {...field}\r\n                        className={\r\n                          \"form-control\" +\r\n                          (formik.errors.gp_no && formik.touched.gp_no\r\n                            ? \" is-invalid\"\r\n                            : \"\")\r\n                        }\r\n                        onChange={(e) =>\r\n                          onChangeGroups(\r\n                            e,\r\n                            field,\r\n                            formik.values,\r\n                            formik.setValues\r\n                          )\r\n                        }\r\n                      >\r\n                        <option value=\"\">Select...</option>\r\n                        {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((i) => (\r\n                          <option key={i} value={i}>\r\n                            {i}\r\n                          </option>\r\n                        ))}\r\n                      </CFormSelect>\r\n                    )}\r\n                  </Field>\r\n                  <ErrorMessage\r\n                    name=\"gp_no\"\r\n                    component=\"div\"\r\n                    className=\"invalid-feedback\"\r\n                  />\r\n                </CCol>\r\n                {showgroup && (\r\n                  <CRow className=\"mt-3\">\r\n                    <CCol md={12}>\r\n                      <h6>Define Groups</h6>\r\n                    </CCol>\r\n                  </CRow>\r\n                )}\r\n\r\n                <FieldArray name=\"groups\">\r\n                  {() =>\r\n                    formik.values.groups.map((group, i) => {\r\n                      const groupErrors =\r\n                        (formik.errors.groups?.length &&\r\n                          formik.errors.groups[i]) ||\r\n                        {};\r\n                      const groupTouched =\r\n                        (formik.touched.groups?.length &&\r\n                          formik.touched.groups[i]) ||\r\n                        {};\r\n                      return (\r\n                        <CRow>\r\n                          <CCol md={12}>\r\n                            <h6 className=\"card-title\">Group {i + 1}</h6>\r\n                          </CCol>\r\n                          <CCol md={4}>\r\n                            <CFormFloating className=\"mb-3\">\r\n                              <Field\r\n                                name={`groups.${i}.gp_name`}\r\n                                type=\"text\"\r\n                                placeholder=\"Group Name\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (groupErrors.gp_name && groupTouched.gp_name\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                              />\r\n                              <ErrorMessage\r\n                                name={`groups.${i}.gp_name`}\r\n                                component=\"div\"\r\n                                className=\"invalid-feedback\"\r\n                              />\r\n                              <CFormLabel\r\n                                htmlFor=\"gp_name\"\r\n                                className=\"required-field\"\r\n                              >\r\n                                Group Name\r\n                              </CFormLabel>\r\n                            </CFormFloating>\r\n                          </CCol>\r\n                          <CCol md={4}>\r\n                            <CFormFloating className=\"mb-3\">\r\n                              <Field\r\n                                name={`groups.${i}.class_from`}\r\n                                as=\"select\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (groupErrors.class_from &&\r\n                                  groupTouched.class_from\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                              >\r\n                                <option value=\"\">Select class...</option>\r\n                                {cl.map((i) => (\r\n                                  <option key={i} value={i}>\r\n                                    {i}\r\n                                  </option>\r\n                                ))}\r\n                              </Field>\r\n                              <ErrorMessage\r\n                                name={`groups.${i}.class_from`}\r\n                                component=\"div\"\r\n                                className=\"invalid-feedback\"\r\n                              />\r\n                              <CFormLabel\r\n                                htmlFor=\"class_to\"\r\n                                className=\"required-field\"\r\n                              >\r\n                                From Class\r\n                              </CFormLabel>\r\n                            </CFormFloating>\r\n                          </CCol>\r\n                          <CCol md={4}>\r\n                            <CFormFloating className=\"mb-3\">\r\n                              <Field\r\n                                name={`groups.${i}.class_to`}\r\n                                as=\"select\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (groupErrors.class_to && groupTouched.class_to\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                              >\r\n                                <option value=\"\">Select class...</option>\r\n                                {cl.map((i) => (\r\n                                  <option key={i} value={i}>\r\n                                    {i}\r\n                                  </option>\r\n                                ))}\r\n                              </Field>\r\n                              <ErrorMessage\r\n                                name={`groups.${i}.class_to`}\r\n                                component=\"div\"\r\n                                className=\"invalid-feedback\"\r\n                              />\r\n                              <CFormLabel\r\n                                htmlFor=\"class_to\"\r\n                                className=\"required-field\"\r\n                              >\r\n                                To Class\r\n                              </CFormLabel>\r\n                            </CFormFloating>\r\n                          </CCol>\r\n                        </CRow>\r\n                      );\r\n                    })\r\n                  }\r\n                </FieldArray>\r\n\r\n                <CCardFooter>\r\n                  <CButton block color=\"light\" onClick={openModalBox}>\r\n                    <FontAwesomeIcon icon={faTimesCircle} /> Cancel\r\n                  </CButton>\r\n                  <CButton\r\n                    block\r\n                    color=\"dark\"\r\n                    type=\"submit\"\r\n                    disabled={\r\n                      formik.isSubmitting || !formik.dirty || !formik.isValid\r\n                    }\r\n                    style={{ marginLeft: \"15px\" }}\r\n                  >\r\n                    {formik.isSubmitting ? (\r\n                      <Loader />\r\n                    ) : (\r\n                      <>\r\n                        <FontAwesomeIcon icon={faSave} /> Save\r\n                      </>\r\n                    )}\r\n                  </CButton>\r\n                </CCardFooter>\r\n                <CModal visible={visible} onDismiss={closeModalBox}>\r\n                  <CModalHeader onDismiss={closeModalBox}>\r\n                    <CModalTitle>\r\n                      <h5>Cancel</h5>\r\n                    </CModalTitle>\r\n                  </CModalHeader>\r\n\r\n                  <CModalBody>Do You Want To Cancel ?</CModalBody>\r\n                  <CModalFooter>\r\n                    <CButton color=\"light\" onClick={closeModalBox}>\r\n                      <FontAwesomeIcon icon={faTimesCircle} /> No\r\n                    </CButton>\r\n                    <Link to=\"/\">\r\n                      <CButton color=\"dark\">\r\n                        <FontAwesomeIcon icon={faCheckCircle} /> Yes\r\n                      </CButton>\r\n                    </Link>\r\n                  </CModalFooter>\r\n                </CModal>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCardGroup>\r\n  );\r\n};\r\n\r\nexport default Classes;\r\n","let { toast } = require(\"react-toastify\");\r\n\r\nconst notify = (type, message) => {\r\n  switch (type) {\r\n    case \"info\":\r\n      toast.info(message);\r\n      break;\r\n    case \"success\":\r\n      toast.success(message);\r\n      break;\r\n    case \"warning\":\r\n      toast.warn(message);\r\n      break;\r\n    case \"error\":\r\n      toast.error(message);\r\n      break;\r\n    case \"dark\":\r\n      toast.dark(message);\r\n      break;\r\n    default:\r\n      toast(message);\r\n  }\r\n};\r\n\r\nmodule.exports = notify;\r\n","const notify = require(\"./notify\");\r\nconst axios = require(\"axios\").default;\r\nlet EDU_AXIOS;\r\nlet token = \"\";\r\n// to set authorization header on test mode\r\nlet user = localStorage.getItem(\"user\");\r\nif (user) {\r\n  token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"production\") {\r\n  EDU_AXIOS = axios.create({\r\n    timeout: 6000,\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        notify(\"error\", error.response.message);\r\n      } else {\r\n        notify(\"error\", error.response.message);\r\n      }\r\n    }\r\n  );\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"test\") {\r\n  if (token == \"\") {\r\n    console.log(\"there isno token\");\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  } else {\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        console.log(error.response.data.message);\r\n        notify(\"error\", error.response.data.message);\r\n      } else {\r\n        notify(\"error\", error.response.data.message);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nmodule.exports = EDU_AXIOS;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CNavbar,\r\n  CNavbarToggler,\r\n  CNavbarNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CContainer,\r\n  CCollapse,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n} from \"@coreui/react-pro\";\r\nexport default (props) => {\r\n  let id = props.id;\r\n  const [visible, setVisible] = useState(false);\r\n  return (\r\n    <>\r\n      <CNavbar\r\n        expand=\"\"\r\n        colorScheme=\"light\"\r\n        className=\"bg-secondry\"\r\n        style={{ float: \"right\" }}\r\n      >\r\n        <CContainer fluid>\r\n          <CNavbarToggler onClick={() => setVisible(!visible)} />\r\n          <CCollapse className=\"navbar-collapse\" visible={visible}>\r\n            <CNavbarNav>\r\n              <a color=\"secondary\" className=\"btn btn-default\"  href={`/#/school-management/get-users/${id}`}>User Management</a>\r\n            {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n            <CDropdownToggle color=\"secondary\" >\r\n                 User Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/user-management/${id}`}\r\n                  >\r\n                   Add Users\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/get-users/${id}`}\r\n                  >\r\n                   get Users\r\n                  </CDropdownItem>\r\n                  </CDropdownMenu>\r\n                  </CDropdown> */}\r\n                  <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\" >\r\n                  Class Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-classes/${id}`}\r\n                  >\r\n                    Create/Edit Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/view-classes/${id}`}\r\n                  >\r\n                    View Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-sections/${id}`}\r\n                  >\r\n                    Create Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/manage-sections/${id}`}\r\n                  >\r\n                    Manage Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                    Class Mapping\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Subject Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Add Subject\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Assign Subject To Class\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                    All Subjects\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n         \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Teacher Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                    Add Teacher\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Section Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Academic Calendar Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Academic Year\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Holiday calendar & holiday list\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    Exam calendar\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Lesson Planning\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/lesson-management/get-subjects/${id}`}\r\n                  >\r\n                   Annual Lesson Plan\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Class Structure Creation\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Constraints management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                 School level constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Class wise constraints (inflow from class teacher)\r\n                  </CDropdownItem>\r\n                 \r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Data fitness – system checks the fitness of data\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Generate Annual Timetable\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Update weekly time table.\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              </CDropdown>\r\n              {/*<CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Student Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Students</CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Subjects</CDropdownItem>\r\n                </CDropdownMenu>\r\n  </CDropdown>*/}\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Calender Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/add-holiday/${id}`}\r\n                  >\r\n                    Add Holiday\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/view-calender/${id}`}\r\n                  >\r\n                    View Calender\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n          \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">Time Table</CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href={`/#/time-table-management/step-1/${id}`}>\r\n                    Time Table (Initialization)\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/time-table-list/${id}`}\r\n                  >\r\n                    Time Table List\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href={`/#/time-table-management/step-2/${id}`}>\r\n                    General Constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href=\"#\">Class Constraints</CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/create-time-table-admin/${id}`}\r\n                  >\r\n                    Generate Time Table (Admin)\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n            </CNavbarNav>\r\n          </CCollapse>\r\n        </CContainer>\r\n      </CNavbar>\r\n    </>\r\n  );\r\n};\r\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>;\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nfunction TextError(props) {\r\n  return <div className=\"invalid-feedback\">{props.children}</div>;\r\n}\r\n\r\nexport default TextError;\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst CheckBox = (props) => {\r\n  const { formik, name, options, switcher, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={\r\n                    field.value ? field.value.includes(option.value) : \"\"\r\n                  }\r\n                  label={option.text}\r\n                  disabled={option.disabled ? option.disabled : false}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}\r\n                  }`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(CheckBox);\r\n","import React from \"react\";\r\nimport { CFormInput } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Input(props) {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <CFormInput\r\n        id={id}\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        {...rest}\r\n        className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n      />\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(Input);\r\n","import React, { useState } from \"react\";\r\nimport { CMultiSelect } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn, useField } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Multiselect = (props) => {\r\n  let { formik, name, id, options, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  const [selected, setSelected] = useState([]);\r\n  let final = [];\r\n  return (\r\n    <>\r\n      <Field name={name} id={id} onChange={handleChange} onBlur={handleBlur}>\r\n        {({ field }) => {\r\n          selected.map((d) => {\r\n            final.push(d.value);\r\n            return final;\r\n          });\r\n          formik.values[`${name}`] = final;\r\n\r\n          return (\r\n            <CMultiSelect\r\n              {...field}\r\n              {...rest}\r\n              options={options}\r\n              onChange={setSelected}\r\n              className={`form-control  ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Multiselect);\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst RadioButton = (props) => {\r\n  const { formik, name, options, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  type=\"radio\"\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={field.value === option.value}\r\n                  label={option.text}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(RadioButton);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Select = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option} value={option}>\r\n                    {option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Select);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst SelectWithKey = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.text}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(SelectWithKey);\r\n","import React from \"react\";\r\nimport { CFormTextarea } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Textarea = (props) => {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormTextarea\r\n              id={id}\r\n              name={name}\r\n              {...field}\r\n              {...rest}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Textarea);\r\n","import React from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\nimport Input from \"./Input\";\r\nimport MultiSelect from \"./MultiSelect\";\r\nimport RadioButton from \"./RadioButton\";\r\nimport Select from \"./Select\";\r\nimport SelectWithKey from \"./SelectWithKey\";\r\nimport Textarea from \"./Textarea\";\r\nfunction EVFormikControl(props) {\r\n  const { control, ...rest } = props;\r\n  switch (control) {\r\n    case \"input\":\r\n      return <Input {...rest} />;\r\n    case \"textarea\":\r\n      return <Textarea {...rest} />;\r\n    case \"select\":\r\n      return <Select {...rest} />;\r\n    case \"selectwithkey\":\r\n      return <SelectWithKey {...rest} />;\r\n    case \"multiselect\":\r\n      return <MultiSelect {...rest} />;\r\n    case \"radio\":\r\n      return <RadioButton {...rest} />;\r\n    case \"checkbox\":\r\n      return <CheckBox {...rest} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default EVFormikControl;\r\n","module.exports = [\r\n  { text: \"Nursery\", value: \"Nursery\" },\r\n  { text: \"LKG\", value: \"LKG\" },\r\n  { text: \"UKG\", value: \"UKG\" },\r\n  { text: \"1\", value: \"1\" },\r\n  { text: \"2\", value: \"2\" },\r\n  { text: \"3\", value: \"3\" },\r\n  { text: \"4\", value: \"4\" },\r\n  { text: \"5\", value: \"5\" },\r\n  { text: \"6\", value: \"6\" },\r\n  { text: \"7\", value: \"7\" },\r\n  { text: \"8\", value: \"8\" },\r\n  { text: \"9\", value: \"9\" },\r\n  { text: \"10\", value: \"10\" },\r\n  { text: \"11\", value: \"11\" },\r\n  { text: \"12\", value: \"12\" },\r\n];\r\n"],"sourceRoot":""}