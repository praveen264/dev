{"version":3,"sources":["views/ev_super_admin/school_management/create-chain-school/create-chain-school.js"],"names":["config","bucketName","process","dirName","region","accessKeyId","secretAccessKey","Chain","useState","userID","setUSerID","selectedFile","setSelectedFile","school_name","setSchool_name","address","setAddress","pin","setPin","website","setWebsite","email","setEmail","mobile","setMobile","resource_sharing","setResource_sharing","password","setPassword","password2","setPassword2","visible","setVisible","countrylist","setCountryList","logoName","setLogoName","state_name","setState_name","country_code","setCountry_code","city","setCity","stateName","setStateName","cityName","setCityName","userIDErr","setUserIDErr","schoolNameErr","setSchoolNameErr","pinErr","setPinErr","stateErr","setStateErr","cityErr","setCityErr","countryErr","setCountryErr","addressErr","setAddressErr","webErr","setWebErr","emailErr","setEmailErr","mobileErr","setMobileErr","passwordErr","setPasswordErr","password2Err","setPassword2Err","useEffect","EDU_AXIOS","get","then","response","countryArray","data","catch","error","console","log","resp","stateArray","respo","cityArray","handleUpload","file","a","uploadFile","err","onSubmit","e","preventDefault","formValidation","post","name","username","pin_code","state","other_details","logo","share_resources","res","alert","message","isValid","trim","test","length","UserIDinvalid","UserIDrequired","schoolNameShort","pinshort","pinreq","addressShort","emailinvalid","emailrequired","mobshort","mobreq","passshort","passreq","pass2short","pass2req","className","md","lg","xl","id","placeholder","value","onChange","target","Object","keys","map","key","style","color","type","rows","countryCode","disabled","state_code","files","label","checked","block","onClick","float","icon","faTimesCircle","onDismiss","to","faCheckCircle","marginLeft","faSave"],"mappings":"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","file":"static/js/46.8ba529c4.chunk.js","sourcesContent":["// Created By : Sujay\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { uploadFile } from \"react-s3\";\r\nimport EDU_AXIOS from \"src/helpers/edu_axios\";\r\nimport {\r\n  faSave,\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CFormSelect,\r\n  CCol,\r\n  CContainer,\r\n  CFormInput,\r\n  CRow,\r\n  CFormLabel,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CFormTextarea,\r\n} from \"@coreui/react-pro\";\r\n\r\nconst config = {\r\n  bucketName: process.env.REACT_APP_BUCKET_NAME,\r\n  dirName: process.env.REACT_APP_SCHOOL_LOGO_DIR_NAME,\r\n  region: process.env.REACT_APP_REGION,\r\n  accessKeyId: process.env.REACT_APP_ACCESS_ID,\r\n  secretAccessKey: process.env.REACT_APP_ACCESS_KEY,\r\n};\r\n\r\n// Assigned const for fields inside the form using UseState in Hooks function\r\n\r\nconst Chain = () => {\r\n  //setter and getter\r\n  const [userID, setUSerID] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(\"\");\r\n  const [school_name, setSchool_name] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [pin, setPin] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [resource_sharing, setResource_sharing] = useState(0);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const [countrylist, setCountryList] = useState([]);\r\n  const [logoName, setLogoName] = useState(\"\");\r\n  const [state_name, setState_name] = useState([]);\r\n  const [country_code, setCountry_code] = useState();\r\n  const [city, setCity] = useState([]);\r\n  const [stateName, setStateName] = useState();\r\n  const [cityName, setCityName] = useState();\r\n\r\n  // Defining Errors\r\n  const [userIDErr, setUserIDErr] = useState({});\r\n  const [schoolNameErr, setSchoolNameErr] = useState({});\r\n  const [pinErr, setPinErr] = useState({});\r\n  const [stateErr, setStateErr] = useState({});\r\n  const [cityErr, setCityErr] = useState({});\r\n  const [countryErr, setCountryErr] = useState({});\r\n  const [addressErr, setAddressErr] = useState({});\r\n  const [webErr, setWebErr] = useState({});\r\n  const [emailErr, setEmailErr] = useState({});\r\n  const [mobileErr, setMobileErr] = useState({});\r\n  const [passwordErr, setPasswordErr] = useState({});\r\n  const [password2Err, setPassword2Err] = useState({});\r\n\r\n  // get country list from server\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(process.env.REACT_APP_API_PATH + \"/auth/get-countries\")\r\n      .then((response) => {\r\n        let countryArray = response.data.data;\r\n        setCountryList(countryArray);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // set country code on chage country in country select box\r\n  const selectState = (e) => {\r\n    var countryCode = e.target.value;\r\n    setCountry_code(countryCode);\r\n  };\r\n\r\n  // get states of a country\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(\r\n      process.env.REACT_APP_API_PATH + `/auth/get-states/${country_code}`\r\n    )\r\n      .then((resp) => {\r\n        let stateArray = resp.data.data;\r\n\r\n        setState_name(stateArray);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [country_code]);\r\n\r\n  // get cities of a state\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(\r\n      process.env.REACT_APP_API_PATH +\r\n        `/auth/get-cities/${country_code}/${stateName}`\r\n    )\r\n      //EDU_AXIOS.get(cityURL)\r\n      .then((respo) => {\r\n        let cityArray = respo.data.data;\r\n\r\n        setCity(cityArray);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [stateName]);\r\n\r\n  // read logo file\r\n  const handleFileInput = (e) => {\r\n    setLogoName(e.target.files[0].name);\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n  // upload logo to s3 bucket\r\n  const handleUpload = async (file) => {\r\n    uploadFile(file, config)\r\n      .then((data) => console.log(data, \"Logo uploaded successfully\"))\r\n      .catch((err) => console.error(err, \"\"));\r\n  };\r\n\r\n  // function On Submit\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const isValid = formValidation();\r\n    if (isValid) {\r\n      return await EDU_AXIOS.post(\r\n        process.env.REACT_APP_API_PATH + \"/auth/create-chain-school\",\r\n        {\r\n          name: school_name,\r\n          username: userID,\r\n          password: password,\r\n          email: email,\r\n          mobile: mobile,\r\n          address: address,\r\n          pin_code: pin,\r\n          state: stateName,\r\n          city: cityName,\r\n          website: website,\r\n          other_details: \"a\",\r\n          logo: logoName,\r\n          share_resources: resource_sharing,\r\n        }\r\n      )\r\n        .then(async (res) => {\r\n          alert(res.data.message);\r\n        })\r\n        .catch((err) => {\r\n          alert(err);\r\n        });\r\n    }\r\n  };\r\n  // form validation\r\n  const formValidation = () => {\r\n    const userIDErr = {};\r\n    const schoolNameErr = {};\r\n    const pinErr = {};\r\n    const webErr = {};\r\n    const emailErr = {};\r\n    const mobileErr = {};\r\n    const passwordErr = {};\r\n    const password2Err = {};\r\n    const stateErr = {};\r\n    const cityErr = {};\r\n    const countryErr = {};\r\n    const addressErr = {};\r\n\r\n    let isValid = true;\r\n\r\n    // Validations for different fields\r\n\r\n    if (!userID.trim()) {\r\n      userIDErr.UserIDrequired = \"Required\";\r\n    } else if (/[^a-zA-Z0-9_.]/.test(userID) || userID.trim().length < 6) {\r\n      userIDErr.UserIDinvalid =\r\n        \"UserID is Invalid (@ , # not suppourted) / < 6 Digits\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!school_name.trim()) {\r\n      schoolNameErr.schoolNameShort = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!pin.trim()) {\r\n      pinErr.pinreq = \" Required\";\r\n      isValid = false;\r\n    } else if (!/[123456789][0-9]{5}/.test(pin) || pin.trim().length > 6) {\r\n      pinErr.pinshort = \"PIN should be 6 Digits only / PIN Can't Start with 0\";\r\n      isValid = false;\r\n    }\r\n    if (!address.trim()) {\r\n      addressErr.addressShort = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!email.trim()) {\r\n      emailErr.emailrequired = \"Required\";\r\n      isValid = false;\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      emailErr.emailinvalid = \"Email address is invalid\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!mobile.trim()) {\r\n      mobileErr.mobreq = \" Required\";\r\n      isValid = false;\r\n    } else if (mobile.trim().length > 10 || !/[6789][0-9]{9}/.test(mobile)) {\r\n      mobileErr.mobshort = \"Mobile number must be Valid & of 10 Digits Only\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!password.trim()) {\r\n      passwordErr.passreq = \" Required\";\r\n      isValid = false;\r\n    } else if (password.trim().length < 6 || password.trim().length > 20) {\r\n      passwordErr.passshort = \"Invalid / < 6 Digits\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!password2.trim()) {\r\n      passwordErr.pass2req = \"\";\r\n      isValid = false;\r\n    } else if (password2 !== password) {\r\n      password2Err.pass2short = \"Doesn't Match \";\r\n      isValid = false;\r\n    }\r\n\r\n    // setting errors in validation\r\n\r\n    setUserIDErr(userIDErr);\r\n    setSchoolNameErr(schoolNameErr);\r\n    setPinErr(pinErr);\r\n    setWebErr(webErr);\r\n    setEmailErr(emailErr);\r\n    setMobileErr(mobileErr);\r\n    setPasswordErr(passwordErr);\r\n    setPassword2Err(password2Err);\r\n    setCityErr(cityErr);\r\n    setStateErr(stateErr);\r\n    setCountryErr(countryErr);\r\n    setAddressErr(addressErr);\r\n\r\n    return isValid;\r\n  };\r\n\r\n  return (\r\n    // Chain School Creation Form\r\n\r\n    <form onSubmit={onSubmit}>\r\n      <CRow className=\"justify-content-center\">\r\n        <CCol>\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol md=\"8\" lg=\"6\" xl=\"8\">\r\n                  <h5>Create Chain School</h5>\r\n                </CCol>\r\n              </CRow>\r\n              <p className=\"text-muted\">Register a Chain School</p>\r\n\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel className=\"required-field\">\r\n                    Chain School Name\r\n                  </CFormLabel>\r\n                  <CFormInput\r\n                    id=\"school_name\"\r\n                    key=\"schoolname\"\r\n                    placeholder=\"Name of School\"\r\n                    value={school_name}\r\n                    onChange={(e) => {\r\n                      setSchool_name(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(schoolNameErr).map((key) => {\r\n                    return (\r\n                      <div style={{ color: \"red\" }}>{schoolNameErr[key]}</div>\r\n                    );\r\n                  })}\r\n                </CCol>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel>User Name :</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"school_name\"\r\n                    key=\"username\"\r\n                    placeholder=\"Unique User Name\"\r\n                    value={userID}\r\n                    onChange={(e) => {\r\n                      setUSerID(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(userIDErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{userIDErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol>\r\n                  <CFormLabel> Password :</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"\"\r\n                    key=\"password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => {\r\n                      setPassword(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(passwordErr).map((key) => {\r\n                    return (\r\n                      <div style={{ color: \"red\" }}>{passwordErr[key]}</div>\r\n                    );\r\n                  })}\r\n                </CCol>\r\n                <CCol>\r\n                  <CFormLabel> Re-Enter Password :</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"\"\r\n                    type=\"password\"\r\n                    key=\"re-password\"\r\n                    value={password2}\r\n                    onChange={(e) => {\r\n                      setPassword2(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(password2Err).map((key) => {\r\n                    return (\r\n                      <div style={{ color: \"red\" }}>{password2Err[key]}</div>\r\n                    );\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel>Email ID :</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"\"\r\n                    key=\"email\"\r\n                    placeholder=\"School Email ID\"\r\n                    //   type='email'\r\n                    //   autoComplete='off'\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                      setEmail(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(emailErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{emailErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel> Mobile :</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"\"\r\n                    key=\"mobile\"\r\n                    placeholder=\" Mobile Number\"\r\n                    type=\"number\"\r\n                    value={mobile}\r\n                    onChange={(e) => {\r\n                      setMobile(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(mobileErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{mobileErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel> School Address:</CFormLabel>\r\n                  <CFormTextarea\r\n                    id=\"\"\r\n                    key=\"address\"\r\n                    placeholder=\"Address of Your School\"\r\n                    rows=\"1\"\r\n                    value={address}\r\n                    onChange={(e) => {\r\n                      setAddress(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(addressErr).map((key) => {\r\n                    return (\r\n                      <div style={{ color: \"red\" }}>{addressErr[key]}</div>\r\n                    );\r\n                  })}\r\n                </CCol>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel> Pin:</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"pin\"\r\n                    key=\"pin\"\r\n                    type=\"number\"\r\n                    placeholder=\"Pin Code\"\r\n                    value={pin}\r\n                    onChange={(e) => {\r\n                      setPin(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(pinErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{pinErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel> Country:</CFormLabel>\r\n                  <CFormSelect\r\n                    key=\"country\"\r\n                    value={countrylist.name}\r\n                    onChange={selectState}\r\n                  >\r\n                    <option>Select the Country</option>\r\n                    {countrylist.map((countrylist) => {\r\n                      return (\r\n                        <option value={countrylist.country_code}>\r\n                          {countrylist.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </CFormSelect>\r\n                  {Object.keys(countryErr).map((key) => {\r\n                    return (\r\n                      <div style={{ color: \"red\" }}>{countryErr[key]}</div>\r\n                    );\r\n                  })}\r\n                </CCol>\r\n\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel> State:</CFormLabel>\r\n                  <CFormSelect\r\n                    key=\"state\"\r\n                    value={state_name.name}\r\n                    onChange={(e) => {\r\n                      setStateName(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option disabled>Select the Country First</option>\r\n                    {state_name.map((state_name) => {\r\n                      return (\r\n                        <option value={state_name.state_code}>\r\n                          {state_name.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </CFormSelect>\r\n                  {Object.keys(stateErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{stateErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel> City:</CFormLabel>\r\n                  <CFormSelect\r\n                    key=\"city\"\r\n                    value={city.name}\r\n                    onChange={(e) => {\r\n                      setCityName(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option disabled>Select the State First</option>\r\n                    {city.map((city) => {\r\n                      return <option value={city.name}>{city.name}</option>;\r\n                    })}\r\n                  </CFormSelect>\r\n                  {Object.keys(cityErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{cityErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel>Website Of School :</CFormLabel>\r\n                  <CFormInput\r\n                    key=\"website\"\r\n                    id=\"\"\r\n                    placeholder=\"Example ==> www.websiteofschool.com\"\r\n                    value={website}\r\n                    onChange={(e) => {\r\n                      setWebsite(e.target.value);\r\n                    }}\r\n                  />\r\n                  {Object.keys(webErr).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{webErr[key]}</div>;\r\n                  })}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow>\r\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                  <CFormLabel> Upload Logo:</CFormLabel>\r\n                  <CFormInput\r\n                    key=\"logo\"\r\n                    type=\"file\"\r\n                    id=\"\"\r\n                    onChange={handleFileInput}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CCol>\r\n                <CFormCheck\r\n                  type=\"checkbox\"\r\n                  id=\"gridCheck\"\r\n                  key=\"check\"\r\n                  label=\"Allow Sharing of Learning Resources With Other Branches\"\r\n                  value={1}\r\n                  onChange={(e) => {\r\n                    setResource_sharing(e.target.checked);\r\n                  }}\r\n                />\r\n              </CCol>\r\n            </CCardBody>\r\n\r\n            <CCardFooter>\r\n              <CRow>\r\n                <CCol md=\"3\">\r\n                  <CButton\r\n                    block\r\n                    color=\"light\"\r\n                    onClick={() => setVisible(!visible)}\r\n                    style={{ float: \"left\" }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faTimesCircle} /> Cancel\r\n                  </CButton>\r\n\r\n                  <CModal visible={visible} onDismiss={() => setVisible(false)}>\r\n                    <CModalHeader onDismiss={() => setVisible(false)}>\r\n                      <CModalTitle>Cancel</CModalTitle>\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody>Do You Want To Cancel ?</CModalBody>\r\n                    <CModalFooter>\r\n                      <CButton color=\"light\" onClick={() => setVisible(false)}>\r\n                        <FontAwesomeIcon icon={faTimesCircle} /> No\r\n                      </CButton>\r\n                      <Link to=\"/\">\r\n                        <CButton color=\"dark\">\r\n                          <FontAwesomeIcon icon={faCheckCircle} /> Yes\r\n                        </CButton>\r\n                      </Link>\r\n                    </CModalFooter>\r\n                  </CModal>\r\n\r\n                  <CButton\r\n                    block\r\n                    color=\"dark\"\r\n                    type=\"submit\"\r\n                    style={{ marginLeft: \"15px\" }}\r\n                    disabled={\r\n                      !school_name ||\r\n                      !userID ||\r\n                      !email ||\r\n                      !password ||\r\n                      !mobile ||\r\n                      !address ||\r\n                      !pin\r\n                    }\r\n                    onClick={() => handleUpload(selectedFile)}\r\n                  >\r\n                    <FontAwesomeIcon icon={faSave} /> Save\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardFooter>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Chain;\r\n"],"sourceRoot":""}