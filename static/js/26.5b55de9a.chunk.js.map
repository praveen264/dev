{"version":3,"sources":["views/ev_super_admin/time_table/step_2.js","helpers/notify.js","helpers/edu_axios.js","views/navbars/ev_super_admin/nav_normal_school.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","loader/Loader.js","ev_formik_controls/TextError.js","ev_formik_controls/CheckBox.js","ev_formik_controls/Input.js","ev_formik_controls/MultiSelect.js","ev_formik_controls/RadioButton.js","ev_formik_controls/Select.js","ev_formik_controls/SelectWithKey.js","ev_formik_controls/Textarea.js","ev_formik_controls/EVFormikControl.js"],"names":["general_constraints","props","initialValues","school_id","match","params","useState","visible","setVisible","dataLoaded","setDataLoaded","dbData","setDbData","openModalBox","useHistory","setTimeout","closeModalBox","opt","text","value","days","cons_1","cons_2","cons_3","cons_4","cons_5","cons_6","cons_7","cons_8","cons_9","cons_10","cons_11","cons_12","cons_13","cons_14","cons_15","cons_16","cons_17","validationSchema","Yup","shape","required","onSubmit","values","a","resetForm","EDU_AXIOS","post","process","then","res","window","location","reload","notify","data","message","catch","err","useEffect","getGenConstraints","get","resp","console","log","className","id","md","lg","xl","enableReinitialize","formik","htmlFor","control","name","inline","options","placeholder","block","color","onClick","icon","faTimesCircle","type","disabled","isSubmitting","dirty","isValid","style","marginLeft","faSave","onDismiss","to","faCheckCircle","toast","require","module","exports","info","success","warn","error","dark","axios","default","token","localStorage","getItem","JSON","parse","create","timeout","headers","authorization","interceptors","response","use","status","removeItem","expand","colorScheme","float","fluid","href","variant","popper","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","Loader","role","TextError","children","connect","rest","switcher","getIn","errors","touch","touched","field","map","option","Fragment","checked","includes","label","component","handleChange","handleBlur","onChange","onBlur","selected","setSelected","final","d","push","EVFormikControl","MultiSelect"],"mappings":"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","file":"static/js/26.5b55de9a.chunk.js","sourcesContent":["import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CRow,\r\n  CFormLabel,\r\n  CCardFooter,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n} from \"@coreui/react-pro\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"../../navbars/ev_super_admin/nav_normal_school\";\r\nimport {\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n  faArrowRight,\r\n  faSave,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Loader from \"src/loader/Loader\";\r\nimport EVFormikControl from \"src/ev_formik_controls/EVFormikControl\";\r\nimport EDU_AXIOS from \"src/helpers/edu_axios\";\r\nimport notify from \"src/helpers/notify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst general_constraints = (props) => {\r\n  let school_id = props.match.params.school_id;\r\n  let [visible, setVisible] = useState(false);\r\n  let [dataLoaded, setDataLoaded] = useState(false);\r\n  let [dbData, setDbData] = useState({});\r\n  let history = useHistory();\r\n  // open cancle modal box\r\n  let openModalBox = () => {\r\n    setTimeout(() => setVisible(true), 0);\r\n  };\r\n\r\n  // close cancle modal box\r\n  let closeModalBox = () => {\r\n    setTimeout(() => setVisible(false), 0);\r\n  };\r\n  // options array\r\n  let opt = [\r\n    { text: \"Yes\", value: \"Yes\" },\r\n    { text: \"No\", value: \"No\" },\r\n    { text: \"Don't know\", value: \"NA\" },\r\n  ];\r\n\r\n  // days\r\n  let days = [\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n    \"Sunday\",\r\n    \"NA\",\r\n  ];\r\n  // formik params\r\n  let initialValues;\r\n  if (dbData) {\r\n    initialValues = {\r\n      cons_1: dbData.cons_1 ? dbData.cons_1 : \"\",\r\n      cons_2: dbData.cons_2 ? dbData.cons_2 : \"\",\r\n      cons_3: dbData.cons_3 ? dbData.cons_3 : \"\",\r\n      cons_4: dbData.cons_4 ? dbData.cons_4 : \"\",\r\n      cons_5: dbData.cons_5 ? dbData.cons_5 : \"\",\r\n      cons_6: dbData.cons_6 ? dbData.cons_6 : \"\",\r\n      cons_7: dbData.cons_7 ? dbData.cons_7 : \"\",\r\n      cons_8: dbData.cons_8 ? dbData.cons_8 : \"\",\r\n      cons_9: dbData.cons_9 ? dbData.cons_9 : \"\",\r\n      cons_10: dbData.cons_10 ? dbData.cons_10 : \"\",\r\n      cons_11: dbData.cons_11 ? dbData.cons_11 : \"\",\r\n      cons_12: dbData.cons_12 ? dbData.cons_12 : \"\",\r\n      cons_13: dbData.cons_13 ? dbData.cons_13 : \"\",\r\n      cons_14: dbData.cons_14 ? dbData.cons_14 : \"\",\r\n      cons_15: dbData.cons_15 ? dbData.cons_15 : \"\",\r\n      cons_16: dbData.cons_16 ? dbData.cons_16 : \"\",\r\n      cons_17: dbData.cons_17 ? dbData.cons_17 : \"\",\r\n    };\r\n  } else {\r\n    initialValues = {\r\n      cons_1: \"\",\r\n      cons_2: \"\",\r\n      cons_3: \"\",\r\n      cons_4: \"\",\r\n      cons_5: \"\",\r\n      cons_6: \"\",\r\n      cons_7: \"\",\r\n      cons_8: \"\",\r\n      cons_9: \"\",\r\n      cons_10: \"\",\r\n      cons_11: \"\",\r\n      cons_12: \"\",\r\n      cons_13: \"\",\r\n      cons_14: \"\",\r\n      cons_15: \"\",\r\n      cons_16: \"\",\r\n      cons_17: \"\",\r\n    };\r\n  }\r\n\r\n  // validation rules of the form fields\r\n  const validationSchema = Yup.object().shape({\r\n    cons_1: Yup.string().required(\"required\"),\r\n    cons_2: Yup.string().required(\"required\"),\r\n    cons_3: Yup.string().required(\"required\"),\r\n    cons_4: Yup.string().required(\"required\"),\r\n    cons_5: Yup.string().required(\"required\"),\r\n    cons_6: Yup.string().required(\"required\"),\r\n    cons_7: Yup.string().required(\"required\"),\r\n    cons_8: Yup.string().required(\"required\"),\r\n    cons_9: Yup.string().required(\"required\"),\r\n    cons_10: Yup.string().required(\"required\"),\r\n    cons_11: Yup.string().required(\"required\"),\r\n    cons_12: Yup.string().required(\"required\"),\r\n    cons_13: Yup.string().required(\"required\"),\r\n    cons_14: Yup.string().required(\"required\"),\r\n    cons_15: Yup.string().required(\"required\"),\r\n    cons_16: Yup.string().required(\"required\"),\r\n    cons_17: Yup.string().required(\"required\"),\r\n  });\r\n  // submit form\r\n  const onSubmit = async (values, { resetForm }) => {\r\n    await EDU_AXIOS.post(\r\n      process.env.REACT_APP_API_PATH + \"/ttm/initialize-general-constraints\",\r\n      {\r\n        school_id: school_id,\r\n        cons_1: values.cons_1,\r\n        cons_2: values.cons_2,\r\n        cons_3: values.cons_3,\r\n        cons_4: values.cons_4,\r\n        cons_5: values.cons_5,\r\n        cons_6: values.cons_6,\r\n        cons_7: values.cons_7,\r\n        cons_8: values.cons_8,\r\n        cons_9: values.cons_9,\r\n        cons_10: values.cons_10,\r\n        cons_11: values.cons_11,\r\n        cons_12: values.cons_12,\r\n        cons_13: values.cons_13,\r\n        cons_14: values.cons_14,\r\n        cons_15: values.cons_15,\r\n        cons_16: values.cons_16,\r\n        cons_17: values.cons_17,\r\n      }\r\n    )\r\n      .then(async (res) => {\r\n        resetForm({ values: \"\" });\r\n        window.location.reload();\r\n        // history.push(`/time-table-management/step-2/${school_id}`);\r\n        notify(\"success\", res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        notify(\"error\", err);\r\n      });\r\n  };\r\n  // get constraints detail from server\r\n  useEffect(async () => {\r\n    setDataLoaded(false);\r\n    const res = await getGenConstraints();\r\n    if (res) {\r\n      setDataLoaded(true);\r\n    }\r\n  }, []);\r\n\r\n  // get teacher data from database\r\n  const getGenConstraints = async () => {\r\n    try {\r\n      await EDU_AXIOS.get(\r\n        `${process.env.REACT_APP_API_PATH}/ttm/get-general-constraints/${school_id}`\r\n      )\r\n        .then((resp) => {\r\n          console.log(resp.data.data[0]);\r\n          setDbData(resp.data.data[0]);\r\n        })\r\n        .catch((err) => {\r\n          notify(\"error\", err);\r\n        });\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n  return (\r\n    <CCardGroup>\r\n      <CCard className=\"p-2\">\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol>\r\n              <NavBar id={school_id} />\r\n            </CCol>\r\n          </CRow>\r\n          <CRow>\r\n            <CCol md=\"8\" lg=\"4\" xl=\"8\">\r\n              <h5>General Constraints [ Step 2 ]</h5>\r\n            </CCol>\r\n          </CRow>\r\n          <p className=\"text-muted\">Apply constraints</p>\r\n          {dataLoaded ? (\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validationSchema={validationSchema}\r\n              onSubmit={onSubmit}\r\n              enableReinitialize={true}\r\n            >\r\n              {(formik) => (\r\n                <Form className=\"row g-3\">\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      First period of a day should always be assigned to the\r\n                      class teacher\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_1\"\r\n                        id=\"cons_1\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      A teacher should have at least 1/2/3 (pick one) periods\r\n                      free in a week\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"selectwithkey\"\r\n                        name=\"cons_2\"\r\n                        id=\"cons_2\"\r\n                        placeholder=\"Select...\"\r\n                        options={[\r\n                          { text: \"1\", value: \"1\" },\r\n                          { text: \"2\", value: \"2\" },\r\n                          { text: \"3\", value: \"3\" },\r\n                          { text: \"NA\", value: \"NA\" },\r\n                        ]}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      A teacher should have at least 1 period free in a day\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_3\"\r\n                        id=\"cons_3\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Every class should have at least one sports/games period\r\n                      in a week\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_4\"\r\n                        id=\"cons_4\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Last two period of xxxday will be SUPW/House team meet\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"select\"\r\n                        name=\"cons_5\"\r\n                        id=\"cons_5\"\r\n                        placeholder=\"Select...\"\r\n                        options={days}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Two or more classes can have games period at the same time\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_6\"\r\n                        id=\"cons_6\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Library to be assigned to one class at a time\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_7\"\r\n                        id=\"cons_7\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Science Lab/practical period should always be assigned as\r\n                      double period i.e. two consecutive periods together\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_8\"\r\n                        id=\"cons_8\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Computer Lab period should always be assigned as double\r\n                      period i.e. two consecutive periods together\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_9\"\r\n                        id=\"cons_9\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Any double period can not have lunch break between them.\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_10\"\r\n                        id=\"cons_10\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Any double period can not have lunch break between them\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_11\"\r\n                        id=\"cons_11\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Science lab period when assigned as double period can not\r\n                      have lunch break between them.\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_12\"\r\n                        id=\"cons_12\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Science lab period when assigned as double period can not\r\n                      have day break between them.\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_13\"\r\n                        id=\"cons_13\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Computer lab period when assigned as double period can not\r\n                      have lunch break between them\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_14\"\r\n                        id=\"cons_14\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Computer lab period when assigned as double period can not\r\n                      have day break between them.\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_15\"\r\n                        id=\"cons_15\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Every class should have at least one sports/games period\r\n                      in a week\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_16\"\r\n                        id=\"cons_16\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CFormLabel\r\n                      htmlFor=\"session\"\r\n                      className=\"col-md-8 col-form-label required-field\"\r\n                    >\r\n                      Science Lab/practical room should be assigned to one class\r\n                      at a time.\r\n                    </CFormLabel>\r\n\r\n                    <CCol md={4}>\r\n                      <EVFormikControl\r\n                        control=\"radio\"\r\n                        name=\"cons_17\"\r\n                        id=\"cons_17\"\r\n                        inline={true}\r\n                        options={opt}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CCardFooter>\r\n                    <CButton block color=\"light\" onClick={openModalBox}>\r\n                      <FontAwesomeIcon icon={faTimesCircle} /> Cancel\r\n                    </CButton>\r\n                    <CButton\r\n                      block\r\n                      color=\"dark\"\r\n                      type=\"submit\"\r\n                      disabled={\r\n                        formik.isSubmitting || !formik.dirty || !formik.isValid\r\n                      }\r\n                      style={{ marginLeft: \"15px\" }}\r\n                    >\r\n                      {formik.isSubmitting ? (\r\n                        <Loader />\r\n                      ) : (\r\n                        <>\r\n                          <FontAwesomeIcon icon={faSave} /> Save\r\n                        </>\r\n                      )}\r\n                    </CButton>\r\n                  </CCardFooter>\r\n                  <CModal visible={visible} onDismiss={closeModalBox}>\r\n                    <CModalHeader onDismiss={closeModalBox}>\r\n                      <CModalTitle>\r\n                        <h5>Cancel</h5>\r\n                      </CModalTitle>\r\n                    </CModalHeader>\r\n\r\n                    <CModalBody>Do You Want To Cancel ?</CModalBody>\r\n                    <CModalFooter>\r\n                      <CButton color=\"light\" onClick={closeModalBox}>\r\n                        <FontAwesomeIcon icon={faTimesCircle} /> No\r\n                      </CButton>\r\n                      <Link to=\"/\">\r\n                        <CButton color=\"dark\">\r\n                          <FontAwesomeIcon icon={faCheckCircle} /> Yes\r\n                        </CButton>\r\n                      </Link>\r\n                    </CModalFooter>\r\n                  </CModal>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          ) : (\r\n            <Loader />\r\n          )}\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCardGroup>\r\n  );\r\n};\r\n\r\nexport default general_constraints;\r\n","let { toast } = require(\"react-toastify\");\r\n\r\nconst notify = (type, message) => {\r\n  switch (type) {\r\n    case \"info\":\r\n      toast.info(message);\r\n      break;\r\n    case \"success\":\r\n      toast.success(message);\r\n      break;\r\n    case \"warning\":\r\n      toast.warn(message);\r\n      break;\r\n    case \"error\":\r\n      toast.error(message);\r\n      break;\r\n    case \"dark\":\r\n      toast.dark(message);\r\n      break;\r\n    default:\r\n      toast(message);\r\n  }\r\n};\r\n\r\nmodule.exports = notify;\r\n","const notify = require(\"./notify\");\r\nconst axios = require(\"axios\").default;\r\nlet EDU_AXIOS;\r\nlet token = \"\";\r\n// to set authorization header on test mode\r\nlet user = localStorage.getItem(\"user\");\r\nif (user) {\r\n  token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"production\") {\r\n  EDU_AXIOS = axios.create({\r\n    timeout: 6000,\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        notify(\"error\", error.response.message);\r\n      } else {\r\n        notify(\"error\", error.response.message);\r\n      }\r\n    }\r\n  );\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"test\") {\r\n  if (token == \"\") {\r\n    console.log(\"there isno token\");\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  } else {\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        console.log(error.response.data.message);\r\n        notify(\"error\", error.response.data.message);\r\n      } else {\r\n        notify(\"error\", error.response.data.message);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nmodule.exports = EDU_AXIOS;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CNavbar,\r\n  CNavbarToggler,\r\n  CNavbarNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CContainer,\r\n  CCollapse,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n} from \"@coreui/react-pro\";\r\nexport default (props) => {\r\n  let id = props.id;\r\n  const [visible, setVisible] = useState(false);\r\n  return (\r\n    <>\r\n      <CNavbar\r\n        expand=\"\"\r\n        colorScheme=\"light\"\r\n        className=\"bg-secondry\"\r\n        style={{ float: \"right\" }}\r\n      >\r\n        <CContainer fluid>\r\n          <CNavbarToggler onClick={() => setVisible(!visible)} />\r\n          <CCollapse className=\"navbar-collapse\" visible={visible}>\r\n            <CNavbarNav>\r\n              <a color=\"secondary\" className=\"btn btn-default\"  href={`/#/school-management/get-users/${id}`}>User Management</a>\r\n            {/* <CDropdown variant=\"nav-item\" popper={false}>\r\n            <CDropdownToggle color=\"secondary\" >\r\n                 User Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/user-management/${id}`}\r\n                  >\r\n                   Add Users\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/get-users/${id}`}\r\n                  >\r\n                   get Users\r\n                  </CDropdownItem>\r\n                  </CDropdownMenu>\r\n                  </CDropdown> */}\r\n                  <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\" >\r\n                  Class Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-classes/${id}`}\r\n                  >\r\n                    Create/Edit Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/view-classes/${id}`}\r\n                  >\r\n                    View Classes\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/create-sections/${id}`}\r\n                  >\r\n                    Create Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/manage-sections/${id}`}\r\n                  >\r\n                    Manage Sections\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                    Class Mapping\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Subject Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Add Subject\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                   Assign Subject To Class\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/school-management/normal-school/all-subjects/${id}`}\r\n                  >\r\n                    All Subjects\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n         \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Teacher Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                    Add Teacher\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Section Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/class-management/class-mapping/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Academic Calendar Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Academic Year\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                  Holiday calendar & holiday list\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    Exam calendar\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Lesson Planning\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/lesson-management/get-subjects/${id}`}\r\n                  >\r\n                   Annual Lesson Plan\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                 Class Structure Creation\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Constraints management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                 School level constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Class wise constraints (inflow from class teacher)\r\n                  </CDropdownItem>\r\n                 \r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Data fitness – system checks the fitness of data\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Generate Annual Timetable\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                Update weekly time table.\r\n                </CDropdownToggle>\r\n                {/* <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Assign class teacher – Primary & secondary\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/add-teacher/${id}`}\r\n                  >\r\n                   Teacher & class mapping\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/teacher-management/get-teachers/${id}`}\r\n                  >\r\n                    All Teachers\r\n                  </CDropdownItem>\r\n                </CDropdownMenu> */}\r\n              </CDropdown>\r\n              {/*<CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Student Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Students</CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Building Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href=\"#\">All Subjects</CDropdownItem>\r\n                </CDropdownMenu>\r\n  </CDropdown>*/}\r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">\r\n                  Calender Management\r\n                </CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/add-holiday/${id}`}\r\n                  >\r\n                    Add Holiday\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/calender-management/view-calender/${id}`}\r\n                  >\r\n                    View Calender\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n          \r\n              <CDropdown variant=\"nav-item\" popper={false}>\r\n                <CDropdownToggle color=\"secondary\">Time Table</CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem href={`/#/time-table-management/step-1/${id}`}>\r\n                    Time Table (Initialization)\r\n                  </CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/time-table-list/${id}`}\r\n                  >\r\n                    Time Table List\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href={`/#/time-table-management/step-2/${id}`}>\r\n                    General Constraints\r\n                  </CDropdownItem>\r\n                  <CDropdownItem href=\"#\">Class Constraints</CDropdownItem>\r\n                  <CDropdownItem\r\n                    href={`/#/time-table-management/create-time-table-admin/${id}`}\r\n                  >\r\n                    Generate Time Table (Admin)\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n            </CNavbarNav>\r\n          </CCollapse>\r\n        </CContainer>\r\n      </CNavbar>\r\n    </>\r\n  );\r\n};\r\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>;\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nfunction TextError(props) {\r\n  return <div className=\"invalid-feedback\">{props.children}</div>;\r\n}\r\n\r\nexport default TextError;\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst CheckBox = (props) => {\r\n  const { formik, name, options, switcher, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={\r\n                    field.value ? field.value.includes(option.value) : \"\"\r\n                  }\r\n                  label={option.text}\r\n                  disabled={option.disabled ? option.disabled : false}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}\r\n                  }`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(CheckBox);\r\n","import React from \"react\";\r\nimport { CFormInput } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Input(props) {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <CFormInput\r\n        id={id}\r\n        name={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        {...rest}\r\n        className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n      />\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(Input);\r\n","import React, { useState } from \"react\";\r\nimport { CMultiSelect } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn, useField } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Multiselect = (props) => {\r\n  let { formik, name, id, options, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  const [selected, setSelected] = useState([]);\r\n  let final = [];\r\n  return (\r\n    <>\r\n      <Field name={name} id={id} onChange={handleChange} onBlur={handleBlur}>\r\n        {({ field }) => {\r\n          selected.map((d) => {\r\n            final.push(d.value);\r\n            return final;\r\n          });\r\n          formik.values[`${name}`] = final;\r\n\r\n          return (\r\n            <CMultiSelect\r\n              {...field}\r\n              {...rest}\r\n              options={options}\r\n              onChange={setSelected}\r\n              className={`form-control  ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Multiselect);\r\n","import React from \"react\";\r\nimport { CFormCheck } from \"@coreui/react-pro\";\r\nimport { connect, Field, ErrorMessage, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nconst RadioButton = (props) => {\r\n  const { formik, name, options, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.text}>\r\n                <CFormCheck\r\n                  type=\"radio\"\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={field.value === option.value}\r\n                  label={option.text}\r\n                  className={`${error && touch ? \"is-invalid\" : \"\"}`}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(RadioButton);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Select = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option} value={option}>\r\n                    {option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Select);\r\n","import React from \"react\";\r\nimport { CFormSelect } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst SelectWithKey = (props) => {\r\n  const { formik, name, options, id, placeholder, ...rest } = props;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormSelect\r\n              id={id}\r\n              name={name}\r\n              {...rest}\r\n              {...field}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            >\r\n              <option value=\"\">\r\n                {\" \"}\r\n                {placeholder ? placeholder : \"Select...\"}\r\n              </option>\r\n              {options.map((option) => {\r\n                return (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.text}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CFormSelect>\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(SelectWithKey);\r\n","import React from \"react\";\r\nimport { CFormTextarea } from \"@coreui/react-pro\";\r\nimport { connect, ErrorMessage, Field, getIn } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Textarea = (props) => {\r\n  const { formik, name, id, ...rest } = props;\r\n  const { handleChange, handleBlur } = formik;\r\n  const error = getIn(formik.errors, name);\r\n  const touch = getIn(formik.touched, name);\r\n  return (\r\n    <>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return (\r\n            <CFormTextarea\r\n              id={id}\r\n              name={name}\r\n              {...field}\r\n              {...rest}\r\n              className={`form-control ${error && touch ? \"is-invalid\" : \"\"}`}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(Textarea);\r\n","import React from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\nimport Input from \"./Input\";\r\nimport MultiSelect from \"./MultiSelect\";\r\nimport RadioButton from \"./RadioButton\";\r\nimport Select from \"./Select\";\r\nimport SelectWithKey from \"./SelectWithKey\";\r\nimport Textarea from \"./Textarea\";\r\nfunction EVFormikControl(props) {\r\n  const { control, ...rest } = props;\r\n  switch (control) {\r\n    case \"input\":\r\n      return <Input {...rest} />;\r\n    case \"textarea\":\r\n      return <Textarea {...rest} />;\r\n    case \"select\":\r\n      return <Select {...rest} />;\r\n    case \"selectwithkey\":\r\n      return <SelectWithKey {...rest} />;\r\n    case \"multiselect\":\r\n      return <MultiSelect {...rest} />;\r\n    case \"radio\":\r\n      return <RadioButton {...rest} />;\r\n    case \"checkbox\":\r\n      return <CheckBox {...rest} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default EVFormikControl;\r\n"],"sourceRoot":""}