{"version":3,"sources":["../node_modules/tiny-warning/dist/tiny-warning.esm.js","views/ev_super_admin/school_management/all-normal-schools/all-normal-schools.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/export-from-json/dist/esm/utils.js","../node_modules/export-from-json/dist/esm/processors.js","../node_modules/export-from-json/dist/esm/converters.js","../node_modules/export-from-json/dist/esm/exportFromJSON.js","../node_modules/export-from-json/dist/esm/index.js","views/ev_super_admin/school_management/edit_school_dashboard.js"],"names":["warning","condition","message","useStyles","makeStyles","theme","root","margin","spacing","input","display","formControl","minWidth","maxWidth","chips","flexWrap","chip","noLabel","marginTop","ManageSchool","useState","state","setstate","screen","setScreen","schoolId","setSchoolId","EDU_AXIOS","get","process","then","resp","data","userID","setUSerID","school_name","setSchool_name","address","setAddress","pin","setPin","website","setWebsite","email","setEmail","mobile","setMobile","academics_from","setAcademics_from","academics_to","setacademics_to","license_start","setLicense_start","license_end","setLicense_end","setTotal_users","password","setPassword","password2","setPassword2","state_name","setState_name","statecode","setStateCode","citycode","setCityCode","country_code","setCountry_code","city","setCity","stateName","setStateName","cityName","setCityName","region","visible","setVisible","React","countrylist","setCountryList","setChainSchools","setCahinSchoolId","userIDErr","schoolNameErr","pinErr","stateErr","cityErr","countryErr","addressErr","webErr","emailErr","mobileErr","passwordErr","password2Err","calStartErr","calEndErr","academicStartErr","academicEndErr","useEffect","response","countryArray","catch","error","console","log","stateArray","respo","cityArray","class_name","total_student","inputList","history","useHistory","type","onClick","i","length","name","push","username","exportFromJSON","fileName","exportType","title","columns","field","options","search","paging","filtering","exportButton","actionsColumnIndex","rowStyle","x","tableData","id","backgroundColor","pageSize","emptyRowsWhenPaging","pageSizeOptions","actions","icon","faEye","style","fontSize","tooltip","event","rowData","faEdit","school_id","pin_code","total_users","substring","country","acadmics_from","acadmics_to","chain_school_id","md","lg","xl","className","htmlFor","placeholder","value","onChange","e","target","Object","keys","map","key","color","disabled","rows","countryCode","selected","state_code","custom","block","float","faTimesCircle","onDismiss","to","faCheckCircle","marginLeft","patch","classes","res","notify","faSave","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","prototype","toString","call","assert","msg","Error","getKeys","getEntries","normalizeFileName","extension","fileNameFormatter","suffix","extensionPattern","RegExp","concat","replace","downloadFile","content","byBlob","dataURI","blobType","URL","createObjectURL","Blob","encodeURIComponent","generateDataURI","anchor","document","createElement","href","download","setAttribute","body","appendChild","dispatchEvent","MouseEvent","bubbles","cancelable","view","window","removeChild","__assign","assign","t","s","n","arguments","p","hasOwnProperty","apply","this","__read","o","m","r","ar","next","done","_createTableMap","reduce","tMap","rowKVs","rowIndex","_a","_b","columnValues","_","JSON","stringify","create","_createTableEntries","tableMap","beforeTableEncode","fieldName","fieldValues","createXLSData","tableEntries","head","join","column","mergedColumn","_renderTableHTMLText","createXMLData","_renderXML","tagName","arrayElementTag","spaces","tag","trim","indentSpaces","indent","undefined","item","String","$1","_c","fields","_d","_e","replacer","_f","space","_g","processor","_h","withBOM","_j","delimiter","_k","MESSAGE_IS_ARRAY_FAIL","MESSAGE_UNKNOWN_EXPORT_TYPE","MESSAGE_FIELD_INVALID","safeData","mapper","filter","_createFieldsMapper","fieldsMapper","parse","_prepareData","JSONData","_createJSONData","CSVData","createCSVData","types","txt","css","html","json","csv","xls","xml","processors","EditSchoolDashboard"],"mappings":"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","file":"static/js/20.e0832986.chunk.js","sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","import React from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { CCard, CCardBody, CCol, CRow  } from \"@coreui/react-pro\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { faEdit, faEye } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport EDU_AXIOS from \"src/helpers/edu_axios\";\r\nimport exportFromJSON from 'export-from-json' \r\nimport { useState, useEffect } from \"react\";\r\nimport EditSchoolDashboard from \"../edit_school_dashboard\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport {\r\n  CButton,\r\n \r\n  CCardFooter,\r\n  \r\n  CFormInput,\r\n  \r\n  CFormLabel,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CFormTextarea,\r\n} from \"@coreui/react-pro\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  faSave,\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport notify from \"src/helpers/notify\";\r\n\r\nconst config = {\r\n  bucketName: process.env.REACT_APP_BUCKET_NAME,\r\n  dirName: process.env.REACT_APP_SCHOOL_LOGO_DIR_NAME,\r\n  region: process.env.REACT_APP_REGION,\r\n  accessKeyId: process.env.REACT_APP_ACCESS_ID,\r\n  secretAccessKey: process.env.REACT_APP_ACCESS_KEY,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst classs = [\"SMS\", \"LMS\", \"Video Conferencing\", \"Demo\"];\r\nfunction ManageSchool() {\r\n\r\n\r\n\r\n  let items = [];\r\n  let url =\r\n    process.env.REACT_APP_API_PATH + \"/auth/get-normal-schools\";\r\n  const [state, setstate] = useState([])\r\n  const [screen, setScreen] = useState(\"\")\r\n  const [schoolId, setSchoolId] = useState(\"\")\r\n\r\n  EDU_AXIOS.get(url)\r\n    .then((resp) => {\r\n    //  console.log(resp);\r\n     setstate(resp.data.data)\r\n    });\r\n  //console.log(state.length);\r\n\r\nconst testing = () =>{\r\n//  alert(school_name)\r\n // alert(schoolId)\r\n //alert(region)\r\n EDU_AXIOS.patch( ` ${process.env.REACT_APP_API_PATH}/auth/edit-normal-school/${schoolId}`,\r\n  {\r\n    name: school_name,\r\n    username: userID,\r\n    password: password,\r\n    email: email,\r\n    mobile: mobile,\r\n    address: address,\r\n    pin_code: pin,\r\n    state: stateName,\r\n    city: cityName,\r\n    website: website,\r\n    acadmics_from: academics_from,\r\n    acadmics_to: academics_to,\r\n    license_start: license_start,\r\n    license_end: license_end,\r\n    classes: inputList,\r\n    // total_users: total_users,\r\n   // license_type: classNames,\r\n    // logo: logoName,\r\n   // chain_school_id: chainSchoolId,\r\n    region:region\r\n  }\r\n ).then((res)=>{\r\n  // alert(\"datas edited successfully\")\r\n //  console.log(res)\r\n notify(\"success\",\"Normal school datas updated successfully\");\r\n })\r\n}\r\n  const edit = (school_id) => {\r\n   // alert(school_id)\r\n    setSchoolId(school_id);\r\n    //  history.push('normal-school/'+school_id);\r\n    setScreen(\"edit\")\r\n    EDU_AXIOS.get( ` ${process.env.REACT_APP_API_PATH}/auth/get-normal-school/${school_id}`)\r\n    .then((resp) => {\r\n      console.log(\"getting normalschool dtaa\");\r\n      \r\n      console.log(resp);\r\n      //alert(resp.data.data.username);\r\n      setSchool_name(resp.data.data.name);\r\n     setUSerID(resp.data.data.username);\r\n     // setstate(resp.data.data)\r\n     setPassword(resp.data.data.password);\r\n    //  alert(resp.data.data.password);\r\n     setEmail(resp.data.data.email)\r\n     setMobile(resp.data.data.mobile)\r\n     setAddress(resp.data.data.address)\r\n     setPin(resp.data.data.pin_code)\r\n    //  setCountryList(resp.data.data.country);\r\n    setWebsite(resp.data.data.website)\r\n    setTotal_users(resp.data.data.total_users);\r\n    setLicense_start(resp.data.data.license_start.substring(0,10));\r\n    setLicense_end(resp.data.data.license_end.substring(0,10));\r\n    setCountry_code(resp.data.data.country)\r\n    setAcademics_from(resp.data.data.acadmics_from);\r\n    setacademics_to(resp.data.data.acadmics_to);\r\n    setCityCode(resp.data.data.city);\r\n    setCityName(resp.data.data.city)\r\n  setStateCode(resp.data.data.state);\r\n  setStateName(resp.data.data.state);\r\n  setWebsite(resp.data.data.website);\r\n  setCahinSchoolId(resp.data.data.chain_school_id);\r\n  //setRegion(resp.data.data.region)\r\n  //alert(resp.data.data.region)\r\n  //  alert(resp.data.data.city);\r\n  //  alert(stateName)\r\n    });\r\n  }\r\n  const classes = useStyles();\r\n  const [userID, setUSerID] = useState(\"\");\r\n  const [school_name, setSchool_name] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [pin, setPin] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(\"\");\r\n  const [academics_from, setAcademics_from] = useState(\"\");\r\n  const [academics_to, setacademics_to] = useState(\"\");\r\n  const [license_start, setLicense_start] = useState(\"\");\r\n  const [license_end, setLicense_end] = useState(\"\");\r\n  const [total_users, setTotal_users] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [state_name, setState_name] = useState([]);\r\n  const [statecode,setStateCode]=useState(\"\");\r\n  const [citycode,setCityCode]=useState(\"\");\r\n  const [country_code, setCountry_code] = useState();\r\n  const [city, setCity] = useState([]);\r\n  const [stateName, setStateName] = useState();\r\n  const [cityName, setCityName] = useState();\r\n  const [region, setRegion] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const [classNames, setClassNames] = React.useState([]);\r\n  const [countrylist, setCountryList] = useState([]);\r\n  const [chainSchools, setChainSchools] = useState([]);\r\n  const [chainSchoolId, setCahinSchoolId] = useState(\"\");\r\n  const [logoName, setLogoName] = useState(\"\");\r\n\r\n  // Defining Errors\r\n  const [userIDErr, setUserIDErr] = useState({});\r\n  const [schoolNameErr, setSchoolNameErr] = useState({});\r\n  const [pinErr, setPinErr] = useState({});\r\n  const [stateErr, setStateErr] = useState({});\r\n  const [cityErr, setCityErr] = useState({});\r\n  const [countryErr, setCountryErr] = useState({});\r\n  const [addressErr, setAddressErr] = useState({});\r\n  const [webErr, setWebErr] = useState({});\r\n  const [emailErr, setEmailErr] = useState({});\r\n  const [mobileErr, setMobileErr] = useState({});\r\n  const [passwordErr, setPasswordErr] = useState({});\r\n  const [password2Err, setPassword2Err] = useState({});\r\n  const [calStartErr, setCalStartErr] = useState({});\r\n  const [calEndErr, setCalEndErr] = useState({});\r\n  const [academicStartErr, setacAdemicStartErr] = useState({});\r\n  const [academicEndErr, setAcademicEndErr] = useState({});\r\n  const [totalErr, setTotalErr] = useState({});\r\n\r\n  // to get country list from server\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(process.env.REACT_APP_API_PATH + \"/auth/get-countries\")\r\n      .then((response) => {\r\n        let countryArray = response.data.data;\r\n        setCountryList(countryArray);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // to get chain school list from server\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(\r\n      process.env.REACT_APP_API_PATH + \"/auth/get-chain-school-list\"\r\n    )\r\n      .then((response) => {\r\n        setChainSchools(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // set country code before calling state list api\r\n  const selectState = (e) => {\r\n    var countryCode = e.target.value;\r\n    setCountry_code(countryCode);\r\n  };\r\n\r\n  // get states by country code\r\n  useEffect(() => {\r\n    // check country code is set or not\r\n    if (country_code) {\r\n      EDU_AXIOS.get(\r\n        process.env.REACT_APP_API_PATH + `/auth/get-states/${country_code}`\r\n      )\r\n        .then((resp) => {\r\n          let stateArray = resp.data.data;\r\n          setState_name(stateArray);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [country_code]);\r\n\r\n  let uploadLogo = async (file) => {\r\n    return uploadFile(file, config)\r\n      .then((data) => {\r\n        return data.key;\r\n      })\r\n      .catch((err) => console.error(err, \"\"));\r\n  };\r\n\r\n  // get cities of a state\r\n  useEffect(() => {\r\n    // check coundry code and state name is set or not\r\n    if (stateName) {\r\n      EDU_AXIOS.get(\r\n        process.env.REACT_APP_API_PATH +\r\n          `/auth/get-cities/${country_code}/${stateName}`\r\n      )\r\n        //EDU_AXIOS.get(cityURL)\r\n        .then((respo) => {\r\n          let cityArray = respo.data.data;\r\n\r\n          setCity(cityArray);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [stateName]);\r\n\r\n  const handleChange = (event) => {\r\n    setClassNames(event.target.value);\r\n  };\r\n\r\n  const [inputList, setInputList] = useState([\r\n    { class_name: \"\", total_student: \"\" },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n    // console.log(inputList,\"B\");\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { class_name: \"\", total_student: \"\" }]);\r\n  };\r\n\r\n  // get a file to upload\r\n  const handleFileInput = (e) => {\r\n    setLogoName(e.target.files[0].name);\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n  const handleUpload = async (file) => {\r\n    uploadFile(file, config)\r\n      .then((data) => console.log(data, \"Logo uploaded successfully\"))\r\n      .catch((err) => console.error(err, \"\"));\r\n  };\r\n  const onSubmit = async (e) => {\r\n  \r\n    e.preventDefault();\r\n    const isValid = await formValidation();\r\n    // check form is valid or not\r\n    if (isValid) {\r\n    //  let upData = await uploadLogo(values.picUp);\r\n      return await EDU_AXIOS.post(\r\n        process.env.REACT_APP_API_PATH + \"/auth/create-normal-school\",\r\n        {\r\n          name: school_name,\r\n          username: userID,\r\n          password: password,\r\n          email: email,\r\n          mobile: mobile,\r\n          address: address,\r\n          pin_code: pin,\r\n          state: stateName,\r\n          city: cityName,\r\n          website: website,\r\n          acadmics_from: academics_from,\r\n          acadmics_to: academics_to,\r\n          license_start: license_start,\r\n          license_end: license_end,\r\n          classes: inputList,\r\n          total_users: total_users,\r\n          license_type: classNames,\r\n          logo: logoName,\r\n          chain_school_id: chainSchoolId,\r\n          region:region\r\n        }\r\n      )\r\n        .then(async (res) => {\r\n          e.target.reset();\r\n        //  alert(res.data.message);\r\n        })\r\n        .catch((err) => {\r\n        //  alert(err);\r\n        });\r\n    }\r\n  };\r\n  const formValidation = async () => {\r\n    const userIDErr = {};\r\n    const schoolNameErr = {};\r\n    const pinErr = {};\r\n    const webErr = {};\r\n    const emailErr = {};\r\n    const mobileErr = {};\r\n    const passwordErr = {};\r\n    const password2Err = {};\r\n    const stateErr = {};\r\n    const cityErr = {};\r\n    const countryErr = {};\r\n    const addressErr = {};\r\n    const calStartErr = {};\r\n    const calEndErr = {};\r\n    const academicStartErr = {};\r\n    const academicEndErr = {};\r\n    const totalErr = {};\r\n\r\n    let isValid = true;\r\n    // Validations for different fields\r\n\r\n    // if (!userID.trim()) {\r\n    //   userIDErr.UserIDrequired = \"Required\";\r\n    // } else if (/[^a-zA-Z0-9_.]/.test(userID) || userID.trim().length < 6) {\r\n    //   userIDErr.UserIDinvalid =\r\n    //     \"UserID is Invalid (@ , # not supported) / < 6 Digits\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    // if (!license_start.trim()) {\r\n    //   calStartErr.calShort = \" Required\";\r\n    //   isValid = false;\r\n    // }\r\n    // if (!license_end.trim()) {\r\n    //   calEndErr.cal = \" Required\";\r\n    //   isValid = false;\r\n    // }\r\n    // if (!academics_from.trim()) {\r\n    //   academicStartErr.start = \" Required\";\r\n    //   isValid = false;\r\n    // }\r\n    // if (!academics_to.trim()) {\r\n    //   academicEndErr.end = \" Required\";\r\n    //   isValid = false;\r\n    // }\r\n    // if (!total_users.trim()) {\r\n    //   totalErr.total = \" Required\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    // if (!school_name.trim()) {\r\n    //   schoolNameErr.schoolNameShort = \" Required\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    // if (!pin.trim()) {\r\n    //   pinErr.pinreq = \" Required\";\r\n    //   isValid = false;\r\n    // } else if (!/[123456789][0-9]{5}/.test(pin) || pin.trim().length > 6) {\r\n    //   pinErr.pinshort = \"PIN should be 6 Digits only / PIN Can't Start with 0\";\r\n    //   isValid = false;\r\n    // }\r\n    // if (!address.trim()) {\r\n    //   addressErr.addressShort = \" Required\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    // if (!email.trim()) {\r\n    //   emailErr.emailrequired = \"Required\";\r\n    //   isValid = false;\r\n    // } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n    //   emailErr.emailinvalid = \"Email address is invalid\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    // if (!mobile.trim()) {\r\n    //   mobileErr.mobreq = \" Required\";\r\n    //   isValid = false;\r\n    // } else if (mobile.trim().length > 10 || !/[6789][0-9]{9}/.test(mobile)) {\r\n    //   mobileErr.mobshort = \"Mobile number must be Valid & of 10 Digits Only\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    // if (!password.trim()) {\r\n    //   passwordErr.passreq = \" Required\";\r\n    //   isValid = false;\r\n    // } else if (password.trim().length < 6 || password.trim().length > 20) {\r\n    //   passwordErr.passshort = \"Invalid / < 6 Digits\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    // if (!password2.trim()) {\r\n    //   passwordErr.pass2req = \" \";\r\n    //   isValid = false;\r\n    // } else if (password2 !== password) {\r\n    //   password2Err.pass2short = \"Doesn't Match \";\r\n    //   isValid = false;\r\n    // }\r\n    // setting errors in validation\r\n    setUserIDErr(userIDErr);\r\n    setSchoolNameErr(schoolNameErr);\r\n    setPinErr(pinErr);\r\n    setWebErr(webErr);\r\n    setEmailErr(emailErr);\r\n    setMobileErr(mobileErr);\r\n    setPasswordErr(passwordErr);\r\n    setPassword2Err(password2Err);\r\n    setCityErr(cityErr);\r\n    setStateErr(stateErr);\r\n    setCountryErr(countryErr);\r\n    setAddressErr(addressErr);\r\n    setCalStartErr(calStartErr);\r\n    setCalEndErr(calEndErr);\r\n    setacAdemicStartErr(academicStartErr);\r\n    setAcademicEndErr(academicEndErr);\r\n    setTotalErr(totalErr);\r\n    return isValid;\r\n  };\r\n  let history = useHistory();\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",\r\n    },\r\n    {\r\n      title: \"Username\",\r\n      field: \"username\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      field: \"email\",\r\n    },\r\n    {\r\n      title: \"License Start\",\r\n      field: \"license_start\",\r\n    },\r\n    {\r\n      title: \"License End\",\r\n      field: \"license_end\",\r\n    },\r\n  ];\r\n\r\n\r\n  const data=[];\r\n  const fileName = 'download'  \r\n  const exportType = 'xls'\r\n   const ExportToExcel = () => {  \r\n     console.log(state)\r\n    for(var i=0;i<state.length;i++){\r\n      console.log(state[i].name)\r\n      data.push({\r\n        name:state[i].name,\r\n        email:state[i].email,\r\n        username:state[i].username\r\n      })\r\n    }\r\n     console.log(data)\r\n      exportFromJSON({ data, fileName, exportType })  \r\n    }\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardBody>\r\n        {/* {\r\n          state.map((items)=>{\r\n            return <p>{items.name}</p>\r\n          })\r\n        } */}\r\n        <button type=\"button\" onClick={ExportToExcel}>Export To Excel</button>\r\n      {\r\n            screen != \"edit\" ? <MaterialTable\r\n            title=\"Normal Schools \"\r\n            data={\r\n             state\r\n            }\r\n            columns={columns}\r\n            // onSelectionChange={(rows) => setSelectedRows(rows)}\r\n            options={{\r\n              search: true,\r\n              paging: true,\r\n              filtering: false,\r\n              exportButton: true,\r\n              actionsColumnIndex: 6,\r\n              rowStyle: (x) => {\r\n                if (x.tableData.id % 2) {\r\n                  return { backgroundColor: \"#f9f9f9\" };\r\n                }\r\n              },\r\n              pageSize: 20,\r\n              emptyRowsWhenPaging: true,\r\n              pageSizeOptions: [20, 40, 60],\r\n            }}\r\n            actions={[\r\n              {\r\n                icon: () => (\r\n                  <FontAwesomeIcon icon={faEye} style={{ fontSize: \"1rem\" }} />\r\n                ),\r\n                tooltip: \"View School\",\r\n                title: \"View\",\r\n                onClick: (event, rowData) =>\r\n                  history.push(`normal-school/${rowData.id}`),\r\n              },\r\n              {\r\n                icon: () => (\r\n                  <FontAwesomeIcon icon={faEdit}  style={{ fontSize: \"1rem\" }} />\r\n                ),\r\n                tooltip: \"Edit School\",\r\n                title: \"View\",\r\n                onClick: (event, rowData) =>\r\n                 edit(rowData.id),\r\n              },\r\n            ]}\r\n          />:\r\n          <form  id=\"ev_create_normal_school\">\r\n          <CRow>\r\n            <CCol>\r\n              <CCard>\r\n                <CCardBody>\r\n                  <CRow>\r\n                    <CCol md=\"8\" lg=\"6\" xl=\"8\">\r\n                      <h5>Edit Normal School</h5>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <p className=\"text-muted\">Register a Normal School</p>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel htmlFor=\"validationCustom01\">\r\n                        School Name :\r\n                      </CFormLabel>\r\n    \r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        id=\"req1\"\r\n                        key=\"sname\"\r\n                        placeholder=\"Name of School\"\r\n                        value={school_name}\r\n                        onChange={(e) => {\r\n                          setSchool_name(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(schoolNameErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{schoolNameErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel>User Name :</CFormLabel>\r\n                      <CFormInput\r\n                        key=\"user\"\r\n                        id=\"school_name\"\r\n                        placeholder=\"Unique User Name\"\r\n                        disabled=\"true\"\r\n                        value={userID}\r\n                        onChange={(e) => {\r\n                          setUSerID(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(userIDErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{userIDErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Password :</CFormLabel>\r\n                      <CFormInput\r\n                        key=\"pass\"\r\n                        id=\"\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => {\r\n                          setPassword(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(passwordErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{passwordErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                    <CCol>\r\n                      <CFormLabel> Re-Enter Password :</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"re-pass\"\r\n                        type=\"password\"\r\n                        value={password2}\r\n                        onChange={(e) => {\r\n                          setPassword2(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(password2Err).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{password2Err[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel>Email ID :</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"email\"\r\n                        placeholder=\"School Email ID\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => {\r\n                          setEmail(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(emailErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{emailErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Mobile :</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"mobile\"\r\n                        placeholder=\"Mobile Number\"\r\n                        type=\"number\"\r\n                        value={mobile}\r\n                        onChange={(e) => {\r\n                          setMobile(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(mobileErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{mobileErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> School Address:</CFormLabel>\r\n                      <CFormTextarea\r\n                        id=\"\"\r\n                        key=\"address\"\r\n                        placeholder=\"Address of Your School\"\r\n                        rows=\"1\"\r\n                        value={address}\r\n                        onChange={(e) => {\r\n                          setAddress(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(addressErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{addressErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Pin:</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"pin\"\r\n                        placeholder=\"Pin Code\"\r\n                        type=\"number\"\r\n                        value={pin}\r\n                        onChange={(e) => {\r\n                          setPin(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(pinErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{pinErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Country:</CFormLabel>\r\n                      <CFormSelect\r\n                        key=\"country\"\r\n                        value={countrylist.name}\r\n                        onChange={selectState}\r\n                      >\r\n                        <option>Select the Country</option>\r\n                        {countrylist.map((countrylist) => {\r\n                          return (\r\n                            countrylist.country_code==country_code?\r\n                            <option selected=\"true\" value={countrylist.country_code}>\r\n                              {countrylist.name}\r\n                            </option>: <option  value={countrylist.country_code}>\r\n                              {countrylist.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </CFormSelect>\r\n                      {Object.keys(countryErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{countryErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> State:</CFormLabel>\r\n                      \r\n                      <CFormSelect\r\n                        key=\"state\"\r\n                        value={state_name.name}\r\n                        onChange={(e) => {\r\n                          setStateName(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option disabled>Select the Country First</option>\r\n                        {state_name.map((state_name) => {\r\n                          return (\r\n                            statecode!=\"\" && state_name.state_code==statecode?\r\n\r\n                            <option selected value={state_name.state_code}>\r\n                              {state_name.name}\r\n                            </option>: <option  value={state_name.state_code}>\r\n                              {state_name.name}\r\n                            </option>\r\n                          );\r\n                        })\r\n                        \r\n                        \r\n                        }\r\n                      </CFormSelect>\r\n                      {Object.keys(stateErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{stateErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> City:</CFormLabel>\r\n                    \r\n                      <CFormSelect\r\n                        key=\"city\"\r\n                        value={city.name}\r\n                        onChange={(e) => {\r\n                          setCityName(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option >Select the State First</option>\r\n                        {city.map((city) => {\r\n                          return (\r\n                           citycode!=\"\" && city.name==citycode?\r\n                          <option selected value={city.name}>{city.name}</option>:\r\n                          <option value={city.name}>{city.name}</option>\r\n                          );\r\n                        })}\r\n                      </CFormSelect>\r\n                      {Object.keys(cityErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{cityErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n    \r\n                   \r\n                  </CRow>\r\n                  <CRow>\r\n                    {/*hide part*/}\r\n                    {/* <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Board:</CFormLabel>\r\n                      <CFormSelect key=\"board\" custom name=\"\" id=\"\">\r\n                        <option>Open this select menu</option>\r\n                        <option value=\"Cbse\">CBSE </option>\r\n                        <option value=\"Icse\">ICSE</option>\r\n                        <option value=\"IB\">IB</option>\r\n                        <option value=\"Igcse\">IGCSE</option>\r\n                        <option value=\"State\">STATE BOARD</option>\r\n                      </CFormSelect>\r\n                    </CCol> */}\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel>Website Of School :</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"website\"\r\n                        placeholder=\"Example ==> www.websiteofschool.com\"\r\n                        value={website}\r\n                        onChange={(e) => {\r\n                          setWebsite(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(webErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{webErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    {/* <CCol>\r\n                      <CFormLabel> Chain School List:</CFormLabel>\r\n                      <CFormSelect\r\n                        key=\"chain_schools\"\r\n                        value={chainSchools.school_id}\r\n                        onChange={(e) => {\r\n                          setCahinSchoolId(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select the chain school</option>\r\n                        {chainSchools.map((ch) => {\r\n                          return <option value={ch.school_id}>{ch.name}</option>;\r\n                        })}\r\n                      </CFormSelect>\r\n                    </CCol> */}\r\n                  </CRow>\r\n                  {inputList.map((x, i) => {\r\n                    return (\r\n                      <div className=\"box\">\r\n                        <CRow>\r\n                          {/* <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                            <CFormLabel> Select Class:</CFormLabel>\r\n                            <CFormSelect\r\n                              custom\r\n                              name=\"class_name\"\r\n                              id=\"\"\r\n                              key=\"clas\"\r\n                              value={x.class_name}\r\n                              onChange={(e) => handleInputChange(e, i)}\r\n                            >\r\n                              <option>Open this select menu</option>\r\n                              <option value=\"Nursery\">Nursery </option>\r\n                              <option value=\"LKG\">LKG </option>\r\n                              <option value=\"UKG\">UKG</option>\r\n                              <option value=\"1\">1</option>\r\n                              <option value=\"2\">2</option>\r\n                              <option value=\"3\">3</option>\r\n                              <option value=\"4\">4</option>\r\n                              <option value=\"5\">5</option>\r\n                              <option value=\"6\">6</option>\r\n                              <option value=\"7\">7</option>\r\n                              <option value=\"8\">8</option>\r\n                              <option value=\"9\">9</option>\r\n                              <option value=\"10\">10</option>\r\n                              <option value=\"11\">11</option>\r\n                              <option value=\"12\">12</option>\r\n                            </CFormSelect>\r\n                          </CCol> */}\r\n    {/* hide */}\r\n                          {/* <CCol md=\"5\" lg=\"5\" xl=\"5\">\r\n                            <CFormLabel> Total License Limit :</CFormLabel>\r\n                            <CFormInput\r\n                              key=\"stud\"\r\n                              id=\"total_student\"\r\n                              name=\"total_student\"\r\n                              placeholder=\"\"\r\n                              value={x.total_student}\r\n                              onChange={(e) => handleInputChange(e, i)}\r\n                              type=\"number\"\r\n                            />\r\n                          </CCol> */}\r\n    \r\n                          {/* <CCol>\r\n                            <CFormLabel> </CFormLabel>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <button\r\n                                  className=\"butt\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </button>\r\n                              )}\r\n                              <span> </span>\r\n                              {inputList.length - 1 === i && (\r\n                                <button onClick={handleAddClick}>Add</button>\r\n                              )}\r\n                            </div>\r\n                          </CCol> */}\r\n                        </CRow>\r\n                      </div>\r\n                    );\r\n                  })}\r\n    \r\n                  {/* <CRow>\r\n                    <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n                      <CFormLabel> Total Users</CFormLabel>\r\n                      <CFormInput\r\n                        key=\"tot\"\r\n                        id=\"\"\r\n                        placeholder=\"\"\r\n                        value={total_users}\r\n                        onChange={(e) => {\r\n                          setTotal_users(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(totalErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{totalErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow> */}\r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Academics (From):</CFormLabel>\r\n                      <CFormSelect\r\n                        key=\"acaf\"\r\n                        custom\r\n                        name=\"\"\r\n                        id=\"\"\r\n                        value={academics_from}\r\n                        onChange={(e) => {\r\n                          setAcademics_from(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option>Open this select menu</option>\r\n                        <option value=\"January\">January </option>\r\n                        <option value=\"February\">February</option>\r\n                        <option value=\"March\">March</option>\r\n                        <option value=\"April\">April</option>\r\n                        <option value=\"May\">May</option>\r\n                        <option value=\"June\">June</option>\r\n                        <option value=\"July\">July</option>\r\n                        <option value=\"August\">August</option>\r\n                        <option value=\"September\">September</option>\r\n                        <option value=\"October\">October</option>\r\n                        <option value=\"November\">November</option>\r\n                        <option value=\"December\">December</option>\r\n                      </CFormSelect>\r\n                      {Object.keys(academicStartErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>\r\n                            {academicStartErr[key]}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Academics (To):</CFormLabel>\r\n                      <CFormSelect\r\n                        key=\"acat\"\r\n                        custom\r\n                        name=\"\"\r\n                        id=\"\"\r\n                        value={academics_to}\r\n                        onChange={(e) => {\r\n                          setacademics_to(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option>Open this select menu</option>\r\n                        <option value=\"January\">January </option>\r\n                        <option value=\"February\">February</option>\r\n                        <option value=\"March\">March</option>\r\n                        <option value=\"April\">April</option>\r\n                        <option value=\"May\">May</option>\r\n                        <option value=\"June\">June</option>\r\n                        <option value=\"July\">July</option>\r\n                        <option value=\"August\">August</option>\r\n                        <option value=\"September\">September</option>\r\n                        <option value=\"October\">October</option>\r\n                        <option value=\"November\">November</option>\r\n                        <option value=\"December\">December</option>\r\n                      </CFormSelect>\r\n                      {Object.keys(academicEndErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{academicEndErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> License (Start):</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"lics\"\r\n                        placeholder=\"\"\r\n                        value={license_start}\r\n                        onChange={(e) => {\r\n                          setLicense_start(e.target.value);\r\n                        }}\r\n                        type=\"date\"\r\n                      />\r\n                      {Object.keys(calStartErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{calStartErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> License (End):</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"lice\"\r\n                        placeholder=\"\"\r\n                        value={license_end}\r\n                        onChange={(e) => {\r\n                          setLicense_end(e.target.value);\r\n                        }}\r\n                        type=\"date\"\r\n                      />\r\n                      {Object.keys(calEndErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{calEndErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    {/* <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> License Type:</CFormLabel>\r\n                      <FormControl className={classes.formControl}>\r\n                        <Select\r\n                          key=\"ltype\"\r\n                          labelId=\"demo-mutiple-checkbox-labels\"\r\n                          id=\"demo-mutiple-checkboxs\"\r\n                          variant=\"outlined\"\r\n                          multiple\r\n                          value={classNames}\r\n                          onChange={handleChange}\r\n                          input={<Input />}\r\n                          renderValue={(selected) => selected.join(\", \")}\r\n                          MenuProps={MenuProps}\r\n                        >\r\n                          {classs.map((name) => (\r\n                            <MenuItem key={name} value={name}>\r\n                              <Checkbox checked={classNames.indexOf(name) > -1} />\r\n                              <ListItemText primary={name} />\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </CCol> */}\r\n    \r\n                    {/* <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Upload Logo:</CFormLabel>\r\n                      <CFormInput\r\n                        key=\"logo\"\r\n                        type=\"file\"\r\n                        id=\"\"\r\n                        onChange={handleFileInput}\r\n                      />\r\n                    </CCol> */}\r\n                  </CRow>\r\n                </CCardBody>\r\n    \r\n                <CCardFooter>\r\n                  <CRow>\r\n                    <CCol md={3}>\r\n                      <CButton\r\n                        block\r\n                        //variant=\"outline\"\r\n                        color=\"light\"\r\n                        onClick={() => setScreen(\"\")}\r\n                        style={{ float: \"left\" }}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTimesCircle} /> Cancel\r\n                      </CButton>\r\n    \r\n                      <CModal visible={visible} onDismiss={() => setVisible(false)}>\r\n                        <CModalHeader onDismiss={() => setVisible(false)}>\r\n                          <CModalTitle>Cancel</CModalTitle>\r\n                        </CModalHeader>\r\n    \r\n                        <CModalBody>Do You Want To Cancel ?</CModalBody>\r\n                        <CModalFooter>\r\n                          <CButton color=\"light\" onClick={() => setVisible(false)}>\r\n                            <FontAwesomeIcon icon={faTimesCircle} /> No\r\n                          </CButton>\r\n                          <Link to=\"/\">\r\n                            <CButton color=\"dark\">\r\n                              <FontAwesomeIcon icon={faCheckCircle} /> Yes\r\n                            </CButton>\r\n                          </Link>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n    \r\n                      <CButton\r\n                        color=\"dark\"\r\n                        type=\"submit\"\r\n                        style={{ marginLeft: \"15px\" }}\r\n                        // disabled={\r\n                        //   !school_name ||\r\n                        //   !userID ||\r\n                        //   !email ||\r\n                        //   !password ||\r\n                        //   !mobile ||\r\n                        //   !address ||\r\n                        //   !pin ||\r\n                        //   !total_users ||\r\n                        //   !academics_from ||\r\n                        //   !academics_to ||\r\n                        //   !license_start ||\r\n                        //   !license_end\r\n                        // }\r\n                        // onClick={() => handleUpload(selectedFile)}\r\n                        onClick={testing}\r\n                      >\r\n                        <FontAwesomeIcon icon={faSave} /> Save\r\n                      </CButton>\r\n                      {/* <button type=\"button\" onClick={testing}></button> */}\r\n                    </CCol>\r\n                  </CRow>\r\n                </CCardFooter>\r\n              </CCard>\r\n            </CCol>\r\n          </CRow>\r\n        </form>\r\n          }\r\n       \r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n}\r\n\r\nexport default ManageSchool;\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export function isArray(data) {\n    return Object.prototype.toString.call(data) === '[object Array]';\n}\nexport function assert(condition, msg) {\n    if (!condition)\n        throw new Error(msg);\n}\nexport function getValues(data) {\n    return Object.keys(data).map(function (key) { return data[key]; });\n}\nexport function getKeys(data) {\n    return Object.keys(data);\n}\nexport function getEntries(data) {\n    return Object.keys(data).map(function (key) { return [key, data[key]]; });\n}\nexport function normalizeFileName(fileName, extension, fileNameFormatter) {\n    var suffix = '.' + extension;\n    var extensionPattern = new RegExp(\"(\\\\\".concat(extension, \")?$\"));\n    return fileNameFormatter(fileName).replace(extensionPattern, suffix);\n}\nexport function normalizeXMLName(name) {\n    '555xmlHello .  world!'.trim().replace(/^([0-9,;]|(xml))+/, '');\n    return name.replace(/[^_a-zA-Z 0-9:\\-\\.]/g, '').replace(/^([ 0-9-:\\-\\.]|(xml))+/i, '').replace(/ +/g, '-');\n}\nexport function indent(spaces) {\n    return Array(spaces + 1).join(' ');\n}\nexport function stripHTML(text) {\n    return text.replace(/([<>&])/g, function (_, $1) {\n        switch ($1) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return '';\n        }\n    });\n}\n","export function generateDataURI(content, type, byBlob) {\n    switch (type) {\n        case 'txt': {\n            var blobType = 'text/plain;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'css': {\n            var blobType = 'text/css;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'html': {\n            var blobType = 'text/html;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'json': {\n            var blobType = 'text/json;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'csv': {\n            var blobType = 'text/csv;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'xls': {\n            var blobType = 'text/application/vnd.ms-excel;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'xml': {\n            var blobType = 'text/application/xml;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        default: {\n            return '';\n        }\n    }\n}\nexport function downloadFile(content, type, fileName, byBlob) {\n    if (fileName === void 0) { fileName = 'download'; }\n    if (byBlob === void 0) { byBlob = true; }\n    var dataURI = generateDataURI(content, type, byBlob);\n    var anchor = document.createElement('a');\n    anchor.href = dataURI;\n    anchor.download = fileName;\n    anchor.setAttribute('style', 'visibility:hidden');\n    document.body.appendChild(anchor);\n    anchor.dispatchEvent(new MouseEvent('click', {\n        bubbles: false,\n        cancelable: false,\n        view: window,\n    }));\n    document.body.removeChild(anchor);\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { isArray, getEntries, normalizeXMLName, indent, stripHTML, assert, getKeys } from './utils';\nexport function _createFieldsMapper(fields) {\n    if (!fields\n        || isArray(fields) && !fields.length\n        || !isArray(fields) && !getKeys(fields).length)\n        return function (item) { return item; };\n    var mapper = isArray(fields)\n        ? fields.reduce(function (map, key) {\n            var _a;\n            return (__assign(__assign({}, map), (_a = {}, _a[key] = key, _a)));\n        }, Object.create(null))\n        : fields;\n    return function (item) {\n        if (isArray(item)) {\n            return item\n                .map(function (i) { return getEntries(i).reduce(function (map, _a) {\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                if (key in mapper) {\n                    map[mapper[key]] = value;\n                }\n                return map;\n            }, Object.create(null)); })\n                .filter(function (i) { return getKeys(i).length; });\n        }\n        return getEntries(item).reduce(function (map, _a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            if (key in mapper) {\n                map[mapper[key]] = value;\n            }\n            return map;\n        }, Object.create(null));\n    };\n}\nexport function _prepareData(data) {\n    var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide a valid JSON';\n    try {\n        return (typeof data === 'string' ? JSON.parse(data) : data);\n    }\n    catch (_a) {\n        throw new Error(MESSAGE_VALID_JSON_FAIL);\n    }\n}\nexport function _createJSONData(data, replacer, space) {\n    if (replacer === void 0) { replacer = null; }\n    var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide valid JSON object';\n    try {\n        return JSON.stringify(data, replacer, space);\n    }\n    catch (_a) {\n        throw new Error(MESSAGE_VALID_JSON_FAIL);\n    }\n}\nexport function _createTableMap(data) {\n    return data.map(getEntries).reduce(function (tMap, rowKVs, rowIndex) {\n        return rowKVs.reduce(function (map, _a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            var columnValues = map[key] || Array.from({ length: data.length }).map(function (_) { return ''; });\n            columnValues[rowIndex] =\n                (typeof value !== 'string' ? JSON.stringify(value) : value) || '';\n            map[key] = columnValues;\n            return map;\n        }, tMap);\n    }, Object.create(null));\n}\nexport function _createTableEntries(tableMap, beforeTableEncode) {\n    if (beforeTableEncode === void 0) { beforeTableEncode = function (i) { return i; }; }\n    return beforeTableEncode(getEntries(tableMap).map(function (_a) {\n        var _b = __read(_a, 2), fieldName = _b[0], fieldValues = _b[1];\n        return ({\n            fieldName: fieldName,\n            fieldValues: fieldValues,\n        });\n    }));\n}\nexport function createCSVData(data, delimiter, beforeTableEncode) {\n    if (delimiter === void 0) { delimiter = ','; }\n    if (beforeTableEncode === void 0) { beforeTableEncode = function (i) { return i; }; }\n    if (!data.length)\n        return '';\n    var tableMap = _createTableMap(data);\n    var tableEntries = _createTableEntries(tableMap, beforeTableEncode);\n    var head = tableEntries.map(function (_a) {\n        var fieldName = _a.fieldName;\n        return fieldName;\n    })\n        .join(delimiter) + '\\r\\n';\n    var columns = tableEntries.map(function (_a) {\n        var fieldValues = _a.fieldValues;\n        return fieldValues;\n    })\n        .map(function (column) { return column.map(function (value) { return \"\\\"\".concat(value.replace(/\\\"/g, '\"\"'), \"\\\"\"); }); });\n    var rows = columns.reduce(function (mergedColumn, column) { return mergedColumn.map(function (value, rowIndex) { return \"\".concat(value).concat(delimiter).concat(column[rowIndex]); }); });\n    return head + rows.join('\\r\\n');\n}\nexport function _renderTableHTMLText(data, beforeTableEncode) {\n    assert(data.length > 0);\n    var tableMap = _createTableMap(data);\n    var tableEntries = _createTableEntries(tableMap, beforeTableEncode);\n    var head = tableEntries.map(function (_a) {\n        var fieldName = _a.fieldName;\n        return fieldName;\n    })\n        .join('</b></th><th><b>');\n    var columns = tableEntries.map(function (_a) {\n        var fieldValues = _a.fieldValues;\n        return fieldValues;\n    })\n        .map(function (column) { return column.map(function (value) { return \"<td>\".concat(value, \"</td>\"); }); });\n    var rows = columns.reduce(function (mergedColumn, column) { return mergedColumn\n        .map(function (value, rowIndex) { return \"\".concat(value).concat(column[rowIndex]); }); });\n    return \"\\n    <table>\\n      <thead>\\n        <tr><th><b>\".concat(head, \"</b></th></tr>\\n      </thead>\\n      <tbody>\\n        <tr>\").concat(rows.join(\"</tr>\\n        <tr>\"), \"</tr>\\n      </tbody>\\n    </table>\\n  \");\n}\nexport function createXLSData(data, beforeTableEncode) {\n    if (beforeTableEncode === void 0) { beforeTableEncode = function (i) { return i; }; }\n    if (!data.length)\n        return '';\n    var content = \"<html>\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n  </head >\\n  <body>\\n    \".concat(_renderTableHTMLText(data, beforeTableEncode), \"\\n  </body>\\n</html >\\n\");\n    return content;\n}\nexport function createXMLData(data) {\n    var content = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><!DOCTYPE base>\\n\".concat(_renderXML(data, 'base'), \"\\n\");\n    return content;\n}\nfunction _renderXML(data, tagName, arrayElementTag, spaces) {\n    if (arrayElementTag === void 0) { arrayElementTag = 'element'; }\n    if (spaces === void 0) { spaces = 0; }\n    var tag = normalizeXMLName(tagName);\n    var indentSpaces = indent(spaces);\n    if (data === null || data === undefined) {\n        return \"\".concat(indentSpaces, \"<\").concat(tag, \" />\");\n    }\n    var content = isArray(data)\n        ? data.map(function (item) { return _renderXML(item, arrayElementTag, arrayElementTag, spaces + 2); }).join('\\n')\n        : typeof data === 'object'\n            ? getEntries(data)\n                .map(function (_a) {\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                return _renderXML(value, key, arrayElementTag, spaces + 2);\n            }).join('\\n')\n            : indentSpaces + '  ' + stripHTML(String(data));\n    var contentWithWrapper = \"\".concat(indentSpaces, \"<\").concat(tag, \">\\n\").concat(content, \"\\n\").concat(indentSpaces, \"</\").concat(tag, \">\");\n    return contentWithWrapper;\n}\n","import { assert, isArray, normalizeFileName } from './utils';\nimport { downloadFile } from './processors';\nimport { _prepareData, _createJSONData, createCSVData, createXLSData, createXMLData, _createFieldsMapper } from './converters';\nfunction exportFromJSON(_a) {\n    var data = _a.data, _b = _a.fileName, fileName = _b === void 0 ? 'download' : _b, extension = _a.extension, _c = _a.fileNameFormatter, fileNameFormatter = _c === void 0 ? function (name) { return name.replace(/\\s+/, '_'); } : _c, fields = _a.fields, _d = _a.exportType, exportType = _d === void 0 ? 'txt' : _d, _e = _a.replacer, replacer = _e === void 0 ? null : _e, _f = _a.space, space = _f === void 0 ? 4 : _f, _g = _a.processor, processor = _g === void 0 ? downloadFile : _g, _h = _a.withBOM, withBOM = _h === void 0 ? false : _h, _j = _a.delimiter, delimiter = _j === void 0 ? ',' : _j, _k = _a.beforeTableEncode, beforeTableEncode = _k === void 0 ? function (i) { return i; } : _k;\n    var MESSAGE_IS_ARRAY_FAIL = 'Invalid export data. Please provide an array of objects';\n    var MESSAGE_UNKNOWN_EXPORT_TYPE = \"Can't export unknown data type \".concat(exportType, \".\");\n    var MESSAGE_FIELD_INVALID = \"Can't export string data to \".concat(exportType, \".\");\n    if (typeof data === 'string') {\n        switch (exportType) {\n            case 'txt':\n            case 'css':\n            case 'html': {\n                return processor(data, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : exportType, fileNameFormatter));\n            }\n            default:\n                throw new Error(MESSAGE_FIELD_INVALID);\n        }\n    }\n    var fieldsMapper = _createFieldsMapper(fields);\n    var safeData = fieldsMapper(_prepareData(data));\n    var JSONData = _createJSONData(safeData, replacer, space);\n    switch (exportType) {\n        case 'txt':\n        case 'css':\n        case 'html': {\n            return processor(JSONData, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : exportType, fileNameFormatter));\n        }\n        case 'json': {\n            return processor(JSONData, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'json', fileNameFormatter));\n        }\n        case 'csv': {\n            assert(isArray(safeData), MESSAGE_IS_ARRAY_FAIL);\n            var BOM = '\\ufeff';\n            var CSVData = createCSVData(safeData, delimiter, beforeTableEncode);\n            var content = withBOM ? BOM + CSVData : CSVData;\n            return processor(content, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'csv', fileNameFormatter));\n        }\n        case 'xls': {\n            assert(isArray(safeData), MESSAGE_IS_ARRAY_FAIL);\n            var content = createXLSData(safeData, beforeTableEncode);\n            return processor(content, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'xls', fileNameFormatter));\n        }\n        case 'xml': {\n            var content = createXMLData(safeData);\n            return processor(content, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'xml', fileNameFormatter));\n        }\n        default:\n            throw new Error(MESSAGE_UNKNOWN_EXPORT_TYPE);\n    }\n}\n(function (exportFromJSON) {\n    exportFromJSON.types = {\n        txt: 'txt',\n        css: 'css',\n        html: 'html',\n        json: 'json',\n        csv: 'csv',\n        xls: 'xls',\n        xml: 'xml',\n    };\n    exportFromJSON.processors = { downloadFile: downloadFile };\n})(exportFromJSON || (exportFromJSON = {}));\nexport default exportFromJSON;\n","import exportFromJSON from './exportFromJSON';\nexport default exportFromJSON;\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction EditSchoolDashboard() {\r\n \r\n  return (\r\n    <>\r\n    ghfgh\r\n    </>\r\n  );\r\n}\r\nexport default EditSchoolDashboard;"],"sourceRoot":""}