{"version":3,"sources":["views/ev_super_admin/school_management/user-management/get-users.js","helpers/notify.js","helpers/edu_axios.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","input","display","formControl","minWidth","maxWidth","chips","flexWrap","chip","noLabel","marginTop","UserManagement","props","school_id","match","params","useState","setState_name","country_code","setCity","stateName","React","setCountryList","setChainSchools","ClassName","setClassName","SectionName","setSectionName","default_role","setdefault_role","useEffect","EDU_AXIOS","post","process","then","response","console","log","data","setItems","catch","error","get","countryArray","resp","stateArray","respo","cityArray","class_name","total_student","items","href","className","onChange","event","target","value","onClick","border","class","scope","map","d","FirstName","LastName","username","toast","require","module","exports","type","message","info","success","warn","dark","notify","axios","default","token","localStorage","getItem","JSON","parse","create","timeout","headers","authorization","interceptors","use","status","removeItem","window","location"],"mappings":"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","file":"static/js/31.393c4b08.chunk.js","sourcesContent":["// Created By : Sujay\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as XLSX from \"xlsx\";\r\nimport Axios from \"axios\";\r\nimport { uploadFile } from \"react-s3\";\r\nimport EDU_AXIOS from \"src/helpers/edu_axios\";\r\nimport exportFromJSON from 'export-from-json'  ;\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCol,\r\n  CFormInput,\r\n  CRow,\r\n  CFormLabel,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CFormTextarea,\r\n} from \"@coreui/react-pro\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  faSave,\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport axios from \"axios\";\r\n\r\nconst config = {\r\n  bucketName: process.env.REACT_APP_BUCKET_NAME,\r\n  dirName: process.env.REACT_APP_SCHOOL_LOGO_DIR_NAME,\r\n  region: process.env.REACT_APP_REGION,\r\n  accessKeyId: process.env.REACT_APP_ACCESS_ID,\r\n  secretAccessKey: process.env.REACT_APP_ACCESS_KEY,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst classs = [\"SMS\", \"LMS\", \"Video Conferencing\", \"Demo\"];\r\nconst data = [\r\n  \r\n  {\r\n    FirstName:\"\",\r\n    LastName:\"\",\r\n    Gender:\"\",\r\n    DOB:\"\",\r\n    ClassName:\"\",\r\n    SectionName:\"\",\r\n    AdmissionNo:\"\",\r\n    ParentFirstName:\"\",\r\n    ParentLastName:\"\",\r\n    ParentEmail:\"\",\r\n    ParentMobileNumber:\"\",\r\n    ParentGender:\"\",\r\n    username:\"\"\r\n    \r\n}\r\n] \r\nconst UserManagement = (props) => {\r\n  \r\n  // set form values\r\n let school_id= props.match.params.school_id;\r\n  const classes = useStyles();\r\n  const [userID, setUSerID] = useState(\"\");\r\n  const [school_name, setSchool_name] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [pin, setPin] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(\"\");\r\n  const [academics_from, setAcademics_from] = useState(\"\");\r\n  const [academics_to, setacademics_to] = useState(\"\");\r\n  const [license_start, setLicense_start] = useState(\"\");\r\n  const [license_end, setLicense_end] = useState(\"\");\r\n  const [total_users, setTotal_users] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [state_name, setState_name] = useState([]);\r\n  const [country_code, setCountry_code] = useState();\r\n  const [city, setCity] = useState([]);\r\n  const [stateName, setStateName] = useState();\r\n  const [cityName, setCityName] = useState();\r\n  const [visible, setVisible] = useState(false);\r\n  const [classNames, setClassNames] = React.useState([]);\r\n  const [countrylist, setCountryList] = useState([]);\r\n  const [chainSchools, setChainSchools] = useState([]);\r\n  const [chainSchoolId, setCahinSchoolId] = useState(\"\");\r\n  const [logoName, setLogoName] = useState(\"\");\r\n\r\n  const [ClassName,setClassName]=useState(\"\");\r\n  const [SectionName,setSectionName]=useState(\"\");\r\n  const [default_role,setdefault_role]=useState(\"\");\r\n  // Defining Errors\r\n  const [userIDErr, setUserIDErr] = useState({});\r\n  const [schoolNameErr, setSchoolNameErr] = useState({});\r\n  const [pinErr, setPinErr] = useState({});\r\n  const [stateErr, setStateErr] = useState({});\r\n  const [cityErr, setCityErr] = useState({});\r\n  const [countryErr, setCountryErr] = useState({});\r\n  const [addressErr, setAddressErr] = useState({});\r\n  const [webErr, setWebErr] = useState({});\r\n  const [emailErr, setEmailErr] = useState({});\r\n  const [mobileErr, setMobileErr] = useState({});\r\n  const [passwordErr, setPasswordErr] = useState({});\r\n  const [password2Err, setPassword2Err] = useState({});\r\n  const [calStartErr, setCalStartErr] = useState({});\r\n  const [calEndErr, setCalEndErr] = useState({});\r\n  const [academicStartErr, setacAdemicStartErr] = useState({});\r\n  const [academicEndErr, setAcademicEndErr] = useState({});\r\n  const [totalErr, setTotalErr] = useState(\"\");\r\n  const [uploadingmessage, setUploadingmessage] = useState(\"\");\r\n\r\n\r\n  const search = () =>{\r\n    EDU_AXIOS.post(`${process.env.REACT_APP_API_PATH}/auth/get-users/${school_id}`,{\r\n      ClassName:ClassName,\r\n      SectionName:SectionName,\r\n      default_role:default_role\r\n    })\r\n      .then((response) => {\r\n      console.log(response.data.data);\r\n      setItems(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  const uploadexcel = async() =>{\r\n    // alert('ok')\r\n   // console.log(items);\r\n  const itemss=items;\r\n  \r\n  // for(var i=0;i<itemss.length;i++){\r\n  //   itemss[i].school_id=\"123456\"\r\n  // }\r\n  console.log(itemss);\r\n  for(var i=0;i<itemss.length; i++)\r\n  {\r\n    var letters = /^[A-Za-z]+$/;\r\n    if(itemss[i].FirstName.match(letters) && (itemss[i].FirstName) && (itemss[i].ClassName) &&  (itemss[i].SectionName) && (itemss[i].ParentFirstName) && itemss[i].ParentFirstName.match(letters) && !isNaN(itemss[i].ParentMobileNumber) && (itemss[i].ParentMobileNumber).length==10 )\r\n    {\r\n      // alert(\"ok\");\r\n     \r\n      itemss[i].username=itemss[i].FirstName.substring(0,4).concat(itemss[i].ParentMobileNumber.slice(-5));\r\n\r\n    }\r\n    else{\r\n      // alert(\"not ok at \"+i)\r\n   \r\n   itemss[i].FirstName=\"\";\r\n   itemss[i].LastName=\"\";\r\n   itemss[i].AdmissionNo=\"\";\r\n   itemss[i].ParentEmail=\"\";\r\n   itemss[i].ParentLastName=\"\";\r\n   itemss[i].ParentMobileNumber=\"\";\r\n   itemss[i].ParentGender=\"\";\r\n   itemss[i].Gender=\"\";\r\n   itemss[i].DOB=\"\";\r\n   itemss[i].ParentFirstName=\"\";\r\n   itemss[i].ClassName=\"\";\r\n   itemss[i].SectionName=\"\";\r\n   itemss[i].username=\"\";\r\n    }\r\n\r\n//itemss[i].username=itemss[i].FirstName.substring(0,4).concat(itemss[i].ParentMobileNumber.slice(-5));\r\n  }\r\n \r\n  setItems(itemss);\r\n      return await EDU_AXIOS.post(`${process.env.REACT_APP_API_PATH}/auth/create-student/${school_id}`,itemss) .then(res => {\r\n        console.log(\"after !!!!\")\r\n        console.log(res.data);\r\n        if(res.data.message!=\"student has been created\"){\r\n        setTotalErr(res.data.message);\r\n      //  alert(res.data.message);\r\n        }\r\n        else{\r\n          setUploadingmessage(\"student has been created\")\r\n        }\r\n       \r\n      }).catch(err => {\r\n        console.log(err)\r\n      });\r\n  }\r\n  const setvalue = (val)=>{\r\n  //  alert(val);\r\n    setClassName(val);\r\n   // alert(ClassName);\r\n  }\r\n  // to get users list from server\r\n  useEffect(() => {\r\n    EDU_AXIOS.post(`${process.env.REACT_APP_API_PATH}/auth/get-users/${school_id}`,{\r\n      ClassName:ClassName,\r\n      SectionName:SectionName,\r\n      default_role:default_role\r\n    })\r\n      .then((response) => {\r\n      console.log(response.data.data);\r\n      setItems(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  // to get country list from server\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(process.env.REACT_APP_API_PATH + \"/auth/get-countries\")\r\n      .then((response) => {\r\n        let countryArray = response.data.data;\r\n        setCountryList(countryArray);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // to get chain school list from server\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(\r\n      process.env.REACT_APP_API_PATH + \"/auth/get-chain-school-list\"\r\n    )\r\n      .then((response) => {\r\n        setChainSchools(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // set country code before calling state list api\r\n  const selectState = (e) => {\r\n    var countryCode = e.target.value;\r\n    setCountry_code(countryCode);\r\n  };\r\n\r\n  // get states by country code\r\n  useEffect(() => {\r\n    // check country code is set or not\r\n    if (country_code) {\r\n      EDU_AXIOS.get(\r\n        process.env.REACT_APP_API_PATH + `/auth/get-states/${country_code}`\r\n      )\r\n        .then((resp) => {\r\n          let stateArray = resp.data.data;\r\n          setState_name(stateArray);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [country_code]);\r\n\r\n  // get cities of a state\r\n  useEffect(() => {\r\n    // check coundry code and state name is set or not\r\n    if (stateName) {\r\n      EDU_AXIOS.get(\r\n        process.env.REACT_APP_API_PATH +\r\n          `/auth/get-cities/${country_code}/${stateName}`\r\n      )\r\n        //EDU_AXIOS.get(cityURL)\r\n        .then((respo) => {\r\n          let cityArray = respo.data.data;\r\n\r\n          setCity(cityArray);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [stateName]);\r\n\r\n  const handleChange = (event) => {\r\n    setClassNames(event.target.value);\r\n  };\r\n\r\n  const [inputList, setInputList] = useState([\r\n    { class_name: \"\", total_student: \"\" },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n    // console.log(inputList,\"B\");\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { class_name: \"\", total_student: \"\" }]);\r\n  };\r\n\r\n  // get a file to upload\r\n  const handleFileInput = (e) => {\r\n    setLogoName(e.target.files[0].name);\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n  // upload selected file to s3 bucket\r\n  const handleUpload = async (file) => {\r\n    uploadFile(file, config)\r\n      .then((data) => console.log(data, \"Logo uploaded successfully\"))\r\n      .catch((err) => console.error(err, \"\"));\r\n  };\r\n\r\n  // const [validated, setValidated] = useState(false);\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const isValid = await formValidation();\r\n    // check form is valid or not\r\n    if (isValid) {\r\n      return await EDU_AXIOS.post(\r\n        process.env.REACT_APP_API_PATH + \"/auth/create-normal-school\",\r\n        {\r\n          name: school_name,\r\n          username: userID,\r\n          password: password,\r\n          email: email,\r\n          mobile: mobile,\r\n          address: address,\r\n          pin_code: pin,\r\n          state: stateName,\r\n          city: cityName,\r\n          website: website,\r\n          acadmics_from: academics_from,\r\n          acadmics_to: academics_to,\r\n          license_start: license_start,\r\n          license_end: license_end,\r\n          classes: inputList,\r\n          total_users: total_users,\r\n          license_type: classNames,\r\n          logo: logoName,\r\n          chain_school_id: chainSchoolId,\r\n        }\r\n      )\r\n        .then(async (res) => {\r\n          e.target.reset();\r\n        //  alert(res.data.message);\r\n        })\r\n        .catch((err) => {\r\n       //   alert(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const formValidation = async () => {\r\n    const userIDErr = {};\r\n    const schoolNameErr = {};\r\n    const pinErr = {};\r\n    const webErr = {};\r\n    const emailErr = {};\r\n    const mobileErr = {};\r\n    const passwordErr = {};\r\n    const password2Err = {};\r\n    const stateErr = {};\r\n    const cityErr = {};\r\n    const countryErr = {};\r\n    const addressErr = {};\r\n    const calStartErr = {};\r\n    const calEndErr = {};\r\n    const academicStartErr = {};\r\n    const academicEndErr = {};\r\n    const totalErr = {};\r\n\r\n    let isValid = true;\r\n    // Validations for different fields\r\n\r\n    if (!userID.trim()) {\r\n      userIDErr.UserIDrequired = \"Required\";\r\n    } else if (/[^a-zA-Z0-9_.]/.test(userID) || userID.trim().length < 6) {\r\n      userIDErr.UserIDinvalid =\r\n        \"UserID is Invalid (@ , # not supported) / < 6 Digits\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!license_start.trim()) {\r\n      calStartErr.calShort = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!license_end.trim()) {\r\n      calEndErr.cal = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!academics_from.trim()) {\r\n      academicStartErr.start = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!academics_to.trim()) {\r\n      academicEndErr.end = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!total_users.trim()) {\r\n      totalErr.total = \" Required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!school_name.trim()) {\r\n      schoolNameErr.schoolNameShort = \" Required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!pin.trim()) {\r\n      pinErr.pinreq = \" Required\";\r\n      isValid = false;\r\n    } else if (!/[123456789][0-9]{5}/.test(pin) || pin.trim().length > 6) {\r\n      pinErr.pinshort = \"PIN should be 6 Digits only / PIN Can't Start with 0\";\r\n      isValid = false;\r\n    }\r\n    if (!address.trim()) {\r\n      addressErr.addressShort = \" Required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!email.trim()) {\r\n      emailErr.emailrequired = \"Required\";\r\n      isValid = false;\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      emailErr.emailinvalid = \"Email address is invalid\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!mobile.trim()) {\r\n      mobileErr.mobreq = \" Required\";\r\n      isValid = false;\r\n    } else if (mobile.trim().length > 10 || !/[6789][0-9]{9}/.test(mobile)) {\r\n      mobileErr.mobshort = \"Mobile number must be Valid & of 10 Digits Only\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!password.trim()) {\r\n      passwordErr.passreq = \" Required\";\r\n      isValid = false;\r\n    } else if (password.trim().length < 6 || password.trim().length > 20) {\r\n      passwordErr.passshort = \"Invalid / < 6 Digits\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!password2.trim()) {\r\n      passwordErr.pass2req = \" \";\r\n      isValid = false;\r\n    } else if (password2 !== password) {\r\n      password2Err.pass2short = \"Doesn't Match \";\r\n      isValid = false;\r\n    }\r\n    // setting errors in validation\r\n    setUserIDErr(userIDErr);\r\n    setSchoolNameErr(schoolNameErr);\r\n    setPinErr(pinErr);\r\n    setWebErr(webErr);\r\n    setEmailErr(emailErr);\r\n    setMobileErr(mobileErr);\r\n    setPasswordErr(passwordErr);\r\n    setPassword2Err(password2Err);\r\n    setCityErr(cityErr);\r\n    setStateErr(stateErr);\r\n    setCountryErr(countryErr);\r\n    setAddressErr(addressErr);\r\n    setCalStartErr(calStartErr);\r\n    setCalEndErr(calEndErr);\r\n    setacAdemicStartErr(academicStartErr);\r\n    setAcademicEndErr(academicEndErr);\r\n    setTotalErr(totalErr);\r\n    return isValid;\r\n  };\r\n  const [items, setItems] = useState([]);\r\n  const fileName = 'download'  \r\nconst exportType = 'xls'\r\n const  ExportToExcel = () => {  \r\n    exportFromJSON({ data, fileName, exportType })  \r\n  } \r\n  const readExcel = (file) => {\r\n    const yourToken=JSON.parse(localStorage.getItem(\"user\")).token;\r\n    const promise = new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(file);\r\n\r\n      fileReader.onload = (e) => {\r\n        const bufferArray = e.target.result;\r\n\r\n        const wb = XLSX.read(bufferArray, { type: 'binary', cellDates: true, dateNF: 'mm/dd/yyyy;' });\r\n\r\n        const wsname = wb.SheetNames[1];\r\n\r\n        const ws = wb.Sheets[wsname];\r\n\r\n        const data = XLSX.utils.sheet_to_json(ws,{\r\n          raw: false,\r\n        });\r\n\r\n        resolve(data);\r\n      };\r\n\r\n      fileReader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n\r\n    promise.then(async(d) => {\r\n      setItems(d);\r\n      // console.log(d);\r\n      console.log(yourToken);\r\n    //   let header= {\r\n    //     headers: {'Authorization': \"Bearer \" + yourToken}\r\n    // };\r\n    \r\n    //   return await Axios.post(process.env.REACT_APP_API_PATH + \"/auth/create-student/\",d,header) .then(res => {\r\n    //     console.log(res)\r\n    //   }).catch(err => {\r\n    //     console.log(err)\r\n    //   });;\r\n  // console.log(request);\r\n    });\r\n  };\r\n  return (\r\n    //  School Creation Form\r\n   \r\n    <div>\r\n      \r\n   <h1>Users List</h1><hr></hr>\r\n{/* <h1>{totalErr}</h1> */}\r\n<a   href={`/#/school-management/user-management/${school_id}`} className=\"btn btn-success\">BULK UPLOAD</a>\r\n<br></br>\r\n<label>Default Role:</label>\r\n<select onChange={(event)=>setdefault_role(event.target.value)}>\r\n  <option value=\"\">PLEASE SELECT ANY OPTION</option>\r\n  <option value=\"student\" >Student</option>\r\n  <option value=\"teacher\">Teacher</option>\r\n</select>\r\n\r\n\r\n{\r\n  default_role!=\"\"?\r\n  <>\r\n  <label>ClassName:</label>\r\n  <select onChange={(event)=>setClassName(event.target.value)}>\r\n    <option value=\"\">pLEASE SELECT ANY OPTION</option>\r\n    <option value=\"LKG\" >LKG</option>\r\n    <option value=\"UKG\">UKG</option>\r\n  </select>\r\n  </>\r\n  :\"\"\r\n}\r\n{\r\n  ClassName!=\"\"?\r\n  <>\r\n  <label>Section Name:</label>\r\n  <select onChange={(event)=>setSectionName(event.target.value)}>\r\n    <option value=\"\">pLEASE SELECT ANY OPTION</option>\r\n    <option value=\"A\" >A</option>\r\n    <option value=\"B\">B</option>\r\n  </select>\r\n  </>\r\n  :\"\"\r\n}\r\n<button onClick={search}>SEARCH</button>\r\n{\r\n  default_role!=\"\"?\r\n  <>\r\n  <table border=\"1\" class=\"table container\">\r\n  <thead>\r\n   \r\n        <tr>\r\n        <th scope=\"col\">First Name</th>\r\n        <th scope=\"col\">Last Name</th>\r\n      \r\n        <th scope=\"col\">Class Name</th>\r\n        <th scope=\"col\">Section Name</th>\r\n       \r\n        <th scope=\"col\">username</th>\r\n      </tr>\r\n      \r\n   \r\n\r\n  </thead>\r\n  <tbody> \r\n    {\r\n   items.map((d) => (\r\n       <tr >\r\n        <th>{d.FirstName}</th>\r\n        <th>{d.LastName}</th>\r\n       \r\n        <th>{d.ClassName}</th>\r\n        <th>{d.SectionName}</th>\r\n     \r\n        <th>{d.username}</th>\r\n        {/* <td>{d.yearofbatch}</td>\r\n        <td>{d.college_id}</td>\r\n         <td>{d.skills}</td> */}\r\n       </tr>\r\n           )) \r\n     }\r\n   </tbody>\r\n</table>\r\n</>: \r\n <table border=\"1\" class=\"table container\">\r\n  <thead>\r\n   \r\n        <tr>\r\n        <th scope=\"col\">First Name</th>\r\n        <th scope=\"col\">Last Name</th>\r\n      \r\n      \r\n       \r\n        <th scope=\"col\">username</th>\r\n        <th scope=\"col\">role</th>\r\n      </tr>\r\n      \r\n   \r\n\r\n  </thead>\r\n  <tbody> \r\n    {\r\n   items.map((d) => (\r\n       <tr >\r\n        <th>{d.FirstName}</th>\r\n        <th>{d.LastName}</th>\r\n       \r\n     \r\n     \r\n        <th>{d.username}</th>\r\n        <th>{d.default_role==\"subject_teacher\"?\"Subject Teacher\":\"Student\"}</th>\r\n        {/* <td>{d.yearofbatch}</td>\r\n        <td>{d.college_id}</td>\r\n         <td>{d.skills}</td> */}\r\n       </tr>\r\n           )) \r\n     }\r\n   </tbody>\r\n</table>\r\n}\r\n  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagement;\r\n","let { toast } = require(\"react-toastify\");\r\n\r\nconst notify = (type, message) => {\r\n  switch (type) {\r\n    case \"info\":\r\n      toast.info(message);\r\n      break;\r\n    case \"success\":\r\n      toast.success(message);\r\n      break;\r\n    case \"warning\":\r\n      toast.warn(message);\r\n      break;\r\n    case \"error\":\r\n      toast.error(message);\r\n      break;\r\n    case \"dark\":\r\n      toast.dark(message);\r\n      break;\r\n    default:\r\n      toast(message);\r\n  }\r\n};\r\n\r\nmodule.exports = notify;\r\n","const notify = require(\"./notify\");\r\nconst axios = require(\"axios\").default;\r\nlet EDU_AXIOS;\r\nlet token = \"\";\r\n// to set authorization header on test mode\r\nlet user = localStorage.getItem(\"user\");\r\nif (user) {\r\n  token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"production\") {\r\n  EDU_AXIOS = axios.create({\r\n    timeout: 6000,\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        notify(\"error\", error.response.message);\r\n      } else {\r\n        notify(\"error\", error.response.message);\r\n      }\r\n    }\r\n  );\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"test\") {\r\n  if (token == \"\") {\r\n    console.log(\"there isno token\");\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  } else {\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        console.log(error.response.data.message);\r\n        notify(\"error\", error.response.data.message);\r\n      } else {\r\n        notify(\"error\", error.response.data.message);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nmodule.exports = EDU_AXIOS;\r\n"],"sourceRoot":""}