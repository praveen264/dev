{"version":3,"sources":["../node_modules/tiny-warning/dist/tiny-warning.esm.js","views/ev_super_admin/school_management/edit_school_dashboard.js","views/ev_super_admin/school_management/all-normal-schools/all-normal-schools.js","helpers/notify.js","helpers/edu_axios.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/export-from-json/dist/esm/utils.js","../node_modules/export-from-json/dist/esm/processors.js","../node_modules/export-from-json/dist/esm/converters.js","../node_modules/export-from-json/dist/esm/exportFromJSON.js","../node_modules/export-from-json/dist/esm/index.js"],"names":["warning","condition","message","EditSchoolDashboard","config","bucketName","process","dirName","region","accessKeyId","secretAccessKey","useStyles","makeStyles","theme","root","margin","spacing","input","display","formControl","minWidth","maxWidth","chips","flexWrap","chip","noLabel","marginTop","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","classs","ManageSchool","useState","state","setstate","screen","setScreen","schoolId","setSchoolId","EDU_AXIOS","get","then","resp","data","classes","userID","setUSerID","school_name","setSchool_name","address","setAddress","pin","setPin","website","setWebsite","email","setEmail","mobile","setMobile","setSelectedFile","academics_from","setAcademics_from","academics_to","setacademics_to","license_start","setLicense_start","license_end","setLicense_end","total_users","setTotal_users","password","setPassword","password2","setPassword2","state_name","setState_name","statecode","setStateCode","citycode","setCityCode","country_code","setCountry_code","city","setCity","stateName","setStateName","cityName","setCityName","setRegion","visible","setVisible","React","classNames","setClassNames","countrylist","setCountryList","chainSchools","setChainSchools","chainSchoolId","setCahinSchoolId","logoName","setLogoName","userIDErr","setUserIDErr","schoolNameErr","setSchoolNameErr","pinErr","setPinErr","stateErr","setStateErr","cityErr","setCityErr","countryErr","setCountryErr","addressErr","setAddressErr","webErr","setWebErr","emailErr","setEmailErr","mobileErr","setMobileErr","passwordErr","setPasswordErr","password2Err","setPassword2Err","calStartErr","setCalStartErr","calEndErr","setCalEndErr","academicStartErr","setacAdemicStartErr","academicEndErr","setAcademicEndErr","totalErr","setTotalErr","useEffect","response","countryArray","catch","error","console","log","stateArray","uploadLogo","file","a","uploadFile","key","err","respo","cityArray","class_name","total_student","inputList","setInputList","onSubmit","e","preventDefault","formValidation","values","picUp","post","name","username","pin_code","acadmics_from","acadmics_to","license_type","logo","chain_school_id","res","target","reset","isValid","trim","test","length","UserIDinvalid","UserIDrequired","calShort","cal","start","end","total","schoolNameShort","pinshort","pinreq","addressShort","emailinvalid","emailrequired","mobshort","mobreq","passshort","passreq","pass2short","pass2req","history","useHistory","type","onClick","i","push","exportFromJSON","fileName","exportType","title","columns","field","options","search","paging","filtering","exportButton","actionsColumnIndex","rowStyle","x","tableData","id","backgroundColor","pageSize","emptyRowsWhenPaging","pageSizeOptions","actions","icon","faEye","fontSize","tooltip","event","rowData","faEdit","school_id","substring","country","md","lg","xl","className","htmlFor","placeholder","value","onChange","Object","keys","map","color","disabled","rows","countryCode","selected","state_code","custom","ch","index","list","handleInputChange","labelId","variant","multiple","renderValue","join","checked","indexOf","primary","files","block","float","faTimesCircle","onDismiss","to","faCheckCircle","marginLeft","alert","patch","faSave","toast","require","module","exports","info","success","warn","dark","notify","axios","default","token","localStorage","getItem","JSON","parse","create","timeout","headers","authorization","interceptors","use","status","removeItem","window","location","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","prototype","toString","call","assert","msg","Error","getKeys","getEntries","normalizeFileName","extension","fileNameFormatter","suffix","extensionPattern","RegExp","concat","replace","downloadFile","content","byBlob","dataURI","blobType","URL","createObjectURL","Blob","encodeURIComponent","generateDataURI","anchor","document","createElement","href","download","setAttribute","body","appendChild","dispatchEvent","MouseEvent","bubbles","cancelable","view","removeChild","__assign","assign","t","s","n","p","hasOwnProperty","__read","o","m","r","ar","next","_createTableMap","reduce","tMap","rowKVs","rowIndex","_a","_b","columnValues","_","stringify","_createTableEntries","tableMap","beforeTableEncode","fieldName","fieldValues","createXLSData","tableEntries","head","column","mergedColumn","_renderTableHTMLText","createXMLData","_renderXML","tagName","arrayElementTag","spaces","tag","indentSpaces","indent","item","String","$1","_c","fields","_d","_e","replacer","_f","space","_g","processor","_h","withBOM","_j","delimiter","_k","MESSAGE_IS_ARRAY_FAIL","MESSAGE_UNKNOWN_EXPORT_TYPE","MESSAGE_FIELD_INVALID","safeData","mapper","filter","_createFieldsMapper","fieldsMapper","_prepareData","JSONData","_createJSONData","CSVData","createCSVData","types","txt","css","html","json","csv","xls","xml","processors"],"mappings":"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","file":"static/js/22.3767a2f4.chunk.js","sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction EditSchoolDashboard() {\r\n \r\n  return (\r\n    <>\r\n    ghfgh\r\n    </>\r\n  );\r\n}\r\nexport default EditSchoolDashboard;","import React from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { CCard, CCardBody, CCol, CRow  } from \"@coreui/react-pro\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { faEdit, faEye } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport EDU_AXIOS from \"src/helpers/edu_axios\";\r\nimport exportFromJSON from 'export-from-json' \r\nimport { useState, useEffect } from \"react\";\r\nimport EditSchoolDashboard from \"../edit_school_dashboard\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport {\r\n  CButton,\r\n \r\n  CCardFooter,\r\n  \r\n  CFormInput,\r\n  \r\n  CFormLabel,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CFormTextarea,\r\n} from \"@coreui/react-pro\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  faSave,\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst config = {\r\n  bucketName: process.env.REACT_APP_BUCKET_NAME,\r\n  dirName: process.env.REACT_APP_SCHOOL_LOGO_DIR_NAME,\r\n  region: process.env.REACT_APP_REGION,\r\n  accessKeyId: process.env.REACT_APP_ACCESS_ID,\r\n  secretAccessKey: process.env.REACT_APP_ACCESS_KEY,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst classs = [\"SMS\", \"LMS\", \"Video Conferencing\", \"Demo\"];\r\nfunction ManageSchool() {\r\n\r\n\r\n\r\n  let items = [];\r\n  let url =\r\n    process.env.REACT_APP_API_PATH + \"/auth/get-normal-schools\";\r\n  const [state, setstate] = useState([])\r\n  const [screen, setScreen] = useState(\"\")\r\n  const [schoolId, setSchoolId] = useState(\"\")\r\n\r\n  EDU_AXIOS.get(url)\r\n    .then((resp) => {\r\n    //  console.log(resp);\r\n     setstate(resp.data.data)\r\n    });\r\n  //console.log(state.length);\r\n\r\nconst testing = () =>{\r\n//  alert(school_name)\r\n // alert(schoolId)\r\n alert(region)\r\n EDU_AXIOS.patch( ` ${process.env.REACT_APP_API_PATH}/auth/edit-normal-school/${schoolId}`,\r\n  {\r\n    name: school_name,\r\n    username: userID,\r\n    password: password,\r\n    email: email,\r\n    mobile: mobile,\r\n    address: address,\r\n    pin_code: pin,\r\n    state: stateName,\r\n    city: cityName,\r\n    website: website,\r\n    acadmics_from: academics_from,\r\n    acadmics_to: academics_to,\r\n    license_start: license_start,\r\n    license_end: license_end,\r\n    classes: inputList,\r\n    total_users: total_users,\r\n    license_type: classNames,\r\n    logo: logoName,\r\n    chain_school_id: chainSchoolId,\r\n    region:region\r\n  }\r\n ).then((res)=>{\r\n  // alert(\"datas edited successfully\")\r\n //  console.log(res)\r\n })\r\n}\r\n  const edit = (school_id) => {\r\n   // alert(school_id)\r\n    setSchoolId(school_id);\r\n    //  history.push('normal-school/'+school_id);\r\n    setScreen(\"edit\")\r\n    EDU_AXIOS.get( ` ${process.env.REACT_APP_API_PATH}/auth/get-normal-school/${school_id}`)\r\n    .then((resp) => {\r\n      // console.log(\"getting teachers dtaa\");\r\n     //  console.log(resp);\r\n      //alert(resp.data.data.username);\r\n      setSchool_name(resp.data.data.name);\r\n     setUSerID(resp.data.data.username);\r\n     // setstate(resp.data.data)\r\n     setPassword(resp.data.data.password);\r\n     setEmail(resp.data.data.email)\r\n     setMobile(resp.data.data.mobile)\r\n     setAddress(resp.data.data.address)\r\n     setPin(resp.data.data.pin_code)\r\n    //  setCountryList(resp.data.data.country);\r\n    setWebsite(resp.data.data.website)\r\n    setTotal_users(resp.data.data.total_users);\r\n    setLicense_start(resp.data.data.license_start.substring(0,10));\r\n    setLicense_end(resp.data.data.license_end.substring(0,10));\r\n    setCountry_code(resp.data.data.country)\r\n    setAcademics_from(resp.data.data.acadmics_from);\r\n    setacademics_to(resp.data.data.acadmics_to);\r\n    setCityCode(resp.data.data.city);\r\n    setCityName(resp.data.data.city)\r\n  setStateCode(resp.data.data.state);\r\n  setStateName(resp.data.data.state);\r\n  setWebsite(resp.data.data.website);\r\n  setCahinSchoolId(resp.data.data.chain_school_id);\r\n  setRegion(resp.data.data.region)\r\n  //alert(resp.data.data.region)\r\n  //  alert(resp.data.data.city);\r\n  //  alert(stateName)\r\n    });\r\n  }\r\n  const classes = useStyles();\r\n  const [userID, setUSerID] = useState(\"\");\r\n  const [school_name, setSchool_name] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [pin, setPin] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(\"\");\r\n  const [academics_from, setAcademics_from] = useState(\"\");\r\n  const [academics_to, setacademics_to] = useState(\"\");\r\n  const [license_start, setLicense_start] = useState(\"\");\r\n  const [license_end, setLicense_end] = useState(\"\");\r\n  const [total_users, setTotal_users] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [state_name, setState_name] = useState([]);\r\n  const [statecode,setStateCode]=useState(\"\");\r\n  const [citycode,setCityCode]=useState(\"\");\r\n  const [country_code, setCountry_code] = useState();\r\n  const [city, setCity] = useState([]);\r\n  const [stateName, setStateName] = useState();\r\n  const [cityName, setCityName] = useState();\r\n  const [region, setRegion] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const [classNames, setClassNames] = React.useState([]);\r\n  const [countrylist, setCountryList] = useState([]);\r\n  const [chainSchools, setChainSchools] = useState([]);\r\n  const [chainSchoolId, setCahinSchoolId] = useState(\"\");\r\n  const [logoName, setLogoName] = useState(\"\");\r\n\r\n  // Defining Errors\r\n  const [userIDErr, setUserIDErr] = useState({});\r\n  const [schoolNameErr, setSchoolNameErr] = useState({});\r\n  const [pinErr, setPinErr] = useState({});\r\n  const [stateErr, setStateErr] = useState({});\r\n  const [cityErr, setCityErr] = useState({});\r\n  const [countryErr, setCountryErr] = useState({});\r\n  const [addressErr, setAddressErr] = useState({});\r\n  const [webErr, setWebErr] = useState({});\r\n  const [emailErr, setEmailErr] = useState({});\r\n  const [mobileErr, setMobileErr] = useState({});\r\n  const [passwordErr, setPasswordErr] = useState({});\r\n  const [password2Err, setPassword2Err] = useState({});\r\n  const [calStartErr, setCalStartErr] = useState({});\r\n  const [calEndErr, setCalEndErr] = useState({});\r\n  const [academicStartErr, setacAdemicStartErr] = useState({});\r\n  const [academicEndErr, setAcademicEndErr] = useState({});\r\n  const [totalErr, setTotalErr] = useState({});\r\n\r\n  // to get country list from server\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(process.env.REACT_APP_API_PATH + \"/auth/get-countries\")\r\n      .then((response) => {\r\n        let countryArray = response.data.data;\r\n        setCountryList(countryArray);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // to get chain school list from server\r\n  useEffect(() => {\r\n    EDU_AXIOS.get(\r\n      process.env.REACT_APP_API_PATH + \"/auth/get-chain-school-list\"\r\n    )\r\n      .then((response) => {\r\n        setChainSchools(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // set country code before calling state list api\r\n  const selectState = (e) => {\r\n    var countryCode = e.target.value;\r\n    setCountry_code(countryCode);\r\n  };\r\n\r\n  // get states by country code\r\n  useEffect(() => {\r\n    // check country code is set or not\r\n    if (country_code) {\r\n      EDU_AXIOS.get(\r\n        process.env.REACT_APP_API_PATH + `/auth/get-states/${country_code}`\r\n      )\r\n        .then((resp) => {\r\n          let stateArray = resp.data.data;\r\n          setState_name(stateArray);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [country_code]);\r\n\r\n  let uploadLogo = async (file) => {\r\n    return uploadFile(file, config)\r\n      .then((data) => {\r\n        return data.key;\r\n      })\r\n      .catch((err) => console.error(err, \"\"));\r\n  };\r\n\r\n  // get cities of a state\r\n  useEffect(() => {\r\n    // check coundry code and state name is set or not\r\n    if (stateName) {\r\n      EDU_AXIOS.get(\r\n        process.env.REACT_APP_API_PATH +\r\n          `/auth/get-cities/${country_code}/${stateName}`\r\n      )\r\n        //EDU_AXIOS.get(cityURL)\r\n        .then((respo) => {\r\n          let cityArray = respo.data.data;\r\n\r\n          setCity(cityArray);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [stateName]);\r\n\r\n  const handleChange = (event) => {\r\n    setClassNames(event.target.value);\r\n  };\r\n\r\n  const [inputList, setInputList] = useState([\r\n    { class_name: \"\", total_student: \"\" },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n    // console.log(inputList,\"B\");\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { class_name: \"\", total_student: \"\" }]);\r\n  };\r\n\r\n  // get a file to upload\r\n  const handleFileInput = (e) => {\r\n    setLogoName(e.target.files[0].name);\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n  const handleUpload = async (file) => {\r\n    uploadFile(file, config)\r\n      .then((data) => console.log(data, \"Logo uploaded successfully\"))\r\n      .catch((err) => console.error(err, \"\"));\r\n  };\r\n  const onSubmit = async (e) => {\r\n  \r\n    e.preventDefault();\r\n    const isValid = await formValidation();\r\n    // check form is valid or not\r\n    if (isValid) {\r\n      let upData = await uploadLogo(values.picUp);\r\n      return await EDU_AXIOS.post(\r\n        process.env.REACT_APP_API_PATH + \"/auth/create-normal-school\",\r\n        {\r\n          name: school_name,\r\n          username: userID,\r\n          password: password,\r\n          email: email,\r\n          mobile: mobile,\r\n          address: address,\r\n          pin_code: pin,\r\n          state: stateName,\r\n          city: cityName,\r\n          website: website,\r\n          acadmics_from: academics_from,\r\n          acadmics_to: academics_to,\r\n          license_start: license_start,\r\n          license_end: license_end,\r\n          classes: inputList,\r\n          total_users: total_users,\r\n          license_type: classNames,\r\n          logo: logoName,\r\n          chain_school_id: chainSchoolId,\r\n          region:region\r\n        }\r\n      )\r\n        .then(async (res) => {\r\n          e.target.reset();\r\n        //  alert(res.data.message);\r\n        })\r\n        .catch((err) => {\r\n        //  alert(err);\r\n        });\r\n    }\r\n  };\r\n  const formValidation = async () => {\r\n    const userIDErr = {};\r\n    const schoolNameErr = {};\r\n    const pinErr = {};\r\n    const webErr = {};\r\n    const emailErr = {};\r\n    const mobileErr = {};\r\n    const passwordErr = {};\r\n    const password2Err = {};\r\n    const stateErr = {};\r\n    const cityErr = {};\r\n    const countryErr = {};\r\n    const addressErr = {};\r\n    const calStartErr = {};\r\n    const calEndErr = {};\r\n    const academicStartErr = {};\r\n    const academicEndErr = {};\r\n    const totalErr = {};\r\n\r\n    let isValid = true;\r\n    // Validations for different fields\r\n\r\n    if (!userID.trim()) {\r\n      userIDErr.UserIDrequired = \"Required\";\r\n    } else if (/[^a-zA-Z0-9_.]/.test(userID) || userID.trim().length < 6) {\r\n      userIDErr.UserIDinvalid =\r\n        \"UserID is Invalid (@ , # not supported) / < 6 Digits\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!license_start.trim()) {\r\n      calStartErr.calShort = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!license_end.trim()) {\r\n      calEndErr.cal = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!academics_from.trim()) {\r\n      academicStartErr.start = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!academics_to.trim()) {\r\n      academicEndErr.end = \" Required\";\r\n      isValid = false;\r\n    }\r\n    if (!total_users.trim()) {\r\n      totalErr.total = \" Required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!school_name.trim()) {\r\n      schoolNameErr.schoolNameShort = \" Required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!pin.trim()) {\r\n      pinErr.pinreq = \" Required\";\r\n      isValid = false;\r\n    } else if (!/[123456789][0-9]{5}/.test(pin) || pin.trim().length > 6) {\r\n      pinErr.pinshort = \"PIN should be 6 Digits only / PIN Can't Start with 0\";\r\n      isValid = false;\r\n    }\r\n    if (!address.trim()) {\r\n      addressErr.addressShort = \" Required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!email.trim()) {\r\n      emailErr.emailrequired = \"Required\";\r\n      isValid = false;\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      emailErr.emailinvalid = \"Email address is invalid\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!mobile.trim()) {\r\n      mobileErr.mobreq = \" Required\";\r\n      isValid = false;\r\n    } else if (mobile.trim().length > 10 || !/[6789][0-9]{9}/.test(mobile)) {\r\n      mobileErr.mobshort = \"Mobile number must be Valid & of 10 Digits Only\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!password.trim()) {\r\n      passwordErr.passreq = \" Required\";\r\n      isValid = false;\r\n    } else if (password.trim().length < 6 || password.trim().length > 20) {\r\n      passwordErr.passshort = \"Invalid / < 6 Digits\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!password2.trim()) {\r\n      passwordErr.pass2req = \" \";\r\n      isValid = false;\r\n    } else if (password2 !== password) {\r\n      password2Err.pass2short = \"Doesn't Match \";\r\n      isValid = false;\r\n    }\r\n    // setting errors in validation\r\n    setUserIDErr(userIDErr);\r\n    setSchoolNameErr(schoolNameErr);\r\n    setPinErr(pinErr);\r\n    setWebErr(webErr);\r\n    setEmailErr(emailErr);\r\n    setMobileErr(mobileErr);\r\n    setPasswordErr(passwordErr);\r\n    setPassword2Err(password2Err);\r\n    setCityErr(cityErr);\r\n    setStateErr(stateErr);\r\n    setCountryErr(countryErr);\r\n    setAddressErr(addressErr);\r\n    setCalStartErr(calStartErr);\r\n    setCalEndErr(calEndErr);\r\n    setacAdemicStartErr(academicStartErr);\r\n    setAcademicEndErr(academicEndErr);\r\n    setTotalErr(totalErr);\r\n    return isValid;\r\n  };\r\n  let history = useHistory();\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",\r\n    },\r\n    {\r\n      title: \"Username\",\r\n      field: \"username\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      field: \"email\",\r\n    },\r\n    {\r\n      title: \"License Start\",\r\n      field: \"license_start\",\r\n    },\r\n    {\r\n      title: \"License End\",\r\n      field: \"license_end\",\r\n    },\r\n  ];\r\n\r\n\r\n  const data=[];\r\n  const fileName = 'download'  \r\n  const exportType = 'xls'\r\n   const ExportToExcel = () => {  \r\n     console.log(state)\r\n    for(var i=0;i<state.length;i++){\r\n      console.log(state[i].name)\r\n      data.push({\r\n        name:state[i].name,\r\n        email:state[i].email,\r\n        username:state[i].username\r\n      })\r\n    }\r\n     console.log(data)\r\n      exportFromJSON({ data, fileName, exportType })  \r\n    }\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardBody>\r\n        {/* {\r\n          state.map((items)=>{\r\n            return <p>{items.name}</p>\r\n          })\r\n        } */}\r\n        <button type=\"button\" onClick={ExportToExcel}>Export To Excel</button>\r\n      {\r\n            screen != \"edit\" ? <MaterialTable\r\n            title=\"Normal Schools \"\r\n            data={\r\n             state\r\n            }\r\n            columns={columns}\r\n            // onSelectionChange={(rows) => setSelectedRows(rows)}\r\n            options={{\r\n              search: true,\r\n              paging: true,\r\n              filtering: false,\r\n              exportButton: true,\r\n              actionsColumnIndex: 6,\r\n              rowStyle: (x) => {\r\n                if (x.tableData.id % 2) {\r\n                  return { backgroundColor: \"#f9f9f9\" };\r\n                }\r\n              },\r\n              pageSize: 20,\r\n              emptyRowsWhenPaging: true,\r\n              pageSizeOptions: [20, 40, 60],\r\n            }}\r\n            actions={[\r\n              {\r\n                icon: () => (\r\n                  <FontAwesomeIcon icon={faEye} style={{ fontSize: \"1rem\" }} />\r\n                ),\r\n                tooltip: \"View School\",\r\n                title: \"View\",\r\n                onClick: (event, rowData) =>\r\n                  history.push(`normal-school/${rowData.id}`),\r\n              },\r\n              {\r\n                icon: () => (\r\n                  <FontAwesomeIcon icon={faEdit}  style={{ fontSize: \"1rem\" }} />\r\n                ),\r\n                tooltip: \"Edit School\",\r\n                title: \"View\",\r\n                onClick: (event, rowData) =>\r\n                 edit(rowData.id),\r\n              },\r\n            ]}\r\n          />:\r\n          <form onSubmit={onSubmit} id=\"ev_create_normal_school\">\r\n          <CRow>\r\n            <CCol>\r\n              <CCard>\r\n                <CCardBody>\r\n                  <CRow>\r\n                    <CCol md=\"8\" lg=\"6\" xl=\"8\">\r\n                      <h5>Edit Normal School</h5>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <p className=\"text-muted\">Register a Normal School</p>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel htmlFor=\"validationCustom01\">\r\n                        School Name :\r\n                      </CFormLabel>\r\n    \r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        id=\"req1\"\r\n                        key=\"sname\"\r\n                        placeholder=\"Name of School\"\r\n                        value={school_name}\r\n                        onChange={(e) => {\r\n                          setSchool_name(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(schoolNameErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{schoolNameErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel>User Name :</CFormLabel>\r\n                      <CFormInput\r\n                        key=\"user\"\r\n                        id=\"school_name\"\r\n                        placeholder=\"Unique User Name\"\r\n                        disabled=\"true\"\r\n                        value={userID}\r\n                        onChange={(e) => {\r\n                          setUSerID(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(userIDErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{userIDErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Password :</CFormLabel>\r\n                      <CFormInput\r\n                        key=\"pass\"\r\n                        id=\"\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => {\r\n                          setPassword(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(passwordErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{passwordErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                    <CCol>\r\n                      <CFormLabel> Re-Enter Password :</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"re-pass\"\r\n                        type=\"password\"\r\n                        value={password2}\r\n                        onChange={(e) => {\r\n                          setPassword2(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(password2Err).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{password2Err[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel>Email ID :</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"email\"\r\n                        placeholder=\"School Email ID\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => {\r\n                          setEmail(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(emailErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{emailErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Mobile :</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"mobile\"\r\n                        placeholder=\"Mobile Number\"\r\n                        type=\"number\"\r\n                        value={mobile}\r\n                        onChange={(e) => {\r\n                          setMobile(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(mobileErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{mobileErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> School Address:</CFormLabel>\r\n                      <CFormTextarea\r\n                        id=\"\"\r\n                        key=\"address\"\r\n                        placeholder=\"Address of Your School\"\r\n                        rows=\"1\"\r\n                        value={address}\r\n                        onChange={(e) => {\r\n                          setAddress(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(addressErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{addressErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Pin:</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"pin\"\r\n                        placeholder=\"Pin Code\"\r\n                        type=\"number\"\r\n                        value={pin}\r\n                        onChange={(e) => {\r\n                          setPin(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(pinErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{pinErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Country:</CFormLabel>\r\n                      <CFormSelect\r\n                        key=\"country\"\r\n                        value={countrylist.name}\r\n                        onChange={selectState}\r\n                      >\r\n                        <option>Select the Country</option>\r\n                        {countrylist.map((countrylist) => {\r\n                          return (\r\n                            countrylist.country_code==country_code?\r\n                            <option selected=\"true\" value={countrylist.country_code}>\r\n                              {countrylist.name}\r\n                            </option>: <option  value={countrylist.country_code}>\r\n                              {countrylist.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </CFormSelect>\r\n                      {Object.keys(countryErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{countryErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> State:</CFormLabel>\r\n                      \r\n                      <CFormSelect\r\n                        key=\"state\"\r\n                        value={state_name.name}\r\n                        onChange={(e) => {\r\n                          setStateName(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option disabled>Select the Country First</option>\r\n                        {state_name.map((state_name) => {\r\n                          return (\r\n                            statecode!=\"\" && state_name.state_code==statecode?\r\n\r\n                            <option selected value={state_name.state_code}>\r\n                              {state_name.name}\r\n                            </option>: <option  value={state_name.state_code}>\r\n                              {state_name.name}\r\n                            </option>\r\n                          );\r\n                        })\r\n                        \r\n                        \r\n                        }\r\n                      </CFormSelect>\r\n                      {Object.keys(stateErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{stateErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> City:</CFormLabel>\r\n                      {\r\n                        citycode!=''?citycode:\"\"\r\n                      }\r\n                      <CFormSelect\r\n                        key=\"city\"\r\n                        value={city.name}\r\n                        onChange={(e) => {\r\n                          setCityName(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option >Select the State First</option>\r\n                        {city.map((city) => {\r\n                          return (\r\n                           citycode!=\"\" && city.name==citycode?\r\n                          <option selected value={city.name}>{city.name}</option>:\r\n                          <option value={city.name}>{city.name}</option>\r\n                          );\r\n                        })}\r\n                      </CFormSelect>\r\n                      {Object.keys(cityErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{cityErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Region:</CFormLabel>\r\n                      <CFormSelect key=\"reg\" onChange={(event)=>setRegion(event.target.value)} id=\"\">\r\n                        <option>Open this select menu</option>\r\n                      {\r\n                        region==\"East\"? <option value=\"East\" selected>East </option>: <option value=\"East\" >East </option>\r\n                      } \r\n                       {\r\n                        region==\"West\"? <option value=\"West\" selected>West </option>: <option value=\"West\" >West </option>\r\n                      }\r\n                       {\r\n                        region==\"North\"? <option value=\"North\" selected>North </option>: <option value=\"North\" >North </option>\r\n                      } \r\n                       {\r\n                        region==\"South\"? <option value=\"South\" selected>South </option>: <option value=\"South\" >South </option>\r\n                      }\r\n                       {\r\n                        region==\"International\"? <option value=\"International\" selected>International </option>: <option value=\"International\" >International </option>\r\n                      } \r\n                      \r\n                        {/* <option value=\"West\">West</option>\r\n                        <option value=\"North\">North</option>\r\n                        <option value=\"South\">South</option>\r\n                        <option value=\"International\">International</option> */}\r\n                      </CFormSelect>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Board:</CFormLabel>\r\n                      <CFormSelect key=\"board\" custom name=\"\" id=\"\">\r\n                        <option>Open this select menu</option>\r\n                        <option value=\"Cbse\">CBSE </option>\r\n                        <option value=\"Icse\">ICSE</option>\r\n                        <option value=\"IB\">IB</option>\r\n                        <option value=\"Igcse\">IGCSE</option>\r\n                        <option value=\"State\">STATE BOARD</option>\r\n                      </CFormSelect>\r\n                    </CCol>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel>Website Of School :</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"website\"\r\n                        placeholder=\"Example ==> www.websiteofschool.com\"\r\n                        value={website}\r\n                        onChange={(e) => {\r\n                          setWebsite(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(webErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{webErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol>\r\n                      <CFormLabel> Chain School List:</CFormLabel>\r\n                      <CFormSelect\r\n                        key=\"chain_schools\"\r\n                        value={chainSchools.school_id}\r\n                        onChange={(e) => {\r\n                          setCahinSchoolId(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select the chain school</option>\r\n                        {chainSchools.map((ch) => {\r\n                          return <option value={ch.school_id}>{ch.name}</option>;\r\n                        })}\r\n                      </CFormSelect>\r\n                    </CCol>\r\n                  </CRow>\r\n                  {inputList.map((x, i) => {\r\n                    return (\r\n                      <div className=\"box\">\r\n                        <CRow>\r\n                          {/* <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                            <CFormLabel> Select Class:</CFormLabel>\r\n                            <CFormSelect\r\n                              custom\r\n                              name=\"class_name\"\r\n                              id=\"\"\r\n                              key=\"clas\"\r\n                              value={x.class_name}\r\n                              onChange={(e) => handleInputChange(e, i)}\r\n                            >\r\n                              <option>Open this select menu</option>\r\n                              <option value=\"Nursery\">Nursery </option>\r\n                              <option value=\"LKG\">LKG </option>\r\n                              <option value=\"UKG\">UKG</option>\r\n                              <option value=\"1\">1</option>\r\n                              <option value=\"2\">2</option>\r\n                              <option value=\"3\">3</option>\r\n                              <option value=\"4\">4</option>\r\n                              <option value=\"5\">5</option>\r\n                              <option value=\"6\">6</option>\r\n                              <option value=\"7\">7</option>\r\n                              <option value=\"8\">8</option>\r\n                              <option value=\"9\">9</option>\r\n                              <option value=\"10\">10</option>\r\n                              <option value=\"11\">11</option>\r\n                              <option value=\"12\">12</option>\r\n                            </CFormSelect>\r\n                          </CCol> */}\r\n    \r\n                          <CCol md=\"5\" lg=\"5\" xl=\"5\">\r\n                            <CFormLabel> Total License Limit :</CFormLabel>\r\n                            <CFormInput\r\n                              key=\"stud\"\r\n                              id=\"total_student\"\r\n                              name=\"total_student\"\r\n                              placeholder=\"\"\r\n                              value={x.total_student}\r\n                              onChange={(e) => handleInputChange(e, i)}\r\n                              type=\"number\"\r\n                            />\r\n                          </CCol>\r\n    \r\n                          {/* <CCol>\r\n                            <CFormLabel> </CFormLabel>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <button\r\n                                  className=\"butt\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </button>\r\n                              )}\r\n                              <span> </span>\r\n                              {inputList.length - 1 === i && (\r\n                                <button onClick={handleAddClick}>Add</button>\r\n                              )}\r\n                            </div>\r\n                          </CCol> */}\r\n                        </CRow>\r\n                      </div>\r\n                    );\r\n                  })}\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"12\" lg=\"12\" xl=\"12\">\r\n                      <CFormLabel> Total Users</CFormLabel>\r\n                      <CFormInput\r\n                        key=\"tot\"\r\n                        id=\"\"\r\n                        placeholder=\"\"\r\n                        value={total_users}\r\n                        onChange={(e) => {\r\n                          setTotal_users(e.target.value);\r\n                        }}\r\n                      />\r\n                      {Object.keys(totalErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{totalErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Academics (From):</CFormLabel>\r\n                      <CFormSelect\r\n                        key=\"acaf\"\r\n                        custom\r\n                        name=\"\"\r\n                        id=\"\"\r\n                        value={academics_from}\r\n                        onChange={(e) => {\r\n                          setAcademics_from(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option>Open this select menu</option>\r\n                        <option value=\"January\">January </option>\r\n                        <option value=\"February\">February</option>\r\n                        <option value=\"March\">March</option>\r\n                        <option value=\"April\">April</option>\r\n                        <option value=\"May\">May</option>\r\n                        <option value=\"June\">June</option>\r\n                        <option value=\"July\">July</option>\r\n                        <option value=\"August\">August</option>\r\n                        <option value=\"September\">September</option>\r\n                        <option value=\"October\">October</option>\r\n                        <option value=\"November\">November</option>\r\n                        <option value=\"December\">December</option>\r\n                      </CFormSelect>\r\n                      {Object.keys(academicStartErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>\r\n                            {academicStartErr[key]}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Academics (To):</CFormLabel>\r\n                      <CFormSelect\r\n                        key=\"acat\"\r\n                        custom\r\n                        name=\"\"\r\n                        id=\"\"\r\n                        value={academics_to}\r\n                        onChange={(e) => {\r\n                          setacademics_to(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option>Open this select menu</option>\r\n                        <option value=\"January\">January </option>\r\n                        <option value=\"February\">February</option>\r\n                        <option value=\"March\">March</option>\r\n                        <option value=\"April\">April</option>\r\n                        <option value=\"May\">May</option>\r\n                        <option value=\"June\">June</option>\r\n                        <option value=\"July\">July</option>\r\n                        <option value=\"August\">August</option>\r\n                        <option value=\"September\">September</option>\r\n                        <option value=\"October\">October</option>\r\n                        <option value=\"November\">November</option>\r\n                        <option value=\"December\">December</option>\r\n                      </CFormSelect>\r\n                      {Object.keys(academicEndErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{academicEndErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> License (Start):</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"lics\"\r\n                        placeholder=\"\"\r\n                        value={license_start}\r\n                        onChange={(e) => {\r\n                          setLicense_start(e.target.value);\r\n                        }}\r\n                        type=\"date\"\r\n                      />\r\n                      {Object.keys(calStartErr).map((key) => {\r\n                        return (\r\n                          <div style={{ color: \"red\" }}>{calStartErr[key]}</div>\r\n                        );\r\n                      })}\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> License (End):</CFormLabel>\r\n                      <CFormInput\r\n                        id=\"\"\r\n                        key=\"lice\"\r\n                        placeholder=\"\"\r\n                        value={license_end}\r\n                        onChange={(e) => {\r\n                          setLicense_end(e.target.value);\r\n                        }}\r\n                        type=\"date\"\r\n                      />\r\n                      {Object.keys(calEndErr).map((key) => {\r\n                        return <div style={{ color: \"red\" }}>{calEndErr[key]}</div>;\r\n                      })}\r\n                    </CCol>\r\n                  </CRow>\r\n    \r\n                  <CRow>\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> License Type:</CFormLabel>\r\n                      <FormControl className={classes.formControl}>\r\n                        <Select\r\n                          key=\"ltype\"\r\n                          labelId=\"demo-mutiple-checkbox-labels\"\r\n                          id=\"demo-mutiple-checkboxs\"\r\n                          variant=\"outlined\"\r\n                          multiple\r\n                          value={classNames}\r\n                          onChange={handleChange}\r\n                          input={<Input />}\r\n                          renderValue={(selected) => selected.join(\", \")}\r\n                          MenuProps={MenuProps}\r\n                        >\r\n                          {classs.map((name) => (\r\n                            <MenuItem key={name} value={name}>\r\n                              <Checkbox checked={classNames.indexOf(name) > -1} />\r\n                              <ListItemText primary={name} />\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </CCol>\r\n    \r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <CFormLabel> Upload Logo:</CFormLabel>\r\n                      <CFormInput\r\n                        key=\"logo\"\r\n                        type=\"file\"\r\n                        id=\"\"\r\n                        onChange={handleFileInput}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </CCardBody>\r\n    \r\n                <CCardFooter>\r\n                  <CRow>\r\n                    <CCol md={3}>\r\n                      <CButton\r\n                        block\r\n                        //variant=\"outline\"\r\n                        color=\"light\"\r\n                        onClick={() => setScreen(\"\")}\r\n                        style={{ float: \"left\" }}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTimesCircle} /> Cancel\r\n                      </CButton>\r\n    \r\n                      <CModal visible={visible} onDismiss={() => setVisible(false)}>\r\n                        <CModalHeader onDismiss={() => setVisible(false)}>\r\n                          <CModalTitle>Cancel</CModalTitle>\r\n                        </CModalHeader>\r\n    \r\n                        <CModalBody>Do You Want To Cancel ?</CModalBody>\r\n                        <CModalFooter>\r\n                          <CButton color=\"light\" onClick={() => setVisible(false)}>\r\n                            <FontAwesomeIcon icon={faTimesCircle} /> No\r\n                          </CButton>\r\n                          <Link to=\"/\">\r\n                            <CButton color=\"dark\">\r\n                              <FontAwesomeIcon icon={faCheckCircle} /> Yes\r\n                            </CButton>\r\n                          </Link>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n    \r\n                      <CButton\r\n                        color=\"dark\"\r\n                        type=\"submit\"\r\n                        style={{ marginLeft: \"15px\" }}\r\n                        // disabled={\r\n                        //   !school_name ||\r\n                        //   !userID ||\r\n                        //   !email ||\r\n                        //   !password ||\r\n                        //   !mobile ||\r\n                        //   !address ||\r\n                        //   !pin ||\r\n                        //   !total_users ||\r\n                        //   !academics_from ||\r\n                        //   !academics_to ||\r\n                        //   !license_start ||\r\n                        //   !license_end\r\n                        // }\r\n                        // onClick={() => handleUpload(selectedFile)}\r\n                        onClick={testing}\r\n                      >\r\n                        <FontAwesomeIcon icon={faSave} /> Save\r\n                      </CButton>\r\n                      {/* <button type=\"button\" onClick={testing}></button> */}\r\n                    </CCol>\r\n                  </CRow>\r\n                </CCardFooter>\r\n              </CCard>\r\n            </CCol>\r\n          </CRow>\r\n        </form>\r\n          }\r\n       \r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n}\r\n\r\nexport default ManageSchool;\r\n","let { toast } = require(\"react-toastify\");\r\n\r\nconst notify = (type, message) => {\r\n  switch (type) {\r\n    case \"info\":\r\n      toast.info(message);\r\n      break;\r\n    case \"success\":\r\n      toast.success(message);\r\n      break;\r\n    case \"warning\":\r\n      toast.warn(message);\r\n      break;\r\n    case \"error\":\r\n      toast.error(message);\r\n      break;\r\n    case \"dark\":\r\n      toast.dark(message);\r\n      break;\r\n    default:\r\n      toast(message);\r\n  }\r\n};\r\n\r\nmodule.exports = notify;\r\n","const notify = require(\"./notify\");\r\nconst axios = require(\"axios\").default;\r\nlet EDU_AXIOS;\r\nlet token = \"\";\r\n// to set authorization header on test mode\r\nlet user = localStorage.getItem(\"user\");\r\nif (user) {\r\n  token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"production\") {\r\n  EDU_AXIOS = axios.create({\r\n    timeout: 6000,\r\n    withCredentials: true,\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        notify(\"error\", error.response.message);\r\n      } else {\r\n        notify(\"error\", error.response.message);\r\n      }\r\n    }\r\n  );\r\n}\r\nif (process.env.REACT_APP_APP_ENV == \"test\") {\r\n  if (token == \"\") {\r\n    console.log(\"there isno token\");\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  } else {\r\n    EDU_AXIOS = axios.create({\r\n      timeout: 6000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Catch the AunAuthorized Request\r\n   */\r\n  EDU_AXIOS.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n        window.location = \"/#/login\";\r\n        console.log(error.response.data.message);\r\n        notify(\"error\", error.response.data.message);\r\n      } else {\r\n        notify(\"error\", error.response.data.message);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nmodule.exports = EDU_AXIOS;\r\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export function isArray(data) {\n    return Object.prototype.toString.call(data) === '[object Array]';\n}\nexport function assert(condition, msg) {\n    if (!condition)\n        throw new Error(msg);\n}\nexport function getValues(data) {\n    return Object.keys(data).map(function (key) { return data[key]; });\n}\nexport function getKeys(data) {\n    return Object.keys(data);\n}\nexport function getEntries(data) {\n    return Object.keys(data).map(function (key) { return [key, data[key]]; });\n}\nexport function normalizeFileName(fileName, extension, fileNameFormatter) {\n    var suffix = '.' + extension;\n    var extensionPattern = new RegExp(\"(\\\\\".concat(extension, \")?$\"));\n    return fileNameFormatter(fileName).replace(extensionPattern, suffix);\n}\nexport function normalizeXMLName(name) {\n    '555xmlHello .  world!'.trim().replace(/^([0-9,;]|(xml))+/, '');\n    return name.replace(/[^_a-zA-Z 0-9:\\-\\.]/g, '').replace(/^([ 0-9-:\\-\\.]|(xml))+/i, '').replace(/ +/g, '-');\n}\nexport function indent(spaces) {\n    return Array(spaces + 1).join(' ');\n}\nexport function stripHTML(text) {\n    return text.replace(/([<>&])/g, function (_, $1) {\n        switch ($1) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return '';\n        }\n    });\n}\n","export function generateDataURI(content, type, byBlob) {\n    switch (type) {\n        case 'txt': {\n            var blobType = 'text/plain;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'css': {\n            var blobType = 'text/css;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'html': {\n            var blobType = 'text/html;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'json': {\n            var blobType = 'text/json;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'csv': {\n            var blobType = 'text/csv;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'xls': {\n            var blobType = 'text/application/vnd.ms-excel;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'xml': {\n            var blobType = 'text/application/xml;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        default: {\n            return '';\n        }\n    }\n}\nexport function downloadFile(content, type, fileName, byBlob) {\n    if (fileName === void 0) { fileName = 'download'; }\n    if (byBlob === void 0) { byBlob = true; }\n    var dataURI = generateDataURI(content, type, byBlob);\n    var anchor = document.createElement('a');\n    anchor.href = dataURI;\n    anchor.download = fileName;\n    anchor.setAttribute('style', 'visibility:hidden');\n    document.body.appendChild(anchor);\n    anchor.dispatchEvent(new MouseEvent('click', {\n        bubbles: false,\n        cancelable: false,\n        view: window,\n    }));\n    document.body.removeChild(anchor);\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { isArray, getEntries, normalizeXMLName, indent, stripHTML, assert, getKeys } from './utils';\nexport function _createFieldsMapper(fields) {\n    if (!fields\n        || isArray(fields) && !fields.length\n        || !isArray(fields) && !getKeys(fields).length)\n        return function (item) { return item; };\n    var mapper = isArray(fields)\n        ? fields.reduce(function (map, key) {\n            var _a;\n            return (__assign(__assign({}, map), (_a = {}, _a[key] = key, _a)));\n        }, Object.create(null))\n        : fields;\n    return function (item) {\n        if (isArray(item)) {\n            return item\n                .map(function (i) { return getEntries(i).reduce(function (map, _a) {\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                if (key in mapper) {\n                    map[mapper[key]] = value;\n                }\n                return map;\n            }, Object.create(null)); })\n                .filter(function (i) { return getKeys(i).length; });\n        }\n        return getEntries(item).reduce(function (map, _a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            if (key in mapper) {\n                map[mapper[key]] = value;\n            }\n            return map;\n        }, Object.create(null));\n    };\n}\nexport function _prepareData(data) {\n    var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide a valid JSON';\n    try {\n        return (typeof data === 'string' ? JSON.parse(data) : data);\n    }\n    catch (_a) {\n        throw new Error(MESSAGE_VALID_JSON_FAIL);\n    }\n}\nexport function _createJSONData(data, replacer, space) {\n    if (replacer === void 0) { replacer = null; }\n    var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide valid JSON object';\n    try {\n        return JSON.stringify(data, replacer, space);\n    }\n    catch (_a) {\n        throw new Error(MESSAGE_VALID_JSON_FAIL);\n    }\n}\nexport function _createTableMap(data) {\n    return data.map(getEntries).reduce(function (tMap, rowKVs, rowIndex) {\n        return rowKVs.reduce(function (map, _a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            var columnValues = map[key] || Array.from({ length: data.length }).map(function (_) { return ''; });\n            columnValues[rowIndex] =\n                (typeof value !== 'string' ? JSON.stringify(value) : value) || '';\n            map[key] = columnValues;\n            return map;\n        }, tMap);\n    }, Object.create(null));\n}\nexport function _createTableEntries(tableMap, beforeTableEncode) {\n    if (beforeTableEncode === void 0) { beforeTableEncode = function (i) { return i; }; }\n    return beforeTableEncode(getEntries(tableMap).map(function (_a) {\n        var _b = __read(_a, 2), fieldName = _b[0], fieldValues = _b[1];\n        return ({\n            fieldName: fieldName,\n            fieldValues: fieldValues,\n        });\n    }));\n}\nexport function createCSVData(data, delimiter, beforeTableEncode) {\n    if (delimiter === void 0) { delimiter = ','; }\n    if (beforeTableEncode === void 0) { beforeTableEncode = function (i) { return i; }; }\n    if (!data.length)\n        return '';\n    var tableMap = _createTableMap(data);\n    var tableEntries = _createTableEntries(tableMap, beforeTableEncode);\n    var head = tableEntries.map(function (_a) {\n        var fieldName = _a.fieldName;\n        return fieldName;\n    })\n        .join(delimiter) + '\\r\\n';\n    var columns = tableEntries.map(function (_a) {\n        var fieldValues = _a.fieldValues;\n        return fieldValues;\n    })\n        .map(function (column) { return column.map(function (value) { return \"\\\"\".concat(value.replace(/\\\"/g, '\"\"'), \"\\\"\"); }); });\n    var rows = columns.reduce(function (mergedColumn, column) { return mergedColumn.map(function (value, rowIndex) { return \"\".concat(value).concat(delimiter).concat(column[rowIndex]); }); });\n    return head + rows.join('\\r\\n');\n}\nexport function _renderTableHTMLText(data, beforeTableEncode) {\n    assert(data.length > 0);\n    var tableMap = _createTableMap(data);\n    var tableEntries = _createTableEntries(tableMap, beforeTableEncode);\n    var head = tableEntries.map(function (_a) {\n        var fieldName = _a.fieldName;\n        return fieldName;\n    })\n        .join('</b></th><th><b>');\n    var columns = tableEntries.map(function (_a) {\n        var fieldValues = _a.fieldValues;\n        return fieldValues;\n    })\n        .map(function (column) { return column.map(function (value) { return \"<td>\".concat(value, \"</td>\"); }); });\n    var rows = columns.reduce(function (mergedColumn, column) { return mergedColumn\n        .map(function (value, rowIndex) { return \"\".concat(value).concat(column[rowIndex]); }); });\n    return \"\\n    <table>\\n      <thead>\\n        <tr><th><b>\".concat(head, \"</b></th></tr>\\n      </thead>\\n      <tbody>\\n        <tr>\").concat(rows.join(\"</tr>\\n        <tr>\"), \"</tr>\\n      </tbody>\\n    </table>\\n  \");\n}\nexport function createXLSData(data, beforeTableEncode) {\n    if (beforeTableEncode === void 0) { beforeTableEncode = function (i) { return i; }; }\n    if (!data.length)\n        return '';\n    var content = \"<html>\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n  </head >\\n  <body>\\n    \".concat(_renderTableHTMLText(data, beforeTableEncode), \"\\n  </body>\\n</html >\\n\");\n    return content;\n}\nexport function createXMLData(data) {\n    var content = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><!DOCTYPE base>\\n\".concat(_renderXML(data, 'base'), \"\\n\");\n    return content;\n}\nfunction _renderXML(data, tagName, arrayElementTag, spaces) {\n    if (arrayElementTag === void 0) { arrayElementTag = 'element'; }\n    if (spaces === void 0) { spaces = 0; }\n    var tag = normalizeXMLName(tagName);\n    var indentSpaces = indent(spaces);\n    if (data === null || data === undefined) {\n        return \"\".concat(indentSpaces, \"<\").concat(tag, \" />\");\n    }\n    var content = isArray(data)\n        ? data.map(function (item) { return _renderXML(item, arrayElementTag, arrayElementTag, spaces + 2); }).join('\\n')\n        : typeof data === 'object'\n            ? getEntries(data)\n                .map(function (_a) {\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                return _renderXML(value, key, arrayElementTag, spaces + 2);\n            }).join('\\n')\n            : indentSpaces + '  ' + stripHTML(String(data));\n    var contentWithWrapper = \"\".concat(indentSpaces, \"<\").concat(tag, \">\\n\").concat(content, \"\\n\").concat(indentSpaces, \"</\").concat(tag, \">\");\n    return contentWithWrapper;\n}\n","import { assert, isArray, normalizeFileName } from './utils';\nimport { downloadFile } from './processors';\nimport { _prepareData, _createJSONData, createCSVData, createXLSData, createXMLData, _createFieldsMapper } from './converters';\nfunction exportFromJSON(_a) {\n    var data = _a.data, _b = _a.fileName, fileName = _b === void 0 ? 'download' : _b, extension = _a.extension, _c = _a.fileNameFormatter, fileNameFormatter = _c === void 0 ? function (name) { return name.replace(/\\s+/, '_'); } : _c, fields = _a.fields, _d = _a.exportType, exportType = _d === void 0 ? 'txt' : _d, _e = _a.replacer, replacer = _e === void 0 ? null : _e, _f = _a.space, space = _f === void 0 ? 4 : _f, _g = _a.processor, processor = _g === void 0 ? downloadFile : _g, _h = _a.withBOM, withBOM = _h === void 0 ? false : _h, _j = _a.delimiter, delimiter = _j === void 0 ? ',' : _j, _k = _a.beforeTableEncode, beforeTableEncode = _k === void 0 ? function (i) { return i; } : _k;\n    var MESSAGE_IS_ARRAY_FAIL = 'Invalid export data. Please provide an array of objects';\n    var MESSAGE_UNKNOWN_EXPORT_TYPE = \"Can't export unknown data type \".concat(exportType, \".\");\n    var MESSAGE_FIELD_INVALID = \"Can't export string data to \".concat(exportType, \".\");\n    if (typeof data === 'string') {\n        switch (exportType) {\n            case 'txt':\n            case 'css':\n            case 'html': {\n                return processor(data, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : exportType, fileNameFormatter));\n            }\n            default:\n                throw new Error(MESSAGE_FIELD_INVALID);\n        }\n    }\n    var fieldsMapper = _createFieldsMapper(fields);\n    var safeData = fieldsMapper(_prepareData(data));\n    var JSONData = _createJSONData(safeData, replacer, space);\n    switch (exportType) {\n        case 'txt':\n        case 'css':\n        case 'html': {\n            return processor(JSONData, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : exportType, fileNameFormatter));\n        }\n        case 'json': {\n            return processor(JSONData, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'json', fileNameFormatter));\n        }\n        case 'csv': {\n            assert(isArray(safeData), MESSAGE_IS_ARRAY_FAIL);\n            var BOM = '\\ufeff';\n            var CSVData = createCSVData(safeData, delimiter, beforeTableEncode);\n            var content = withBOM ? BOM + CSVData : CSVData;\n            return processor(content, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'csv', fileNameFormatter));\n        }\n        case 'xls': {\n            assert(isArray(safeData), MESSAGE_IS_ARRAY_FAIL);\n            var content = createXLSData(safeData, beforeTableEncode);\n            return processor(content, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'xls', fileNameFormatter));\n        }\n        case 'xml': {\n            var content = createXMLData(safeData);\n            return processor(content, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'xml', fileNameFormatter));\n        }\n        default:\n            throw new Error(MESSAGE_UNKNOWN_EXPORT_TYPE);\n    }\n}\n(function (exportFromJSON) {\n    exportFromJSON.types = {\n        txt: 'txt',\n        css: 'css',\n        html: 'html',\n        json: 'json',\n        csv: 'csv',\n        xls: 'xls',\n        xml: 'xml',\n    };\n    exportFromJSON.processors = { downloadFile: downloadFile };\n})(exportFromJSON || (exportFromJSON = {}));\nexport default exportFromJSON;\n","import exportFromJSON from './exportFromJSON';\nexport default exportFromJSON;\n"],"sourceRoot":""}